{
  "README.html": {
    "href": "README.html",
    "title": "Sportradar.LiveData.Sdk | sportradar.livedata.sdk",
    "keywords": "Sportradar.LiveData.Sdk Documentation Prerequisites This project uses docfx to generate documentation from markdown and XML comments. Install docfx by running the following command. dotnet tool update -g docfx Generation In order to generate the site, run the following command. docfx .\\docfx.json A local version of the site can be served by running the following command. docfx .\\docfx.json --serve"
  },
  "api/Sportradar.LiveData.Sdk.Common.Attributes.AssemblyGitBuild.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Attributes.AssemblyGitBuild.html",
    "title": "Class AssemblyGitBuild | sportradar.livedata.sdk",
    "keywords": "Class AssemblyGitBuild Namespace Sportradar.LiveData.Sdk.Common.Attributes Assembly Sportradar.LiveData.Sdk.dll Attribute specifying the hash of the GIT build which is updated by Bamboo on every build. [AttributeUsage(AttributeTargets.Assembly)] public class AssemblyGitBuild : Attribute Inheritance object Attribute AssemblyGitBuild Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AssemblyGitBuild(string) public AssemblyGitBuild(string txt) Parameters txt string Properties GitBuild public string GitBuild { get; } Property Value string"
  },
  "api/Sportradar.LiveData.Sdk.Common.Attributes.DynamicConfigIgnoreClassAttribute.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Attributes.DynamicConfigIgnoreClassAttribute.html",
    "title": "Class DynamicConfigIgnoreClassAttribute | sportradar.livedata.sdk",
    "keywords": "Class DynamicConfigIgnoreClassAttribute Namespace Sportradar.LiveData.Sdk.Common.Attributes Assembly Sportradar.LiveData.Sdk.dll Attribute specifying that ConfigurationElement can be ignored by the dynamic configuration handling code. [AttributeUsage(AttributeTargets.Class, AllowMultiple = false)] public class DynamicConfigIgnoreClassAttribute : Attribute Inheritance object Attribute DynamicConfigIgnoreClassAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DynamicConfigIgnoreClassAttribute() public DynamicConfigIgnoreClassAttribute()"
  },
  "api/Sportradar.LiveData.Sdk.Common.Attributes.DynamicConfigItemAttribute.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Attributes.DynamicConfigItemAttribute.html",
    "title": "Class DynamicConfigItemAttribute | sportradar.livedata.sdk",
    "keywords": "Class DynamicConfigItemAttribute Namespace Sportradar.LiveData.Sdk.Common.Attributes Assembly Sportradar.LiveData.Sdk.dll Attribute specifying configuration property as dynamic. Dynamic configuration properties can be updated by configuration server in runtime. [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class DynamicConfigItemAttribute : Attribute Inheritance object Attribute DynamicConfigItemAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DynamicConfigItemAttribute() public DynamicConfigItemAttribute() DynamicConfigItemAttribute(string) public DynamicConfigItemAttribute(string name) Parameters name string Properties DefaultValue public object DefaultValue { get; set; } Property Value object Name public string Name { get; set; } Property Value string"
  },
  "api/Sportradar.LiveData.Sdk.Common.Attributes.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Attributes.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Common.Attributes | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Common.Attributes Classes AssemblyGitBuild Attribute specifying the hash of the GIT build which is updated by Bamboo on every build. DynamicConfigIgnoreClassAttribute Attribute specifying that ConfigurationElement can be ignored by the dynamic configuration handling code. DynamicConfigItemAttribute Attribute specifying configuration property as dynamic. Dynamic configuration properties can be updated by configuration server in runtime."
  },
  "api/Sportradar.LiveData.Sdk.Common.CommonLoggerManager.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.CommonLoggerManager.html",
    "title": "Class CommonLoggerManager | sportradar.livedata.sdk",
    "keywords": "Class CommonLoggerManager Namespace Sportradar.LiveData.Sdk.Common Assembly Sportradar.LiveData.Sdk.dll public static class CommonLoggerManager Inheritance object CommonLoggerManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Enabled public static bool Enabled { get; set; } Property Value bool Methods GetLogger(string) public static ILog GetLogger(string type) Parameters type string Returns ILog GetLogger(Type) public static ILog GetLogger(Type type) Parameters type Type Returns ILog"
  },
  "api/Sportradar.LiveData.Sdk.Common.Enums.Priority.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Enums.Priority.html",
    "title": "Enum Priority | sportradar.livedata.sdk",
    "keywords": "Enum Priority Namespace Sportradar.LiveData.Sdk.Common.Enums Assembly Sportradar.LiveData.Sdk.dll Event priority. public enum Priority Fields HIGH = 2 High priority LOW = 1 Low priority UNDEFINED = 0 Undefined Remarks Priorities are not used in this SDK release."
  },
  "api/Sportradar.LiveData.Sdk.Common.Enums.ProtocolProviderType.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Enums.ProtocolProviderType.html",
    "title": "Enum ProtocolProviderType | sportradar.livedata.sdk",
    "keywords": "Enum ProtocolProviderType Namespace Sportradar.LiveData.Sdk.Common.Enums Assembly Sportradar.LiveData.Sdk.dll public enum ProtocolProviderType Fields LIVESCOUT = 1 Live Scout Provider UNKNOWN = 0 Unknown"
  },
  "api/Sportradar.LiveData.Sdk.Common.Enums.SchemaValidationStrictness.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Enums.SchemaValidationStrictness.html",
    "title": "Enum SchemaValidationStrictness | sportradar.livedata.sdk",
    "keywords": "Enum SchemaValidationStrictness Namespace Sportradar.LiveData.Sdk.Common.Enums Assembly Sportradar.LiveData.Sdk.dll Schema validation strictness. Order is important - from least to most strict. Best choice is probably STRICT. This means it will not spend lots of CPU time while processing eventual junk messages. Our schema supports any attributes so this is not a problem. The only issue could present new (unknown) XML elements. public enum SchemaValidationStrictness Fields OFF = 0 No schema validation is performed at all. ON = 1 If schema validation fails the message is still deserialized (but it might fail with an exception later). STRICT = 2 Schema validation failure means the message must be discarded immediately. VERY_STRICT = 3 Same as above except that any warning is also treated as fatal error."
  },
  "api/Sportradar.LiveData.Sdk.Common.Enums.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Enums.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Common.Enums | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Common.Enums Enums Priority Event priority. ProtocolProviderType SchemaValidationStrictness Schema validation strictness. Order is important - from least to most strict. Best choice is probably STRICT. This means it will not spend lots of CPU time while processing eventual junk messages. Our schema supports any attributes so this is not a problem. The only issue could present new (unknown) XML elements."
  },
  "api/Sportradar.LiveData.Sdk.Common.Exceptions.BufferOverflowException.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Exceptions.BufferOverflowException.html",
    "title": "Class BufferOverflowException | sportradar.livedata.sdk",
    "keywords": "Class BufferOverflowException Namespace Sportradar.LiveData.Sdk.Common.Exceptions Assembly Sportradar.LiveData.Sdk.dll Buffer overflow exception. [Serializable] public class BufferOverflowException : InvalidDataReceivedException, ISerializable Inheritance object Exception ApplicationException SdkBaseException InvalidDataReceivedException BufferOverflowException Implements ISerializable Inherited Members SdkBaseException.Identifier Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BufferOverflowException() public BufferOverflowException() BufferOverflowException(string) Initializes a new instance of the BufferOverflowException class public BufferOverflowException(string message) Parameters message string Exception message"
  },
  "api/Sportradar.LiveData.Sdk.Common.Exceptions.DefaultExceptionRenderer.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Exceptions.DefaultExceptionRenderer.html",
    "title": "Class DefaultExceptionRenderer | sportradar.livedata.sdk",
    "keywords": "Class DefaultExceptionRenderer Namespace Sportradar.LiveData.Sdk.Common.Exceptions Assembly Sportradar.LiveData.Sdk.dll Log4Net exception renderer. Includes special exception identifier for all exceptions derived from SdkBaseException. public class DefaultExceptionRenderer : IObjectRenderer Inheritance object DefaultExceptionRenderer Implements IObjectRenderer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Sportradar.LiveData.Sdk.Common.Exceptions.DisconnectedStateException.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Exceptions.DisconnectedStateException.html",
    "title": "Class DisconnectedStateException | sportradar.livedata.sdk",
    "keywords": "Class DisconnectedStateException Namespace Sportradar.LiveData.Sdk.Common.Exceptions Assembly Sportradar.LiveData.Sdk.dll Communication channel disconnected exception. [Serializable] public class DisconnectedStateException : SdkBaseException, ISerializable Inheritance object Exception ApplicationException SdkBaseException DisconnectedStateException Implements ISerializable Inherited Members SdkBaseException.Identifier Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DisconnectedStateException() public DisconnectedStateException() DisconnectedStateException(string) Initializes a new instance of the DisconnectedStateException class public DisconnectedStateException(string message) Parameters message string Exception message"
  },
  "api/Sportradar.LiveData.Sdk.Common.Exceptions.InitException.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Exceptions.InitException.html",
    "title": "Class InitException | sportradar.livedata.sdk",
    "keywords": "Class InitException Namespace Sportradar.LiveData.Sdk.Common.Exceptions Assembly Sportradar.LiveData.Sdk.dll Initialization exception. [Serializable] public class InitException : SdkBaseException, ISerializable Inheritance object Exception ApplicationException SdkBaseException InitException Implements ISerializable Derived NotInitializedException NotStartedException Inherited Members SdkBaseException.Identifier Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InitException() public InitException() InitException(string) Initializes a new instance of the InitException class public InitException(string message) Parameters message string Exception message InitException(string, Exception) Initializes a new instance of the InitException class public InitException(string message, Exception inner_exception) Parameters message string Exception message inner_exception Exception Inner exception"
  },
  "api/Sportradar.LiveData.Sdk.Common.Exceptions.InvalidDataReceivedException.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Exceptions.InvalidDataReceivedException.html",
    "title": "Class InvalidDataReceivedException | sportradar.livedata.sdk",
    "keywords": "Class InvalidDataReceivedException Namespace Sportradar.LiveData.Sdk.Common.Exceptions Assembly Sportradar.LiveData.Sdk.dll Invalid data received exception. [Serializable] public class InvalidDataReceivedException : SdkBaseException, ISerializable Inheritance object Exception ApplicationException SdkBaseException InvalidDataReceivedException Implements ISerializable Derived BufferOverflowException Inherited Members SdkBaseException.Identifier Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InvalidDataReceivedException() public InvalidDataReceivedException() InvalidDataReceivedException(string) Initializes a new instance of the InvalidDataReceivedException class public InvalidDataReceivedException(string message) Parameters message string Exception message"
  },
  "api/Sportradar.LiveData.Sdk.Common.Exceptions.LoginRateLimitingException.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Exceptions.LoginRateLimitingException.html",
    "title": "Class LoginRateLimitingException | sportradar.livedata.sdk",
    "keywords": "Class LoginRateLimitingException Namespace Sportradar.LiveData.Sdk.Common.Exceptions Assembly Sportradar.LiveData.Sdk.dll Login rate limiting threshold exceeded exception. [Serializable] public class LoginRateLimitingException : RateLimitingException, ISerializable Inheritance object Exception ApplicationException SdkBaseException RateLimitingException LoginRateLimitingException Implements ISerializable Inherited Members RateLimitingException.WaitUntil RateLimitingException.Command SdkBaseException.Identifier Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LoginRateLimitingException(TimeSpan, IProtocolRequest) Initializes a new instance of the LoginRateLimitingException class public LoginRateLimitingException(TimeSpan wait_until, IProtocolRequest request) Parameters wait_until TimeSpan Required time to wait in order to pass the rate limiter request IProtocolRequest Login request message that was rejected during rate limiting"
  },
  "api/Sportradar.LiveData.Sdk.Common.Exceptions.NotInitializedException.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Exceptions.NotInitializedException.html",
    "title": "Class NotInitializedException | sportradar.livedata.sdk",
    "keywords": "Class NotInitializedException Namespace Sportradar.LiveData.Sdk.Common.Exceptions Assembly Sportradar.LiveData.Sdk.dll Component not initialized exception. [Serializable] public class NotInitializedException : InitException, ISerializable Inheritance object Exception ApplicationException SdkBaseException InitException NotInitializedException Implements ISerializable Inherited Members SdkBaseException.Identifier Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NotInitializedException() public NotInitializedException() NotInitializedException(string) Initializes a new instance of the NotInitializedException class public NotInitializedException(string message) Parameters message string Exception message"
  },
  "api/Sportradar.LiveData.Sdk.Common.Exceptions.NotStartedException.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Exceptions.NotStartedException.html",
    "title": "Class NotStartedException | sportradar.livedata.sdk",
    "keywords": "Class NotStartedException Namespace Sportradar.LiveData.Sdk.Common.Exceptions Assembly Sportradar.LiveData.Sdk.dll A required component was not started. [Serializable] public class NotStartedException : InitException, ISerializable Inheritance object Exception ApplicationException SdkBaseException InitException NotStartedException Implements ISerializable Inherited Members SdkBaseException.Identifier Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NotStartedException() public NotStartedException() NotStartedException(string) Initializes a new instance of the NotStartedException class public NotStartedException(string message) Parameters message string Exception message"
  },
  "api/Sportradar.LiveData.Sdk.Common.Exceptions.RateLimitingException.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Exceptions.RateLimitingException.html",
    "title": "Class RateLimitingException | sportradar.livedata.sdk",
    "keywords": "Class RateLimitingException Namespace Sportradar.LiveData.Sdk.Common.Exceptions Assembly Sportradar.LiveData.Sdk.dll Rate limit threshold exceeded exception. [Serializable] public class RateLimitingException : SdkBaseException, ISerializable Inheritance object Exception ApplicationException SdkBaseException RateLimitingException Implements ISerializable Derived LoginRateLimitingException Inherited Members SdkBaseException.Identifier Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RateLimitingException() public RateLimitingException() RateLimitingException(TimeSpan, IProtocolRequest) Initializes a new instance of the RateLimitingException class public RateLimitingException(TimeSpan wait_until, IProtocolRequest request) Parameters wait_until TimeSpan Required time to wait in order to pass the rate limiter request IProtocolRequest Request message that was rejected during rate limiting Properties Command Request message that was rejected during rate limiting public IProtocolRequest Command { get; } Property Value IProtocolRequest WaitUntil Required time to wait in order to pass the rate limiter public TimeSpan WaitUntil { get; } Property Value TimeSpan"
  },
  "api/Sportradar.LiveData.Sdk.Common.Exceptions.SdkBaseException.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Exceptions.SdkBaseException.html",
    "title": "Class SdkBaseException | sportradar.livedata.sdk",
    "keywords": "Class SdkBaseException Namespace Sportradar.LiveData.Sdk.Common.Exceptions Assembly Sportradar.LiveData.Sdk.dll SDK base application exception that all other SDK exception should derive from. [Serializable] public class SdkBaseException : ApplicationException, ISerializable Inheritance object Exception ApplicationException SdkBaseException Implements ISerializable Derived DisconnectedStateException InitException InvalidDataReceivedException RateLimitingException SdkConfigException TimeSkewException Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SdkBaseException() public SdkBaseException() SdkBaseException(string) Initializes a new instance of the SdkBaseException class public SdkBaseException(string message) Parameters message string Exception message SdkBaseException(string, Exception) Initializes a new instance of the SdkBaseException class public SdkBaseException(string message, Exception inner_exception) Parameters message string Exception message inner_exception Exception Inner exception Properties Identifier Special exception identifier that can be used for tracking down exception details in the log files. public Guid Identifier { get; protected set; } Property Value Guid"
  },
  "api/Sportradar.LiveData.Sdk.Common.Exceptions.SdkConfigException.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Exceptions.SdkConfigException.html",
    "title": "Class SdkConfigException | sportradar.livedata.sdk",
    "keywords": "Class SdkConfigException Namespace Sportradar.LiveData.Sdk.Common.Exceptions Assembly Sportradar.LiveData.Sdk.dll SDK configuration exception (e.g. configuration setting validation) [Serializable] public class SdkConfigException : SdkBaseException, ISerializable Inheritance object Exception ApplicationException SdkBaseException SdkConfigException Implements ISerializable Inherited Members SdkBaseException.Identifier Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SdkConfigException() public SdkConfigException() SdkConfigException(string) Initializes a new instance of the SdkConfigException class public SdkConfigException(string message) Parameters message string Exception message SdkConfigException(string, Exception) Initializes a new instance of the SdkConfigException class public SdkConfigException(string message, Exception inner_exception) Parameters message string Exception message inner_exception Exception Inner exception"
  },
  "api/Sportradar.LiveData.Sdk.Common.Exceptions.TimeSkewException.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Exceptions.TimeSkewException.html",
    "title": "Class TimeSkewException | sportradar.livedata.sdk",
    "keywords": "Class TimeSkewException Namespace Sportradar.LiveData.Sdk.Common.Exceptions Assembly Sportradar.LiveData.Sdk.dll Client-Server system time skew exception. [Serializable] public class TimeSkewException : SdkBaseException, ISerializable Inheritance object Exception ApplicationException SdkBaseException TimeSkewException Implements ISerializable Inherited Members SdkBaseException.Identifier Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TimeSkewException() public TimeSkewException() TimeSkewException(string) Initializes a new instance of the TimeSkewException class public TimeSkewException(string message) Parameters message string Exception message"
  },
  "api/Sportradar.LiveData.Sdk.Common.Exceptions.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Exceptions.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Common.Exceptions | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Common.Exceptions Classes BufferOverflowException Buffer overflow exception. DefaultExceptionRenderer Log4Net exception renderer. Includes special exception identifier for all exceptions derived from SdkBaseException. DisconnectedStateException Communication channel disconnected exception. InitException Initialization exception. InvalidDataReceivedException Invalid data received exception. LoginRateLimitingException Login rate limiting threshold exceeded exception. NotInitializedException Component not initialized exception. NotStartedException A required component was not started. RateLimitingException Rate limit threshold exceeded exception. SdkBaseException SDK base application exception that all other SDK exception should derive from. SdkConfigException SDK configuration exception (e.g. configuration setting validation) TimeSkewException Client-Server system time skew exception."
  },
  "api/Sportradar.LiveData.Sdk.Common.GlobalSettings.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.GlobalSettings.html",
    "title": "Class GlobalSettings | sportradar.livedata.sdk",
    "keywords": "Class GlobalSettings Namespace Sportradar.LiveData.Sdk.Common Assembly Sportradar.LiveData.Sdk.dll public static class GlobalSettings Inheritance object GlobalSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ERROR_STRING public const string ERROR_STRING = \"Error at ToString()\" Field Value string SDK_LOG_REPOSITORY public const string SDK_LOG_REPOSITORY = \"SdkLogRepository\" Field Value string"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.ConnectionProviderDelegates.AliveCheckNecessaryDelegate.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.ConnectionProviderDelegates.AliveCheckNecessaryDelegate.html",
    "title": "Delegate ConnectionProviderDelegates.AliveCheckNecessaryDelegate | sportradar.livedata.sdk",
    "keywords": "Delegate ConnectionProviderDelegates.AliveCheckNecessaryDelegate Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll public delegate void ConnectionProviderDelegates.AliveCheckNecessaryDelegate(AliveCheckData data) Parameters data AliveCheckData"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.ConnectionProviderDelegates.CommunicationErrorDelegate.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.ConnectionProviderDelegates.CommunicationErrorDelegate.html",
    "title": "Delegate ConnectionProviderDelegates.CommunicationErrorDelegate | sportradar.livedata.sdk",
    "keywords": "Delegate ConnectionProviderDelegates.CommunicationErrorDelegate Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll public delegate void ConnectionProviderDelegates.CommunicationErrorDelegate(Exception exception, bool is_fatal) Parameters exception Exception is_fatal bool"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.ConnectionProviderDelegates.ConnectionDelegate.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.ConnectionProviderDelegates.ConnectionDelegate.html",
    "title": "Delegate ConnectionProviderDelegates.ConnectionDelegate | sportradar.livedata.sdk",
    "keywords": "Delegate ConnectionProviderDelegates.ConnectionDelegate Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll public delegate void ConnectionProviderDelegates.ConnectionDelegate(DateTime? time) Parameters time DateTime?"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.ConnectionProviderDelegates.DataReceivedDelegate.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.ConnectionProviderDelegates.DataReceivedDelegate.html",
    "title": "Delegate ConnectionProviderDelegates.DataReceivedDelegate | sportradar.livedata.sdk",
    "keywords": "Delegate ConnectionProviderDelegates.DataReceivedDelegate Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll public delegate void ConnectionProviderDelegates.DataReceivedDelegate(IMessageIdentifier identifier, string message, ConnectionProviderDelegates.DataReceivedOutcome outcome) Parameters identifier IMessageIdentifier message string outcome ConnectionProviderDelegates.DataReceivedOutcome"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.ConnectionProviderDelegates.DataReceivedOutcome.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.ConnectionProviderDelegates.DataReceivedOutcome.html",
    "title": "Class ConnectionProviderDelegates.DataReceivedOutcome | sportradar.livedata.sdk",
    "keywords": "Class ConnectionProviderDelegates.DataReceivedOutcome Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll public class ConnectionProviderDelegates.DataReceivedOutcome Inheritance object ConnectionProviderDelegates.DataReceivedOutcome Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Outcome public ConnectionProviderDelegates.Outcome Outcome { get; set; } Property Value ConnectionProviderDelegates.Outcome"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.ConnectionProviderDelegates.Outcome.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.ConnectionProviderDelegates.Outcome.html",
    "title": "Enum ConnectionProviderDelegates.Outcome | sportradar.livedata.sdk",
    "keywords": "Enum ConnectionProviderDelegates.Outcome Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll public enum ConnectionProviderDelegates.Outcome Fields CONSUMED = 0 ERROR = 1 INCOMPLETE = 2"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.ConnectionProviderDelegates.SimpleDataReceivedDelegate.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.ConnectionProviderDelegates.SimpleDataReceivedDelegate.html",
    "title": "Delegate ConnectionProviderDelegates.SimpleDataReceivedDelegate | sportradar.livedata.sdk",
    "keywords": "Delegate ConnectionProviderDelegates.SimpleDataReceivedDelegate Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll public delegate void ConnectionProviderDelegates.SimpleDataReceivedDelegate(IMessageIdentifier identifier, string message) Parameters identifier IMessageIdentifier message string"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.ConnectionProviderDelegates.ValidDataCheckNecessaryDelegate.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.ConnectionProviderDelegates.ValidDataCheckNecessaryDelegate.html",
    "title": "Delegate ConnectionProviderDelegates.ValidDataCheckNecessaryDelegate | sportradar.livedata.sdk",
    "keywords": "Delegate ConnectionProviderDelegates.ValidDataCheckNecessaryDelegate Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll public delegate void ConnectionProviderDelegates.ValidDataCheckNecessaryDelegate(string message, ConnectionProviderDelegates.DataReceivedOutcome outcome) Parameters message string outcome ConnectionProviderDelegates.DataReceivedOutcome"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.ConnectionProviderDelegates.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.ConnectionProviderDelegates.html",
    "title": "Class ConnectionProviderDelegates | sportradar.livedata.sdk",
    "keywords": "Class ConnectionProviderDelegates Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll public static class ConnectionProviderDelegates Inheritance object ConnectionProviderDelegates Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.DispatchStatus.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.DispatchStatus.html",
    "title": "Enum DispatchStatus | sportradar.livedata.sdk",
    "keywords": "Enum DispatchStatus Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll public enum DispatchStatus Fields FAILED = 0 SUCCESSFUL = 1"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.DispatcherOperationMode.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.DispatcherOperationMode.html",
    "title": "Enum DispatcherOperationMode | sportradar.livedata.sdk",
    "keywords": "Enum DispatcherOperationMode Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll public enum DispatcherOperationMode Fields ERROR_RECOVERY_PHASE1 = 1 ERROR_RECOVERY_PHASE2 = 2 NORMAL = 0"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.GuidIdentifier.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.GuidIdentifier.html",
    "title": "Struct GuidIdentifier | sportradar.livedata.sdk",
    "keywords": "Struct GuidIdentifier Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll public struct GuidIdentifier : IMessageIdentifier, IEquatable<GuidIdentifier> Implements IMessageIdentifier IEquatable<GuidIdentifier> Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Guid public readonly Guid Guid { get; } Property Value Guid Methods Equals(GuidIdentifier) Indicates whether the current object is equal to another object of the same type. public bool Equals(GuidIdentifier other) Parameters other GuidIdentifier An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Indicates whether this instance and a specified object are equal. public override bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name."
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.ICipherSettings.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.ICipherSettings.html",
    "title": "Interface ICipherSettings | sportradar.livedata.sdk",
    "keywords": "Interface ICipherSettings Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll public interface ICipherSettings : ICloneable Inherited Members ICloneable.Clone() Properties MinCipherStrength int MinCipherStrength { get; } Property Value int MinHashStrength int MinHashStrength { get; } Property Value int MinKeyExchangeStrength int MinKeyExchangeStrength { get; } Property Value int SSLThumbPrint string SSLThumbPrint { get; } Property Value string"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.IClientPersistentState.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.IClientPersistentState.html",
    "title": "Interface IClientPersistentState | sportradar.livedata.sdk",
    "keywords": "Interface IClientPersistentState Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll Persistent state store interface that should be implemented by the client. public interface IClientPersistentState Remarks If this interface is not implemented, XML feed error recovery will not be possible Methods Clear() Clears persistent state store contents. void Clear() Read(string) Retrieves value for the given key from the persistent store. ClientPersistentStateItem Read(string key) Parameters key string Key Returns ClientPersistentStateItem Retrieved item Remarks Returns null if key is not found. Used at error recovery and for double-checking whether persistent state store contents are consistent with buffered values. ReadAll() Returns all persistent state items from the store. IEnumerable<ClientPersistentStateItem> ReadAll() Returns IEnumerable<ClientPersistentStateItem> All persistent state items from the store Remove(string) Removes an item by key void Remove(string key) Parameters key string Key RemoveOld(DateTime) Removes stale persistent state items that haven't been updated in a while. void RemoveOld(DateTime max_age) Parameters max_age DateTime All items older than max_age will be removed from the store Write(IList<ClientPersistentStateItem>) Write batch of key-value pairs into client provided persistent store (DB, file system). void Write(IList<ClientPersistentStateItem> items) Parameters items IList<ClientPersistentStateItem> Batch of items Remarks Overwrites existing values so that stale items can be removed."
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.IConnectionData.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.IConnectionData.html",
    "title": "Interface IConnectionData | sportradar.livedata.sdk",
    "keywords": "Interface IConnectionData Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll public interface IConnectionData : ICloneable Inherited Members ICloneable.Clone() Properties CipherSettings SSL stream cipher settings. ICipherSettings CipherSettings { get; } Property Value ICipherSettings ClientAliveMsgTimeout Client alive message timeout TimeSpan ClientAliveMsgTimeout { get; } Property Value TimeSpan DisallowNonPrintableChars Should non-printable characters in the stream trigger a disconnect. bool DisallowNonPrintableChars { get; } Property Value bool DoValidityCheck Should connection provider do a quick validity check. bool DoValidityCheck { get; } Property Value bool Encoding Communication channel character encoding Encoding Encoding { get; } Property Value Encoding Hostname Server name string Hostname { get; } Property Value string InvalidDataReconnectWait Delay before we try reconnecting to server after we received some garbage data TimeSpan InvalidDataReconnectWait { get; } Property Value TimeSpan MaxReconnectWait Delay before we try reconnecting to server after we got disconnected (max) TimeSpan MaxReconnectWait { get; } Property Value TimeSpan MinReconnectWait Delay before we try reconnecting to server after we got disconnected (min) TimeSpan MinReconnectWait { get; } Property Value TimeSpan Port Server port number int Port { get; } Property Value int ReceiveBufferSize Message line buffer size. Complete message line should fit in here. int ReceiveBufferSize { get; } Property Value int ReceiveTimeout TimeSpan ReceiveTimeout { get; } Property Value TimeSpan SendTimeout Amount of time to wait for (socket) send operation to complete successfully TimeSpan SendTimeout { get; } Property Value TimeSpan ServerAliveMsgTimeout Server alive message timeout TimeSpan ServerAliveMsgTimeout { get; } Property Value TimeSpan TotalBufferSize Total message buffer size. A complete XML message should fit in here. int TotalBufferSize { get; } Property Value int UseSSL Use secure sockets for communication. bool UseSSL { get; } Property Value bool"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.IConnectionProvider.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.IConnectionProvider.html",
    "title": "Interface IConnectionProvider | sportradar.livedata.sdk",
    "keywords": "Interface IConnectionProvider Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll Connection provider public interface IConnectionProvider Properties ConnectionData Obtain current connection data IConnectionData ConnectionData { get; } Property Value IConnectionData IsStarted Obtain whether the connection provider is running. bool IsStarted { get; } Property Value bool RxEnabled Whether reading from input stream is enabled or not (i.e. input msg queue going over the high watermark should disable all RX) ManualResetEventSlim RxEnabled { get; } Property Value ManualResetEventSlim Methods Error(string, string) Start immediate error recovery. Usually due to an error on the upper layer. [Obsolete] void Error(string opt_protocol_message, string log_message) Parameters opt_protocol_message string Optional message that should be sent before disconnection log_message string Informative error description IsReceiveThread() bool IsReceiveThread() Returns bool SendMessage(string, bool) Deliver a protocol unit (as a string) to the server. bool SendMessage(string message, bool only_try = false) Parameters message string protocol unit (in string format) only_try bool when true do not throw any exceptions Returns bool Exceptions DisconnectedStateException If we are currently disconnected Start() Start the connection provider (connects to the server and start the automatic reconnection). ConnectionData must be initialized or else an exception is thrown. void Start() Start(IConnectionData) Start the connection provider (connects to the server and start the automatic reconnection). void Start(IConnectionData connection_data) Parameters connection_data IConnectionData connection data Stop(string) Stop the connection provider. Opposite of Start(). void Stop(string opt_protocol_message) Parameters opt_protocol_message string Optional message that should be sent before disconnection WaitForConnection() Block and wait until the connection is established. bool WaitForConnection() Returns bool true if the connection is established; false (should rarely happen) in case of a race-condition or when wait_time times out Remarks The method might return true and the connection can get broken right after that, so do not assume after that method we are for sure in a \"connected\" state, it might have been just a temporary state. WaitForConnection(TimeSpan) bool WaitForConnection(TimeSpan wait_time) Parameters wait_time TimeSpan Returns bool WaitForDisconnection() Block and wait until the connection is not established anymore. bool WaitForDisconnection() Returns bool WaitForDisconnection(TimeSpan) bool WaitForDisconnection(TimeSpan wait_time) Parameters wait_time TimeSpan Returns bool Events OnAliveCheckNecessary Invoked when the protocol requires an alive check. event ConnectionProviderDelegates.AliveCheckNecessaryDelegate OnAliveCheckNecessary Event Type ConnectionProviderDelegates.AliveCheckNecessaryDelegate OnCommunicationError Invoked when a communication error on the physical connection is detected event ConnectionProviderDelegates.CommunicationErrorDelegate OnCommunicationError Event Type ConnectionProviderDelegates.CommunicationErrorDelegate OnConnected Invoked when the physical connection to the server is established. event ConnectionProviderDelegates.ConnectionDelegate OnConnected Event Type ConnectionProviderDelegates.ConnectionDelegate OnDisconnected Invoked when the physical connection to the server is dropped. event ConnectionProviderDelegates.ConnectionDelegate OnDisconnected Event Type ConnectionProviderDelegates.ConnectionDelegate OnMessageReceived Invoked when a new protocol data unit in string format is received. event ConnectionProviderDelegates.DataReceivedDelegate OnMessageReceived Event Type ConnectionProviderDelegates.DataReceivedDelegate OnValidDataCheckNecessary Invoked when the protocol requires a check for valid data. event ConnectionProviderDelegates.ValidDataCheckNecessaryDelegate OnValidDataCheckNecessary Event Type ConnectionProviderDelegates.ValidDataCheckNecessaryDelegate"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.IDeadLetterQueue.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.IDeadLetterQueue.html",
    "title": "Interface IDeadLetterQueue | sportradar.livedata.sdk",
    "keywords": "Interface IDeadLetterQueue Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll Dead Letter queue interface that should be implemented by the client. public interface IDeadLetterQueue Remarks Implementation of this interface is optional for the client Methods Enqueue(EntityBase) Enqueues a message into dead letter queue after the message was removed from the poison queue and could not be delivered successfully to the client. void Enqueue(EntityBase failed_msg) Parameters failed_msg EntityBase Failed msg"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.IFeedDispatcher.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.IFeedDispatcher.html",
    "title": "Interface IFeedDispatcher | sportradar.livedata.sdk",
    "keywords": "Interface IFeedDispatcher Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll public interface IFeedDispatcher Properties ProviderType ProtocolProviderType ProviderType { get; } Property Value ProtocolProviderType Methods DispatchEntity(EntityBase) DispatchStatus DispatchEntity(EntityBase entity) Parameters entity EntityBase Returns DispatchStatus"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.ILoggerData.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.ILoggerData.html",
    "title": "Interface ILoggerData | sportradar.livedata.sdk",
    "keywords": "Interface ILoggerData Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll public interface ILoggerData : ICloneable Inherited Members ICloneable.Clone() Properties AlertLogLevel Specifies log level threshold used while logging alert messages. Level AlertLogLevel { get; } Property Value Level ClientInteractionLogLevel Specifies log level threshold used while logging client interaction messages. Level ClientInteractionLogLevel { get; } Property Value Level DeadLetterLogLevel Specifies log level threshold used while logging dead letter messages. Level DeadLetterLogLevel { get; } Property Value Level InvalidMsgLogLevel Specifies log level threshold used while logging invalid/corrupt messages. Level InvalidMsgLogLevel { get; } Property Value Level LoggingFeedName Prefix used in logging string LoggingFeedName { get; } Property Value string TrafficLogLevel Specifies log level threshold used while logging incoming and outgoing traffic (live feed messages). Level TrafficLogLevel { get; } Property Value Level"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.IMessageDispatcher.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.IMessageDispatcher.html",
    "title": "Interface IMessageDispatcher | sportradar.livedata.sdk",
    "keywords": "Interface IMessageDispatcher Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll public interface IMessageDispatcher : IStartable Inherited Members IStartable.Start() IStartable.Stop() Properties HealthStatus bool HealthStatus { get; } Property Value bool Methods EnqueueEntity(ProtocolProviderType, EntityBase) void EnqueueEntity(ProtocolProviderType provider, EntityBase entity) Parameters provider ProtocolProviderType entity EntityBase RegisterFeedDispatchers(IList<IFeedDispatcher>) void RegisterFeedDispatchers(IList<IFeedDispatcher> feed_dispatchers) Parameters feed_dispatchers IList<IFeedDispatcher> Events OnDispatcherHealthStatusChanged event MessageDispatcherDelegates.DispatcherHealthStatusDelegate OnDispatcherHealthStatusChanged Event Type MessageDispatcherDelegates.DispatcherHealthStatusDelegate"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.IMessageIdentifier.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.IMessageIdentifier.html",
    "title": "Interface IMessageIdentifier | sportradar.livedata.sdk",
    "keywords": "Interface IMessageIdentifier Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll public interface IMessageIdentifier"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.IPersistentStateBuffer.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.IPersistentStateBuffer.html",
    "title": "Interface IPersistentStateBuffer | sportradar.livedata.sdk",
    "keywords": "Interface IPersistentStateBuffer Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll Persistent state buffer interface that buffers the underlying client persistent state store. public interface IPersistentStateBuffer : IStartable Inherited Members IStartable.Start() IStartable.Stop() Properties TestStatus Returns true if persistent state buffer is in consistent state and if the underlying client state store is functioning properly. bool TestStatus { get; } Property Value bool Methods Clear() Clears persistent state store contents. void Clear() GetAllProviderItems(ProtocolProviderType) Returns all persistent state items that belong to specific provider. IEnumerable<PersistentStateItem> GetAllProviderItems(ProtocolProviderType provider_type) Parameters provider_type ProtocolProviderType Provider type Returns IEnumerable<PersistentStateItem> All persistent state items that belong to specific provider. Read(PersistentStateItemKey) Retrieves value for the given key from the persistent store. PersistentStateItem Read(PersistentStateItemKey key) Parameters key PersistentStateItemKey Key Returns PersistentStateItem Retrieved item Remarks Returns null if key is not found. Used at error recovery and for double-checking whether persistent state store contents are consistent with buffered values. Remove(PersistentStateItemKey) Removes an item by key void Remove(PersistentStateItemKey key) Parameters key PersistentStateItemKey Key Write(PersistentStateItem) Write persistent state item into client provided persistent store (DB, file system). void Write(PersistentStateItem item) Parameters item PersistentStateItem Persistent state item Remarks Overwrites existing values so that stale items can be removed. Events OnPersistentStateStatusChanged Fires event whenever persistent state buffer encounters an error condition (e.g. underlying state store error) event PersistentStateDelegates.PersistentStateStatusChangedDelegate OnPersistentStateStatusChanged Event Type PersistentStateDelegates.PersistentStateStatusChangedDelegate"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.IPoisonQueue.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.IPoisonQueue.html",
    "title": "Interface IPoisonQueue | sportradar.livedata.sdk",
    "keywords": "Interface IPoisonQueue Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll Poison queue interface public interface IPoisonQueue Properties ProviderType Poison queue must be assigned a to particular feed provider. ProtocolProviderType ProviderType { get; } Property Value ProtocolProviderType Methods Enqueue(PoisonQueueElt) Enqueue a new poison element. Throws PoisonQueueException if there is already poison elements for the same match enqueued. void Enqueue(PoisonQueueElt obj) Parameters obj PoisonQueueElt Poison element IsMatchPoisonous(IList<long>) Checks whether there is a poison element linked to this match bool IsMatchPoisonous(IList<long> match_ids) Parameters match_ids IList<long> Match ids Returns bool Returns true if there is a poison element linked to this match WaitForElementRemoved(TimeSpan) Waits until an element is removed (promoted or deceased) from the poison queue. bool WaitForElementRemoved(TimeSpan wait_timeout) Parameters wait_timeout TimeSpan Wait timeout Returns bool True if the wait was successful or false if the timeout occurred. Events OnPoisonQueueEltDead Event raised whenever an element is to be dumped into dead letter queue. event PoisonQueueDelegates.PoisonQueueEltDead OnPoisonQueueEltDead Event Type PoisonQueueDelegates.PoisonQueueEltDead OnPoisonQueueEltPromoted Event raised whenever an element is promoted from Poison queue and moved back into Main queue. event PoisonQueueDelegates.PoisonQueueEltPromoted OnPoisonQueueEltPromoted Event Type PoisonQueueDelegates.PoisonQueueEltPromoted"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.IProtocolBase.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.IProtocolBase.html",
    "title": "Interface IProtocolBase | sportradar.livedata.sdk",
    "keywords": "Interface IProtocolBase Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll All request and reply messages implement this interface. public interface IProtocolBase"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.IProtocolData.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.IProtocolData.html",
    "title": "Interface IProtocolData | sportradar.livedata.sdk",
    "keywords": "Interface IProtocolData Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll public interface IProtocolData : ICloneable Inherited Members ICloneable.Clone() Properties BookmakerId Bookmaker ID long BookmakerId { get; } Property Value long EventRequestLimiter Limits the number of matches that a client can reference in a given time frame (get status, meta info, book, subscribe or error recovery). IRateGate EventRequestLimiter { get; } Property Value IRateGate LoginLimiter Limits the number of logins a client can perform in a given time frame. IRateGate LoginLimiter { get; } Property Value IRateGate MaxTimeSkew Max message timestamp skew. Zero to disable the check. TimeSpan MaxTimeSkew { get; } Property Value TimeSpan RequestLimiter Limits the number of requests a client can send in a given time frame. IRateGate RequestLimiter { get; } Property Value IRateGate RestartOnParseError If true, the feed will reconnect on any parse error bool RestartOnParseError { get; } Property Value bool SchemaStrictness XSD schema validation strictness. Can be OFF, ON, STRICT or VERY STRICT SchemaValidationStrictness SchemaStrictness { get; } Property Value SchemaValidationStrictness ScoutPassword Scout client password SecureString ScoutPassword { get; } Property Value SecureString ScoutUsername Scout client username string ScoutUsername { get; } Property Value string SendClientTimeInRequest Whether client UTC time should be included in every request message (LiveOdds). bool SendClientTimeInRequest { get; } Property Value bool SendClientVersionInLogin Whether client version should be sent in login. bool SendClientVersionInLogin { get; } Property Value bool"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.IProtocolRequest.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.IProtocolRequest.html",
    "title": "Interface IProtocolRequest | sportradar.livedata.sdk",
    "keywords": "Interface IProtocolRequest Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll All request messages implement this interface. public interface IProtocolRequest : IProtocolBase Methods GetMessageType() Get type of the message. string GetMessageType() Returns string A human readable message type."
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.IProtocolResponse.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.IProtocolResponse.html",
    "title": "Interface IProtocolResponse | sportradar.livedata.sdk",
    "keywords": "Interface IProtocolResponse Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll public interface IProtocolResponse : IProtocolBase Methods GetMessageType() string GetMessageType() Returns string"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.IRateGate.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.IRateGate.html",
    "title": "Interface IRateGate | sportradar.livedata.sdk",
    "keywords": "Interface IRateGate Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll public interface IRateGate : IDisposable Inherited Members IDisposable.Dispose() Properties Name string Name { get; } Property Value string Methods Peek() TimeSpan Peek() Returns TimeSpan WaitToProceed(int) void WaitToProceed(int count) Parameters count int WaitToProceed(TimeSpan, int) bool WaitToProceed(TimeSpan timeout, int count) Parameters timeout TimeSpan count int Returns bool"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.IStartable.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.IStartable.html",
    "title": "Interface IStartable | sportradar.livedata.sdk",
    "keywords": "Interface IStartable Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll Interface specifying that a component is startable, i.e. should first be started before any other call are made and stopped at the end. public interface IStartable Methods Start() Start component. void Start() Remarks The component should be initialized first. Stop() Stop / shutdown component. void Stop()"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.ITimeKeeper.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.ITimeKeeper.html",
    "title": "Interface ITimeKeeper | sportradar.livedata.sdk",
    "keywords": "Interface ITimeKeeper Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll public interface ITimeKeeper Properties LastServerTime DateTime LastServerTime { get; } Property Value DateTime LastSyncTime DateTime LastSyncTime { get; } Property Value DateTime ServerTime DateTime? ServerTime { get; } Property Value DateTime? Methods CheckTime(DateTime, DateTime) TimeKeeperResponse CheckTime(DateTime server_time, DateTime received_time = default) Parameters server_time DateTime received_time DateTime Returns TimeKeeperResponse NewTime(DateTime, DateTime) TimeKeeperResponse NewTime(DateTime server_time, DateTime received_time = default) Parameters server_time DateTime received_time DateTime Returns TimeKeeperResponse"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.MessageDispatcherDelegates.DispatcherHealthStatusDelegate.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.MessageDispatcherDelegates.DispatcherHealthStatusDelegate.html",
    "title": "Delegate MessageDispatcherDelegates.DispatcherHealthStatusDelegate | sportradar.livedata.sdk",
    "keywords": "Delegate MessageDispatcherDelegates.DispatcherHealthStatusDelegate Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll public delegate void MessageDispatcherDelegates.DispatcherHealthStatusDelegate(bool health_status) Parameters health_status bool"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.MessageDispatcherDelegates.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.MessageDispatcherDelegates.html",
    "title": "Class MessageDispatcherDelegates | sportradar.livedata.sdk",
    "keywords": "Class MessageDispatcherDelegates Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll public static class MessageDispatcherDelegates Inheritance object MessageDispatcherDelegates Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.MessageIdentifier.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.MessageIdentifier.html",
    "title": "Class MessageIdentifier | sportradar.livedata.sdk",
    "keywords": "Class MessageIdentifier Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll public static class MessageIdentifier Inheritance object MessageIdentifier Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateIdentifier() public static IMessageIdentifier CreateIdentifier() Returns IMessageIdentifier"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.PersistentStateDelegates.PersistentStateStatusChangedDelegate.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.PersistentStateDelegates.PersistentStateStatusChangedDelegate.html",
    "title": "Delegate PersistentStateDelegates.PersistentStateStatusChangedDelegate | sportradar.livedata.sdk",
    "keywords": "Delegate PersistentStateDelegates.PersistentStateStatusChangedDelegate Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll public delegate void PersistentStateDelegates.PersistentStateStatusChangedDelegate(bool test_status) Parameters test_status bool"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.PersistentStateDelegates.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.PersistentStateDelegates.html",
    "title": "Class PersistentStateDelegates | sportradar.livedata.sdk",
    "keywords": "Class PersistentStateDelegates Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll public static class PersistentStateDelegates Inheritance object PersistentStateDelegates Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.PoisonQueueDelegates.PoisonQueueEltDead.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.PoisonQueueDelegates.PoisonQueueEltDead.html",
    "title": "Delegate PoisonQueueDelegates.PoisonQueueEltDead | sportradar.livedata.sdk",
    "keywords": "Delegate PoisonQueueDelegates.PoisonQueueEltDead Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll public delegate void PoisonQueueDelegates.PoisonQueueEltDead(PoisonQueueElt elt) Parameters elt PoisonQueueElt"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.PoisonQueueDelegates.PoisonQueueEltPromoted.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.PoisonQueueDelegates.PoisonQueueEltPromoted.html",
    "title": "Delegate PoisonQueueDelegates.PoisonQueueEltPromoted | sportradar.livedata.sdk",
    "keywords": "Delegate PoisonQueueDelegates.PoisonQueueEltPromoted Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll public delegate void PoisonQueueDelegates.PoisonQueueEltPromoted(PoisonQueueElt elt) Parameters elt PoisonQueueElt"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.PoisonQueueDelegates.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.PoisonQueueDelegates.html",
    "title": "Class PoisonQueueDelegates | sportradar.livedata.sdk",
    "keywords": "Class PoisonQueueDelegates Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll public static class PoisonQueueDelegates Inheritance object PoisonQueueDelegates Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.QueueLimitAction.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.QueueLimitAction.html",
    "title": "Enum QueueLimitAction | sportradar.livedata.sdk",
    "keywords": "Enum QueueLimitAction Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll Queue limit action (whether a limit was reached or retreated) public enum QueueLimitAction Fields REACHED = 0 Queue limit was reached RETREATED = 1 Queue limit was retreated"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.QueueLimitEventArgs.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.QueueLimitEventArgs.html",
    "title": "Class QueueLimitEventArgs | sportradar.livedata.sdk",
    "keywords": "Class QueueLimitEventArgs Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll Event arguments passed with the QueueLimitType public class QueueLimitEventArgs : EventArgs Inheritance object EventArgs QueueLimitEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors QueueLimitEventArgs(string, QueueLimitType, QueueLimitAction, int, int) QueueLimitEventArgs constructor. public QueueLimitEventArgs(string queue_name, QueueLimitType type, QueueLimitAction action, int old_count, int new_count) Parameters queue_name string name of the queue type QueueLimitType type of the limit action QueueLimitAction action of the limit old_count int old count new_count int new (current) count Properties Action Whether queue limit was reached or retreated public QueueLimitAction Action { get; } Property Value QueueLimitAction NewCount Current queue size public int NewCount { get; } Property Value int OldCount Previous queue size public int OldCount { get; } Property Value int QueueName Queue name public string QueueName { get; } Property Value string Type Type of queue limit reached or retreated public QueueLimitType Type { get; } Property Value QueueLimitType"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.QueueLimitType.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.QueueLimitType.html",
    "title": "Enum QueueLimitType | sportradar.livedata.sdk",
    "keywords": "Enum QueueLimitType Namespace Sportradar.LiveData.Sdk.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll Type of queue size limit public enum QueueLimitType Fields HIGH = 2 High threshold (almost at the full capacity) LOW = 1 Queue size at low threshold (reason for being worried) NORMAL = 0 Queue size below low threshold (not getting filled up)"
  },
  "api/Sportradar.LiveData.Sdk.Common.Interfaces.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Interfaces.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Common.Interfaces | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Common.Interfaces Classes ConnectionProviderDelegates ConnectionProviderDelegates.DataReceivedOutcome MessageDispatcherDelegates MessageIdentifier PersistentStateDelegates PoisonQueueDelegates QueueLimitEventArgs Event arguments passed with the QueueLimitType Structs GuidIdentifier Interfaces ICipherSettings IClientPersistentState Persistent state store interface that should be implemented by the client. IConnectionData IConnectionProvider Connection provider IDeadLetterQueue Dead Letter queue interface that should be implemented by the client. IFeedDispatcher ILoggerData IMessageDispatcher IMessageIdentifier IPersistentStateBuffer Persistent state buffer interface that buffers the underlying client persistent state store. IPoisonQueue Poison queue interface IProtocolBase All request and reply messages implement this interface. IProtocolData IProtocolRequest All request messages implement this interface. IProtocolResponse IRateGate IStartable Interface specifying that a component is startable, i.e. should first be started before any other call are made and stopped at the end. ITimeKeeper Enums ConnectionProviderDelegates.Outcome DispatchStatus DispatcherOperationMode QueueLimitAction Queue limit action (whether a limit was reached or retreated) QueueLimitType Type of queue size limit Delegates ConnectionProviderDelegates.AliveCheckNecessaryDelegate ConnectionProviderDelegates.CommunicationErrorDelegate ConnectionProviderDelegates.ConnectionDelegate ConnectionProviderDelegates.DataReceivedDelegate ConnectionProviderDelegates.SimpleDataReceivedDelegate ConnectionProviderDelegates.ValidDataCheckNecessaryDelegate MessageDispatcherDelegates.DispatcherHealthStatusDelegate PersistentStateDelegates.PersistentStateStatusChangedDelegate PoisonQueueDelegates.PoisonQueueEltDead PoisonQueueDelegates.PoisonQueueEltPromoted"
  },
  "api/Sportradar.LiveData.Sdk.Common.LoggerData.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.LoggerData.html",
    "title": "Class LoggerData | sportradar.livedata.sdk",
    "keywords": "Class LoggerData Namespace Sportradar.LiveData.Sdk.Common Assembly Sportradar.LiveData.Sdk.dll public class LoggerData : ILoggerData, ICloneable Inheritance object LoggerData Implements ILoggerData ICloneable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LoggerData() public LoggerData() Properties AlertLogLevel Specifies log level threshold used while logging alert messages. public Level AlertLogLevel { get; set; } Property Value Level ClientInteractionLogLevel Specifies log level threshold used while logging client interaction messages. public Level ClientInteractionLogLevel { get; set; } Property Value Level ConfigLogLevel public Level ConfigLogLevel { get; set; } Property Value Level DeadLetterLogLevel Specifies log level threshold used while logging dead letter messages. public Level DeadLetterLogLevel { get; set; } Property Value Level InvalidMsgLogLevel Specifies log level threshold used while logging invalid/corrupt messages. public Level InvalidMsgLogLevel { get; set; } Property Value Level LoggingFeedName Prefix used in logging public string LoggingFeedName { get; set; } Property Value string StatsLogLevel public Level StatsLogLevel { get; set; } Property Value Level TrafficLogLevel Specifies log level threshold used while logging incoming and outgoing traffic (live feed messages). public Level TrafficLogLevel { get; set; } Property Value Level Methods Clone() Creates a new object that is a copy of the current instance. public object Clone() Returns object A new object that is a copy of this instance."
  },
  "api/Sportradar.LiveData.Sdk.Common.Types.AliveCheckData.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Types.AliveCheckData.html",
    "title": "Class AliveCheckData | sportradar.livedata.sdk",
    "keywords": "Class AliveCheckData Namespace Sportradar.LiveData.Sdk.Common.Types Assembly Sportradar.LiveData.Sdk.dll public class AliveCheckData Inheritance object AliveCheckData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AliveCheckData() public AliveCheckData() Properties Handled public bool Handled { get; set; } Property Value bool MessageToSend public string MessageToSend { get; set; } Property Value string"
  },
  "api/Sportradar.LiveData.Sdk.Common.Types.BetOutcome.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Types.BetOutcome.html",
    "title": "Class BetOutcome | sportradar.livedata.sdk",
    "keywords": "Class BetOutcome Namespace Sportradar.LiveData.Sdk.Common.Types Assembly Sportradar.LiveData.Sdk.dll Localized bet outcome / odds field. [Serializable] public class BetOutcome Inheritance object BetOutcome Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BetOutcome(string) Initializes a new instance of the BetOutcome class public BetOutcome(string type) Parameters type string Odds field name Properties Translation Localized odds field name (e.g. en=\"u\", fi=\"u\", ru=\"M\") public LocalizedString Translation { get; } Property Value LocalizedString Type Odds field name (e.g. \"u\" for under) public string Type { get; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.Common.Types.BetTypeKey.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Types.BetTypeKey.html",
    "title": "Class BetTypeKey | sportradar.livedata.sdk",
    "keywords": "Class BetTypeKey Namespace Sportradar.LiveData.Sdk.Common.Types Assembly Sportradar.LiveData.Sdk.dll Bet type key (e.g. \"3w\" = 2) [Serializable] public class BetTypeKey : IEquatable<BetTypeKey> Inheritance object BetTypeKey Implements IEquatable<BetTypeKey> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BetTypeKey(long) Initializes a new instance of the BetTypeKey class public BetTypeKey(long odds_type_id) Parameters odds_type_id long Bet type id BetTypeKey(long, long?) Initializes a new instance of the BetTypeKey class public BetTypeKey(long odds_type_id, long? odds_sub_type) Parameters odds_type_id long Bet type id odds_sub_type long? Optional bet subtype id Properties BetSubType Optional bet subtype id (e.g. type=\"ft3w\" typeid=\"6\" subtype=\"13\" freetext=\"Next goal\") public long? BetSubType { get; } Property Value long? BetTypeId Unique bet type id (e.g. type=\"3w\", typeid=\"2\") public long BetTypeId { get; } Property Value long Methods Equals(BetTypeKey) Check for equality. public bool Equals(BetTypeKey other) Parameters other BetTypeKey other object Returns bool true when equal; false else Equals(object) Check for equality. public override bool Equals(object obj) Parameters obj object other object Returns bool true when equal; false else GetHashCode() Serves as a hash function for a particular type. public override int GetHashCode() Returns int Hash for current object ToString() Returns a string that represents this instance. public override string ToString() Returns string A string that represents this instance."
  },
  "api/Sportradar.LiveData.Sdk.Common.Types.BetValue.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Types.BetValue.html",
    "title": "Class BetValue | sportradar.livedata.sdk",
    "keywords": "Class BetValue Namespace Sportradar.LiveData.Sdk.Common.Types Assembly Sportradar.LiveData.Sdk.dll Value associated with a specified BetTypeKey. This includes localized bet type name (e.g. en=\"hc\", fi=\"Taaoitus\") and localized outcomes/odds fields (e.g. \"1\", \"x\", \"2\" in different languages) [Serializable] public class BetValue : ICloneable Inheritance object BetValue Implements ICloneable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BetValue(string, LocalizedString, BetTypeKey) Initializes a new instance of the BetValue class public BetValue(string type, LocalizedString name, BetTypeKey key) Parameters type string Odds type name name LocalizedString Odds internationalized name key BetTypeKey Odds type key Properties Key Corresponding key. public BetTypeKey Key { get; } Property Value BetTypeKey Name Localized bet type name public LocalizedString Name { get; } Property Value LocalizedString Outcomes Collection of localized outcomes / odds fields public IDictionary<string, BetOutcome> Outcomes { get; } Property Value IDictionary<string, BetOutcome> Type Odds type name (international, e.g. \"3w\", \"to\", \"hc\" ); public string Type { get; } Property Value string Methods Clone() Creates a new object that is a copy of the current instance. public object Clone() Returns object A new object that is a copy of this instance. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.Common.Types.CipherSettings.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Types.CipherSettings.html",
    "title": "Class CipherSettings | sportradar.livedata.sdk",
    "keywords": "Class CipherSettings Namespace Sportradar.LiveData.Sdk.Common.Types Assembly Sportradar.LiveData.Sdk.dll public class CipherSettings : ICipherSettings, ICloneable Inheritance object CipherSettings Implements ICipherSettings ICloneable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CipherSettings() public CipherSettings() Properties MinCipherStrength public virtual int MinCipherStrength { get; set; } Property Value int MinHashStrength public virtual int MinHashStrength { get; set; } Property Value int MinKeyExchangeStrength public virtual int MinKeyExchangeStrength { get; set; } Property Value int SSLThumbPrint public virtual string SSLThumbPrint { get; set; } Property Value string Methods Clone() Creates a new object that is a copy of the current instance. public object Clone() Returns object A new object that is a copy of this instance."
  },
  "api/Sportradar.LiveData.Sdk.Common.Types.ClientPersistentStateItem.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Types.ClientPersistentStateItem.html",
    "title": "Class ClientPersistentStateItem | sportradar.livedata.sdk",
    "keywords": "Class ClientPersistentStateItem Namespace Sportradar.LiveData.Sdk.Common.Types Assembly Sportradar.LiveData.Sdk.dll Client persistent state item. [Serializable] public sealed class ClientPersistentStateItem Inheritance object ClientPersistentStateItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors ClientPersistentStateItem(string, byte[], DateTime) Initializes a new instance of the ClientPersistentStateItem class. public ClientPersistentStateItem(string key, byte[] value, DateTime item_last_updated) Parameters key string The key value byte[] The value item_last_updated DateTime The time the item was last updated Exceptions ArgumentException key Properties ItemLastUpdated Time when item was last updated. public DateTime ItemLastUpdated { get; set; } Property Value DateTime Key Persistent state item key. public string Key { get; set; } Property Value string Value Persistent state item value. public byte[] Value { get; set; } Property Value byte[] Methods GetObjectData(SerializationInfo, StreamingContext) public void GetObjectData(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo context StreamingContext"
  },
  "api/Sportradar.LiveData.Sdk.Common.Types.ConfigItem.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Types.ConfigItem.html",
    "title": "Class ConfigItem | sportradar.livedata.sdk",
    "keywords": "Class ConfigItem Namespace Sportradar.LiveData.Sdk.Common.Types Assembly Sportradar.LiveData.Sdk.dll public class ConfigItem Inheritance object ConfigItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Key public string Key { get; set; } Property Value string Value public string Value { get; set; } Property Value string"
  },
  "api/Sportradar.LiveData.Sdk.Common.Types.ConnectionData.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Types.ConnectionData.html",
    "title": "Class ConnectionData | sportradar.livedata.sdk",
    "keywords": "Class ConnectionData Namespace Sportradar.LiveData.Sdk.Common.Types Assembly Sportradar.LiveData.Sdk.dll public class ConnectionData : IConnectionData, ICloneable Inheritance object ConnectionData Implements IConnectionData ICloneable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ConnectionData() public ConnectionData() Properties CipherSettings SSL stream cipher settings. public virtual ICipherSettings CipherSettings { get; set; } Property Value ICipherSettings ClientAliveMsgTimeout Client alive message timeout public virtual TimeSpan ClientAliveMsgTimeout { get; set; } Property Value TimeSpan DisallowNonPrintableChars Should non-printable characters in the stream trigger a disconnect. public virtual bool DisallowNonPrintableChars { get; set; } Property Value bool DoValidityCheck Should connection provider do a quick validity check. public virtual bool DoValidityCheck { get; set; } Property Value bool Encoding Communication channel character encoding public virtual Encoding Encoding { get; set; } Property Value Encoding Hostname Server name public virtual string Hostname { get; set; } Property Value string InvalidDataReconnectWait Delay before we try reconnecting to server after we received some garbage data public virtual TimeSpan InvalidDataReconnectWait { get; set; } Property Value TimeSpan MaxReconnectWait Delay before we try reconnecting to server after we got disconnected (max) public virtual TimeSpan MaxReconnectWait { get; set; } Property Value TimeSpan MinReconnectWait Delay before we try reconnecting to server after we got disconnected (min) public virtual TimeSpan MinReconnectWait { get; set; } Property Value TimeSpan Port Server port number public virtual int Port { get; set; } Property Value int ReceiveBufferSize Message line buffer size. Complete message line should fit in here. public virtual int ReceiveBufferSize { get; set; } Property Value int ReceiveTimeout Amount of time to wait for (socket) receive operation to complete successfully public virtual TimeSpan ReceiveTimeout { get; set; } Property Value TimeSpan SendTimeout Amount of time to wait for (socket) send operation to complete successfully public virtual TimeSpan SendTimeout { get; set; } Property Value TimeSpan ServerAliveMsgTimeout Server alive message timeout public virtual TimeSpan ServerAliveMsgTimeout { get; set; } Property Value TimeSpan TotalBufferSize Total message buffer size. A complete XML message should fit in here. public virtual int TotalBufferSize { get; set; } Property Value int UseSSL Use secure sockets for communication. public virtual bool UseSSL { get; set; } Property Value bool Methods Clone() Creates a new object that is a copy of the current instance. public virtual object Clone() Returns object A new object that is a copy of this instance."
  },
  "api/Sportradar.LiveData.Sdk.Common.Types.EntityBase.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Types.EntityBase.html",
    "title": "Class EntityBase | sportradar.livedata.sdk",
    "keywords": "Class EntityBase Namespace Sportradar.LiveData.Sdk.Common.Types Assembly Sportradar.LiveData.Sdk.dll Serves as a base class for all client data contracts/entities. [Serializable] public abstract class EntityBase Inheritance object EntityBase Derived ScoutEntityBase Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EntityBase() protected EntityBase() EntityBase(XmlAttribute[]) public EntityBase(XmlAttribute[] any_attr) Parameters any_attr XmlAttribute[] Properties AdditionalData Contains any additional XML attributes found while parsing XML feed messages that are not supported with the current version of the data contracts. These are represented as an XML attribute name-value tuples. public IDictionary<string, string> AdditionalData { get; } Property Value IDictionary<string, string> Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.Common.Types.LiveOddsPersistentStateItem.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Types.LiveOddsPersistentStateItem.html",
    "title": "Class LiveOddsPersistentStateItem | sportradar.livedata.sdk",
    "keywords": "Class LiveOddsPersistentStateItem Namespace Sportradar.LiveData.Sdk.Common.Types Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class LiveOddsPersistentStateItem : PersistentStateItem Inheritance object PersistentStateItem LiveOddsPersistentStateItem Inherited Members PersistentStateItem.IsDirty PersistentStateItem.ItemLastUpdated PersistentStateItem.Key PersistentStateItem.FromClientItem(ClientPersistentStateItem) PersistentStateItem.Touch() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LiveOddsPersistentStateItem(ProtocolProviderType, long, long?, DateTime, bool) public LiveOddsPersistentStateItem(ProtocolProviderType type, long match_id, long? msg_nr, DateTime entity_timestamp, bool active) Parameters type ProtocolProviderType match_id long msg_nr long? entity_timestamp DateTime active bool LiveOddsPersistentStateItem(ClientPersistentStateItem) public LiveOddsPersistentStateItem(ClientPersistentStateItem item) Parameters item ClientPersistentStateItem Properties Active public bool Active { get; set; } Property Value bool EntityTimeStamp public DateTime EntityTimeStamp { get; set; } Property Value DateTime MatchId public long MatchId { get; } Property Value long Msgnr public long? Msgnr { get; set; } Property Value long? Methods ToClientItem() public override ClientPersistentStateItem ToClientItem() Returns ClientPersistentStateItem ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.Common.Types.LocalizedString.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Types.LocalizedString.html",
    "title": "Class LocalizedString | sportradar.livedata.sdk",
    "keywords": "Class LocalizedString Namespace Sportradar.LiveData.Sdk.Common.Types Assembly Sportradar.LiveData.Sdk.dll Localized string container where a string is represented by its international value and a collection of translations to other languages. [Serializable] public class LocalizedString : IEquatable<LocalizedString> Inheritance object LocalizedString Implements IEquatable<LocalizedString> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods DiffEngine.CloneWithValueReplacement(LocalizedString, string, bool) Constructors LocalizedString(string) Constructs a new localized string. public LocalizedString(string international_value) Parameters international_value string International value Properties AvailableTranslationLanguages Available language codes this instance is translated to. For instance \"de\", \"en\" and so on. public string[] AvailableTranslationLanguages { get; } Property Value string[] Remarks Might be empty, then you still have the international name International Returns international string. public string International { get; } Property Value string Methods AddTranslation(string, string) Adds a new translation to the string. Overrides the previous language translations if existed. public void AddTranslation(string lang, string translation) Parameters lang string Language code translation string Translation for this language Equals(LocalizedString) Check for equality. public bool Equals(LocalizedString other) Parameters other LocalizedString other object Returns bool true when equal; false else Remarks Compares by the international value only. Equals(object) Check for equality. public override bool Equals(object obj) Parameters obj object other object Returns bool true when equal; false else GetHashCode() Serves as a hash function for a particular type. public override int GetHashCode() Returns int Hash for current object GetTranslation(string) Returns translation for the specified language. Falls back to international string if translation does not exist. public string GetTranslation(string lang) Parameters lang string Language code (null for international string) Returns string Translation for the specified language. ToString() Returns international string public override string ToString() Returns string International string Operators operator ==(LocalizedString, LocalizedString) Check for equality. public static bool operator ==(LocalizedString x, LocalizedString y) Parameters x LocalizedString First object y LocalizedString Second object Returns bool true when equal; false else Remarks Compares by the international value only. operator !=(LocalizedString, LocalizedString) Check for non-equality. public static bool operator !=(LocalizedString x, LocalizedString y) Parameters x LocalizedString First object y LocalizedString Second object Returns bool true when not equal; false else Remarks Compares by the international value only."
  },
  "api/Sportradar.LiveData.Sdk.Common.Types.PersistentStateItem.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Types.PersistentStateItem.html",
    "title": "Class PersistentStateItem | sportradar.livedata.sdk",
    "keywords": "Class PersistentStateItem Namespace Sportradar.LiveData.Sdk.Common.Types Assembly Sportradar.LiveData.Sdk.dll [Serializable] public abstract class PersistentStateItem Inheritance object PersistentStateItem Derived LiveOddsPersistentStateItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PersistentStateItem() protected PersistentStateItem() PersistentStateItem(ClientPersistentStateItem) protected PersistentStateItem(ClientPersistentStateItem item) Parameters item ClientPersistentStateItem PersistentStateItem(PersistentStateItemKey, DateTime) protected PersistentStateItem(PersistentStateItemKey key, DateTime last_updated) Parameters key PersistentStateItemKey last_updated DateTime Properties IsDirty public bool IsDirty { get; set; } Property Value bool ItemLastUpdated public virtual DateTime ItemLastUpdated { get; set; } Property Value DateTime Key public virtual PersistentStateItemKey Key { get; protected set; } Property Value PersistentStateItemKey Methods FromClientItem(ClientPersistentStateItem) public static PersistentStateItem FromClientItem(ClientPersistentStateItem client_item) Parameters client_item ClientPersistentStateItem Returns PersistentStateItem ToClientItem() public virtual ClientPersistentStateItem ToClientItem() Returns ClientPersistentStateItem ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes. Touch() public virtual void Touch()"
  },
  "api/Sportradar.LiveData.Sdk.Common.Types.PersistentStateItemKey.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Types.PersistentStateItemKey.html",
    "title": "Class PersistentStateItemKey | sportradar.livedata.sdk",
    "keywords": "Class PersistentStateItemKey Namespace Sportradar.LiveData.Sdk.Common.Types Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class PersistentStateItemKey : IEquatable<PersistentStateItemKey> Inheritance object PersistentStateItemKey Implements IEquatable<PersistentStateItemKey> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PersistentStateItemKey(ProtocolProviderType, string) public PersistentStateItemKey(ProtocolProviderType provider_type, string key) Parameters provider_type ProtocolProviderType key string PersistentStateItemKey(SerializationInfo, StreamingContext) protected PersistentStateItemKey(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo context StreamingContext Properties Key public string Key { get; } Property Value string ProviderType public ProtocolProviderType ProviderType { get; } Property Value ProtocolProviderType Methods Equals(PersistentStateItemKey) Indicates whether the current object is equal to another object of the same type. public bool Equals(PersistentStateItemKey other) Parameters other PersistentStateItemKey An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. FromClientKey(string) public static PersistentStateItemKey FromClientKey(string key) Parameters key string Returns PersistentStateItemKey GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. GetObjectData(SerializationInfo, StreamingContext) public virtual void GetObjectData(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo context StreamingContext ToClientKey() public string ToClientKey() Returns string ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes. Operators operator ==(PersistentStateItemKey, PersistentStateItemKey) public static bool operator ==(PersistentStateItemKey x, PersistentStateItemKey y) Parameters x PersistentStateItemKey y PersistentStateItemKey Returns bool operator !=(PersistentStateItemKey, PersistentStateItemKey) public static bool operator !=(PersistentStateItemKey x, PersistentStateItemKey y) Parameters x PersistentStateItemKey y PersistentStateItemKey Returns bool"
  },
  "api/Sportradar.LiveData.Sdk.Common.Types.PoisonQueueElt.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Types.PoisonQueueElt.html",
    "title": "Class PoisonQueueElt | sportradar.livedata.sdk",
    "keywords": "Class PoisonQueueElt Namespace Sportradar.LiveData.Sdk.Common.Types Assembly Sportradar.LiveData.Sdk.dll public class PoisonQueueElt : IComparable, IComparable<PoisonQueueElt> Inheritance object PoisonQueueElt Implements IComparable IComparable<PoisonQueueElt> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PoisonQueueElt(PriorityQueueElt) public PoisonQueueElt(PriorityQueueElt val) Parameters val PriorityQueueElt Properties IgnoreUntil public DateTime IgnoreUntil { get; } Property Value DateTime NumTriesLeft public byte NumTriesLeft { get; set; } Property Value byte Value public PriorityQueueElt Value { get; } Property Value PriorityQueueElt Methods AnotherTry() public virtual bool AnotherTry() Returns bool CompareTo(PoisonQueueElt) Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object. public int CompareTo(PoisonQueueElt other) Parameters other PoisonQueueElt An object to compare with this instance. Returns int A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes other in the sort order. Zero This instance occurs in the same position in the sort order as other. Greater than zero This instance follows other in the sort order. CompareTo(object) Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object. public int CompareTo(object obj) Parameters obj object An object to compare with this instance. Returns int A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes obj in the sort order. Zero This instance occurs in the same position in the sort order as obj. Greater than zero This instance follows obj in the sort order. Exceptions ArgumentException obj is not the same type as this instance."
  },
  "api/Sportradar.LiveData.Sdk.Common.Types.PriorityQueueElt.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Types.PriorityQueueElt.html",
    "title": "Class PriorityQueueElt | sportradar.livedata.sdk",
    "keywords": "Class PriorityQueueElt Namespace Sportradar.LiveData.Sdk.Common.Types Assembly Sportradar.LiveData.Sdk.dll public class PriorityQueueElt : IComparable, IComparable<PriorityQueueElt> Inheritance object PriorityQueueElt Implements IComparable IComparable<PriorityQueueElt> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PriorityQueueElt(Priority, ProtocolProviderType, object) public PriorityQueueElt(Priority prio, ProtocolProviderType type, object val) Parameters prio Priority type ProtocolProviderType val object Properties CreatedOn public DateTime CreatedOn { get; } Property Value DateTime PoisonElt public PoisonQueueElt PoisonElt { get; set; } Property Value PoisonQueueElt Priority public Priority Priority { get; } Property Value Priority ProviderType public ProtocolProviderType ProviderType { get; } Property Value ProtocolProviderType Value public object Value { get; } Property Value object Methods CompareTo(PriorityQueueElt) Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object. public int CompareTo(PriorityQueueElt other) Parameters other PriorityQueueElt An object to compare with this instance. Returns int A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes other in the sort order. Zero This instance occurs in the same position in the sort order as other. Greater than zero This instance follows other in the sort order. CompareTo(object) Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object. public int CompareTo(object obj) Parameters obj object An object to compare with this instance. Returns int A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes obj in the sort order. Zero This instance occurs in the same position in the sort order as obj. Greater than zero This instance follows obj in the sort order. Exceptions ArgumentException obj is not the same type as this instance. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.Common.Types.ProtocolData.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Types.ProtocolData.html",
    "title": "Class ProtocolData | sportradar.livedata.sdk",
    "keywords": "Class ProtocolData Namespace Sportradar.LiveData.Sdk.Common.Types Assembly Sportradar.LiveData.Sdk.dll public class ProtocolData : IProtocolData, ICloneable Inheritance object ProtocolData Implements IProtocolData ICloneable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ProtocolData() public ProtocolData() Properties BookmakerId Bookmaker ID public virtual long BookmakerId { get; set; } Property Value long BookmakerKey public virtual SecureString BookmakerKey { get; set; } Property Value SecureString EventRequestLimiter Limits the number of matches that a client can reference in a given time frame (get status, meta info, book, subscribe or error recovery). public virtual IRateGate EventRequestLimiter { get; set; } Property Value IRateGate LoginLimiter Limits the number of logins a client can perform in a given time frame. public virtual IRateGate LoginLimiter { get; set; } Property Value IRateGate MaxTimeSkew Max message timestamp skew. Zero to disable the check. public virtual TimeSpan MaxTimeSkew { get; set; } Property Value TimeSpan RequestLimiter Limits the number of requests a client can send in a given time frame. public virtual IRateGate RequestLimiter { get; set; } Property Value IRateGate RestartOnParseError If true, the feed will reconnect on any parse error public bool RestartOnParseError { get; set; } Property Value bool SchemaStrictness XSD schema validation strictness. Can be OFF, ON, STRICT or VERY STRICT public virtual SchemaValidationStrictness SchemaStrictness { get; set; } Property Value SchemaValidationStrictness ScoutPassword Scout client password public virtual SecureString ScoutPassword { get; set; } Property Value SecureString ScoutUsername Scout client username public virtual string ScoutUsername { get; set; } Property Value string SendClientTimeInRequest Whether client UTC time should be included in every request message (LiveOdds). public virtual bool SendClientTimeInRequest { get; set; } Property Value bool SendClientVersionInLogin Whether client version should be sent in login. public virtual bool SendClientVersionInLogin { get; set; } Property Value bool Methods Clone() Creates a new object that is a copy of the current instance. public virtual object Clone() Returns object A new object that is a copy of this instance."
  },
  "api/Sportradar.LiveData.Sdk.Common.Types.TypeValueTuple.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Types.TypeValueTuple.html",
    "title": "Class TypeValueTuple | sportradar.livedata.sdk",
    "keywords": "Class TypeValueTuple Namespace Sportradar.LiveData.Sdk.Common.Types Assembly Sportradar.LiveData.Sdk.dll TypeValueTuple [Serializable] public class TypeValueTuple Inheritance object TypeValueTuple Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Type Type public string Type { get; set; } Property Value string Value Value public string Value { get; set; } Property Value string"
  },
  "api/Sportradar.LiveData.Sdk.Common.Types.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Types.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Common.Types | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Common.Types Classes AliveCheckData BetOutcome Localized bet outcome / odds field. BetTypeKey Bet type key (e.g. \"3w\" = 2) BetValue Value associated with a specified BetTypeKey. This includes localized bet type name (e.g. en=\"hc\", fi=\"Taaoitus\") and localized outcomes/odds fields (e.g. \"1\", \"x\", \"2\" in different languages) CipherSettings ClientPersistentStateItem Client persistent state item. ConfigItem ConnectionData EntityBase Serves as a base class for all client data contracts/entities. LiveOddsPersistentStateItem LocalizedString Localized string container where a string is represented by its international value and a collection of translations to other languages. PersistentStateItem PersistentStateItemKey PoisonQueueElt PriorityQueueElt ProtocolData TypeValueTuple TypeValueTuple"
  },
  "api/Sportradar.LiveData.Sdk.Common.Utils.AutoExpireDictionary-2.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Utils.AutoExpireDictionary-2.html",
    "title": "Class AutoExpireDictionary<K, V> | sportradar.livedata.sdk",
    "keywords": "Class AutoExpireDictionary<K, V> Namespace Sportradar.LiveData.Sdk.Common.Utils Assembly Sportradar.LiveData.Sdk.dll public class AutoExpireDictionary<K, V> : IDictionary<K, V>, ICollection<KeyValuePair<K, V>>, IEnumerable<KeyValuePair<K, V>>, IEnumerable Type Parameters K V Inheritance object AutoExpireDictionary<K, V> Implements IDictionary<K, V> ICollection<KeyValuePair<K, V>> IEnumerable<KeyValuePair<K, V>> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods RateGateExtensions.LimitRate<T>(IEnumerable<T>, string, int, TimeSpan) Constructors AutoExpireDictionary(TimeSpan, TimeSpan) public AutoExpireDictionary(TimeSpan max_age, TimeSpan check_interval) Parameters max_age TimeSpan check_interval TimeSpan Properties Count Gets the number of elements contained in the ICollection<T>. public int Count { get; } Property Value int The number of elements contained in the ICollection<T>. IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. public bool IsReadOnly { get; } Property Value bool true if the ICollection<T> is read-only; otherwise, false. this[K] Gets or sets the element with the specified key. public V this[K key] { get; set; } Parameters key K The key of the element to get or set. Property Value V The element with the specified key. Exceptions ArgumentNullException key is null. KeyNotFoundException The property is retrieved and key is not found. NotSupportedException The property is set and the IDictionary<TKey, TValue> is read-only. Keys Gets an ICollection<T> containing the keys of the IDictionary<TKey, TValue>. public ICollection<K> Keys { get; } Property Value ICollection<K> An ICollection<T> containing the keys of the object that implements IDictionary<TKey, TValue>. Values Gets an ICollection<T> containing the values in the IDictionary<TKey, TValue>. public ICollection<V> Values { get; } Property Value ICollection<V> An ICollection<T> containing the values in the object that implements IDictionary<TKey, TValue>. Methods Add(KeyValuePair<K, V>) Adds an item to the ICollection<T>. public void Add(KeyValuePair<K, V> item) Parameters item KeyValuePair<K, V> The object to add to the ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Add(K, V) Adds an element with the provided key and value to the IDictionary<TKey, TValue>. public void Add(K key, V value) Parameters key K The object to use as the key of the element to add. value V The object to use as the value of the element to add. Exceptions ArgumentNullException key is null. ArgumentException An element with the same key already exists in the IDictionary<TKey, TValue>. NotSupportedException The IDictionary<TKey, TValue> is read-only. Clear() Removes all items from the ICollection<T>. public void Clear() Exceptions NotSupportedException The ICollection<T> is read-only. Contains(KeyValuePair<K, V>) Determines whether the ICollection<T> contains a specific value. public bool Contains(KeyValuePair<K, V> item) Parameters item KeyValuePair<K, V> The object to locate in the ICollection<T>. Returns bool true if item is found in the ICollection<T>; otherwise, false. ContainsKey(K) Determines whether the IDictionary<TKey, TValue> contains an element with the specified key. public bool ContainsKey(K key) Parameters key K The key to locate in the IDictionary<TKey, TValue>. Returns bool true if the IDictionary<TKey, TValue> contains an element with the key; otherwise, false. Exceptions ArgumentNullException key is null. CopyTo(KeyValuePair<K, V>[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. public void CopyTo(KeyValuePair<K, V>[] array, int arrayIndex) Parameters array KeyValuePair<K, V>[] The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. arrayIndex int The zero-based index in array at which copying begins. Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array. GetEnumerator() Returns an enumerator that iterates through the collection. public IEnumerator<KeyValuePair<K, V>> GetEnumerator() Returns IEnumerator<KeyValuePair<K, V>> An enumerator that can be used to iterate through the collection. Remove(KeyValuePair<K, V>) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(KeyValuePair<K, V> item) Parameters item KeyValuePair<K, V> The object to remove from the ICollection<T>. Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Remove(K) Removes the element with the specified key from the IDictionary<TKey, TValue>. public bool Remove(K key) Parameters key K The key of the element to remove. Returns bool true if the element is successfully removed; otherwise, false. This method also returns false if key was not found in the original IDictionary<TKey, TValue>. Exceptions ArgumentNullException key is null. NotSupportedException The IDictionary<TKey, TValue> is read-only. TryGetValue(K, out V) Gets the value associated with the specified key. public bool TryGetValue(K key, out V value) Parameters key K The key whose value to get. value V When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized. Returns bool true if the object that implements IDictionary<TKey, TValue> contains an element with the specified key; otherwise, false. Exceptions ArgumentNullException key is null."
  },
  "api/Sportradar.LiveData.Sdk.Common.Utils.CloningDictionary-2.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Utils.CloningDictionary-2.html",
    "title": "Class CloningDictionary<K, V> | sportradar.livedata.sdk",
    "keywords": "Class CloningDictionary<K, V> Namespace Sportradar.LiveData.Sdk.Common.Utils Assembly Sportradar.LiveData.Sdk.dll public class CloningDictionary<K, V> : IDictionary<K, V>, ICollection<KeyValuePair<K, V>>, IEnumerable<KeyValuePair<K, V>>, IEnumerable where V : ICloneable Type Parameters K V Inheritance object CloningDictionary<K, V> Implements IDictionary<K, V> ICollection<KeyValuePair<K, V>> IEnumerable<KeyValuePair<K, V>> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods RateGateExtensions.LimitRate<T>(IEnumerable<T>, string, int, TimeSpan) Constructors CloningDictionary(IDictionary<K, V>) public CloningDictionary(IDictionary<K, V> inner) Parameters inner IDictionary<K, V> Properties Count Gets the number of elements contained in the ICollection<T>. public int Count { get; } Property Value int The number of elements contained in the ICollection<T>. IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. public bool IsReadOnly { get; } Property Value bool true if the ICollection<T> is read-only; otherwise, false. this[K] Gets or sets the element with the specified key. public V this[K key] { get; set; } Parameters key K The key of the element to get or set. Property Value V The element with the specified key. Exceptions ArgumentNullException key is null. KeyNotFoundException The property is retrieved and key is not found. NotSupportedException The property is set and the IDictionary<TKey, TValue> is read-only. Keys Gets an ICollection<T> containing the keys of the IDictionary<TKey, TValue>. public ICollection<K> Keys { get; } Property Value ICollection<K> An ICollection<T> containing the keys of the object that implements IDictionary<TKey, TValue>. Values Gets an ICollection<T> containing the values in the IDictionary<TKey, TValue>. public ICollection<V> Values { get; } Property Value ICollection<V> An ICollection<T> containing the values in the object that implements IDictionary<TKey, TValue>. Methods Add(KeyValuePair<K, V>) Adds an item to the ICollection<T>. public void Add(KeyValuePair<K, V> item) Parameters item KeyValuePair<K, V> The object to add to the ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Add(K, V) Adds an element with the provided key and value to the IDictionary<TKey, TValue>. public void Add(K key, V value) Parameters key K The object to use as the key of the element to add. value V The object to use as the value of the element to add. Exceptions ArgumentNullException key is null. ArgumentException An element with the same key already exists in the IDictionary<TKey, TValue>. NotSupportedException The IDictionary<TKey, TValue> is read-only. Clear() Removes all items from the ICollection<T>. public void Clear() Exceptions NotSupportedException The ICollection<T> is read-only. Contains(KeyValuePair<K, V>) Determines whether the ICollection<T> contains a specific value. public bool Contains(KeyValuePair<K, V> item) Parameters item KeyValuePair<K, V> The object to locate in the ICollection<T>. Returns bool true if item is found in the ICollection<T>; otherwise, false. ContainsKey(K) Determines whether the IDictionary<TKey, TValue> contains an element with the specified key. public bool ContainsKey(K key) Parameters key K The key to locate in the IDictionary<TKey, TValue>. Returns bool true if the IDictionary<TKey, TValue> contains an element with the key; otherwise, false. Exceptions ArgumentNullException key is null. CopyTo(KeyValuePair<K, V>[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. public void CopyTo(KeyValuePair<K, V>[] array, int arrayIndex) Parameters array KeyValuePair<K, V>[] The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. arrayIndex int The zero-based index in array at which copying begins. Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array. GetEnumerator() Returns an enumerator that iterates through the collection. public IEnumerator<KeyValuePair<K, V>> GetEnumerator() Returns IEnumerator<KeyValuePair<K, V>> An enumerator that can be used to iterate through the collection. Remove(KeyValuePair<K, V>) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(KeyValuePair<K, V> item) Parameters item KeyValuePair<K, V> The object to remove from the ICollection<T>. Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Remove(K) Removes the element with the specified key from the IDictionary<TKey, TValue>. public bool Remove(K key) Parameters key K The key of the element to remove. Returns bool true if the element is successfully removed; otherwise, false. This method also returns false if key was not found in the original IDictionary<TKey, TValue>. Exceptions ArgumentNullException key is null. NotSupportedException The IDictionary<TKey, TValue> is read-only. TryGetValue(K, out V) Gets the value associated with the specified key. public bool TryGetValue(K key, out V value) Parameters key K The key whose value to get. value V When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized. Returns bool true if the object that implements IDictionary<TKey, TValue> contains an element with the specified key; otherwise, false. Exceptions ArgumentNullException key is null."
  },
  "api/Sportradar.LiveData.Sdk.Common.Utils.CommonUtils.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Utils.CommonUtils.html",
    "title": "Class CommonUtils | sportradar.livedata.sdk",
    "keywords": "Class CommonUtils Namespace Sportradar.LiveData.Sdk.Common.Utils Assembly Sportradar.LiveData.Sdk.dll public static class CommonUtils Inheritance object CommonUtils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields g_decimal_fmt public static readonly NumberFormatInfo g_decimal_fmt Field Value NumberFormatInfo Methods CheckForAnyAttr<T>(T) public static bool CheckForAnyAttr<T>(T obj) Parameters obj T Returns bool Type Parameters T ConvertEnumByName<Tout>(string) public static Tout ConvertEnumByName<Tout>(string orig) where Tout : struct, IConvertible Parameters orig string Returns Tout Type Parameters Tout ConvertEnumByName<Tin, Tout>(Tin) public static Tout ConvertEnumByName<Tin, Tout>(Tin orig) where Tin : struct, IConvertible where Tout : struct, IConvertible Parameters orig Tin Returns Tout Type Parameters Tin Tout ConvertToResourceName(string) public static string ConvertToResourceName(string name) Parameters name string Returns string Deserialize<T>(byte[]) public static T Deserialize<T>(byte[] arr) Parameters arr byte[] Returns T Type Parameters T EnsureDifferentThread(bool, Action) When is_different_thread is true run in the same thread, else start a new one public static void EnsureDifferentThread(bool is_different_thread, Action action) Parameters is_different_thread bool boolean condition action Action action to be executed FromTimespan(TimeSpan) public static long FromTimespan(TimeSpan ts) Parameters ts TimeSpan Returns long FromTimestamp(long, DateTimeKind) Convert from UNIX timestamp to local or UTC timestamp. public static DateTime FromTimestamp(long time, DateTimeKind convert_to = DateTimeKind.Utc) Parameters time long UTC time in UNIX format (*1000) convert_to DateTimeKind Date time kind to convert to Returns DateTime Date time of the specified kind GetEnumMaxValue<TEnum>() public static TEnum GetEnumMaxValue<TEnum>() where TEnum : IComparable, IConvertible, IFormattable Returns TEnum Type Parameters TEnum GetEnumMinValue<TEnum>() public static TEnum GetEnumMinValue<TEnum>() where TEnum : IComparable, IConvertible, IFormattable Returns TEnum Type Parameters TEnum GetEnumValue<T>(bool, int, T) Converts the provided value to the member of the specified enum, or returns defaultValue if value of specified is false public static T GetEnumValue<T>(bool specified, int value, T defaultValue) where T : struct, IConvertible Parameters specified bool Value indicating whether the value field was specified in the feed message value int The value in the feed message defaultValue T A T member to be returned if specified is false Returns T The value converted to enum T member Type Parameters T The type of enum to which to convert the value GetEnumValue<T>(int) Converts the provided value to the member of the specified enum public static T GetEnumValue<T>(int value) where T : struct, IConvertible Parameters value int The value to be converted Returns T The member of the specified enum Type Parameters T The type of enum to which to convert the value GetEnumValue<T>(int, T) Converts the provided value to the member of the specified enum, or returns defaultValue public static T GetEnumValue<T>(int value, T defaultValue) where T : struct, IConvertible Parameters value int The value in the feed message defaultValue T A T member to be returned if unknown value Returns T The value converted to enum T member Type Parameters T The type of enum to which to convert the value GetEnumValue<T>(string) Converts the provided value (enum value name) to the member of the specified enum public static T GetEnumValue<T>(string value) where T : struct, IConvertible Parameters value string The value name to be converted Returns T The member of the specified enum Type Parameters T The type of enum to which to convert the value GetEnumValue<T>(string, T) Converts the provided value (enum value name) to the member of the specified enum public static T GetEnumValue<T>(string value, T defaultValue) where T : struct, IConvertible Parameters value string The value name to be converted defaultValue T A T member to be returned if value is not member of enum Returns T The member of the specified enum Type Parameters T The type of enum to which to convert the value GetTimeSpan(TimeSpan, TimeSpan) public static TimeSpan GetTimeSpan(TimeSpan ts, TimeSpan default_ts) Parameters ts TimeSpan default_ts TimeSpan Returns TimeSpan GetVersion(Type) public static string GetVersion(Type t) Parameters t Type Returns string IntegerToBoolean(int) IntegerToBoolean public static bool IntegerToBoolean(int value) Parameters value int Returns bool IsEnumMember<TEnum>(object) Determines whether the provided value is member of the specified enumeration public static bool IsEnumMember<TEnum>(object value) where TEnum : struct Parameters value object The value to check. Returns bool True if the provided value is member of the specified enumeration. Otherwise false. Type Parameters TEnum The enumeration whose members are to be checked OpenResourceStream(Assembly, Type, string) public static Stream OpenResourceStream(Assembly assembly, Type type, string name) Parameters assembly Assembly type Type name string Returns Stream ParseDecimal(string) public static decimal ParseDecimal(string s) Parameters s string Returns decimal ReadResourceStream(Assembly, Type, string) public static byte[] ReadResourceStream(Assembly assembly, Type type, string name) Parameters assembly Assembly type Type name string Returns byte[] RemoveConsecutiveDots(string) public static string RemoveConsecutiveDots(string name) Parameters name string Returns string SafeWaitTime(TimeSpan) public static TimeSpan SafeWaitTime(TimeSpan ts) Parameters ts TimeSpan Returns TimeSpan Serialize<T>(T) public static byte[] Serialize<T>(T obj) Parameters obj T Returns byte[] Type Parameters T StringToBoolean(string) StringToBoolean public static bool StringToBoolean(string value) Parameters value string Returns bool StringToDateTime(string, string) StringToDateTime public static DateTime StringToDateTime(string value, string zone) Parameters value string zone string Returns DateTime ToTimestamp(DateTime, bool) public static long ToTimestamp(DateTime time, bool warn = true) Parameters time DateTime warn bool Returns long"
  },
  "api/Sportradar.LiveData.Sdk.Common.Utils.DiffEngine.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Utils.DiffEngine.html",
    "title": "Class DiffEngine | sportradar.livedata.sdk",
    "keywords": "Class DiffEngine Namespace Sportradar.LiveData.Sdk.Common.Utils Assembly Sportradar.LiveData.Sdk.dll public static class DiffEngine Inheritance object DiffEngine Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CloneWithValueReplacement(LocalizedString, string, bool) public static LocalizedString CloneWithValueReplacement(this LocalizedString orig, string new_international_value, bool fix_ordinal_addendums) Parameters orig LocalizedString new_international_value string fix_ordinal_addendums bool Returns LocalizedString FixOrdinalAddendums(IEnumerable<Tuple<string, string>>) public static IEnumerable<Tuple<string, string, bool>> FixOrdinalAddendums(this IEnumerable<Tuple<string, string>> tuples) Parameters tuples IEnumerable<Tuple<string, string>> Returns IEnumerable<Tuple<string, string, bool>> GetReplacements(string, string) public static IEnumerable<Tuple<string, string>> GetReplacements(string variable_str, string value_str) Parameters variable_str string value_str string Returns IEnumerable<Tuple<string, string>> GetWords(string) public static IEnumerable<string> GetWords(string str) Parameters str string Returns IEnumerable<string> IgnoreOrdinalAddendums(IEnumerable<Tuple<string, string>>) public static IEnumerable<Tuple<string, string, bool>> IgnoreOrdinalAddendums(this IEnumerable<Tuple<string, string>> tuples) Parameters tuples IEnumerable<Tuple<string, string>> Returns IEnumerable<Tuple<string, string, bool>> Replace(string, Tuple<string, string, bool>) public static string Replace(string str, Tuple<string, string, bool> tuple) Parameters str string tuple Tuple<string, string, bool> Returns string ReplaceAll(string, IEnumerable<Tuple<string, string, bool>>) public static string ReplaceAll(string str, IEnumerable<Tuple<string, string, bool>> tuples) Parameters str string tuples IEnumerable<Tuple<string, string, bool>> Returns string"
  },
  "api/Sportradar.LiveData.Sdk.Common.Utils.FtpLib.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Utils.FtpLib.html",
    "title": "Class FtpLib | sportradar.livedata.sdk",
    "keywords": "Class FtpLib Namespace Sportradar.LiveData.Sdk.Common.Utils Assembly Sportradar.LiveData.Sdk.dll public static class FtpLib Inheritance object FtpLib Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BUFFER_SIZE public const int BUFFER_SIZE = 16384 Field Value int Methods DownloadFile(string, string, string, string, string, bool) public static bool DownloadFile(string hostname, string username, string password, string remote_path_name, string local_path_name, bool binary) Parameters hostname string username string password string remote_path_name string local_path_name string binary bool Returns bool UploadFile(FtpProtocol, string, string, string, string, string, bool) public static bool UploadFile(FtpProtocol protocol, string hostname, string username, string password, string local_path_name, string remote_path_name, bool binary = false) Parameters protocol FtpProtocol hostname string username string password string local_path_name string remote_path_name string binary bool Returns bool"
  },
  "api/Sportradar.LiveData.Sdk.Common.Utils.FtpProtocol.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Utils.FtpProtocol.html",
    "title": "Enum FtpProtocol | sportradar.livedata.sdk",
    "keywords": "Enum FtpProtocol Namespace Sportradar.LiveData.Sdk.Common.Utils Assembly Sportradar.LiveData.Sdk.dll public enum FtpProtocol Fields PLAIN = 0 SSL = 1"
  },
  "api/Sportradar.LiveData.Sdk.Common.Utils.IResequencer-1.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Utils.IResequencer-1.html",
    "title": "Interface IResequencer<T> | sportradar.livedata.sdk",
    "keywords": "Interface IResequencer<T> Namespace Sportradar.LiveData.Sdk.Common.Utils Assembly Sportradar.LiveData.Sdk.dll Stateful component that allows to obtain items in correct sequence. public interface IResequencer<T> : IStash<T> Type Parameters T Type of the elements Inherited Members IStash<T>.OnDuplicate IStash<T>.MaxSeqWaiting IStash<T>.MinSeqWaiting IStash<T>.AddStash(T) IStash<T>.ClearWaiting() IStash<T>.GetWaiting() Properties LastSeqNum Latest sequence number long? LastSeqNum { get; } Property Value long? Methods Add(T) Add a new element. bool Add(T item) Parameters item T a new element Returns bool true when item is in-sequence; false else (duplicate, out-of-sequence, etc.) Clear(long?) Clear complete state and possibly also reset first desired state. Possible fresh star for sequence numbers void Clear(long? fresh_seq_start = null) Parameters fresh_seq_start long? Events OnSeqData Event fired when another in-sequence element was found. event Action<T, bool> OnSeqData Event Type Action<T, bool>"
  },
  "api/Sportradar.LiveData.Sdk.Common.Utils.IStash-1.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Utils.IStash-1.html",
    "title": "Interface IStash<T> | sportradar.livedata.sdk",
    "keywords": "Interface IStash<T> Namespace Sportradar.LiveData.Sdk.Common.Utils Assembly Sportradar.LiveData.Sdk.dll Stateful component that allows to stash elements until needed. You get duplicate detection and ordering guarantees. public interface IStash<T> Type Parameters T Type of the elements Properties MaxSeqWaiting The waiting element with maximum sequence number. T MaxSeqWaiting { get; } Property Value T MinSeqWaiting The waiting element with minimum sequence number. T MinSeqWaiting { get; } Property Value T Methods AddStash(T) Add an item to stash. (When using the resequencer as kind of a stash for elements). void AddStash(T item) Parameters item T a new element ClearWaiting() Clear waiting (out-of-sequence) elements. void ClearWaiting() GetWaiting() Get the out-of-sequence elements that are still waiting. ReadOnlyCollection<T> GetWaiting() Returns ReadOnlyCollection<T> the waiting elements Events OnDuplicate How to resolve a duplicate. (seq_number, old, fresh) => replacement element event Func<long, T, T, T> OnDuplicate Event Type Func<long, T, T, T>"
  },
  "api/Sportradar.LiveData.Sdk.Common.Utils.LevelTypeConverter.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Utils.LevelTypeConverter.html",
    "title": "Class LevelTypeConverter | sportradar.livedata.sdk",
    "keywords": "Class LevelTypeConverter Namespace Sportradar.LiveData.Sdk.Common.Utils Assembly Sportradar.LiveData.Sdk.dll public class LevelTypeConverter : TypeConverter Inheritance object TypeConverter LevelTypeConverter Inherited Members TypeConverter.CanConvertFrom(Type) TypeConverter.CanConvertTo(Type) TypeConverter.ConvertFrom(object) TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, string) TypeConverter.ConvertFromInvariantString(string) TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, string) TypeConverter.ConvertFromString(ITypeDescriptorContext, string) TypeConverter.ConvertFromString(string) TypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, object, Type) TypeConverter.ConvertTo(object, Type) TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, object) TypeConverter.ConvertToInvariantString(object) TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, object) TypeConverter.ConvertToString(ITypeDescriptorContext, object) TypeConverter.ConvertToString(object) TypeConverter.CreateInstance(IDictionary) TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary) TypeConverter.GetConvertFromException(object) TypeConverter.GetConvertToException(object, Type) TypeConverter.GetCreateInstanceSupported() TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext) TypeConverter.GetProperties(ITypeDescriptorContext, object) TypeConverter.GetProperties(ITypeDescriptorContext, object, Attribute[]) TypeConverter.GetProperties(object) TypeConverter.GetPropertiesSupported() TypeConverter.GetPropertiesSupported(ITypeDescriptorContext) TypeConverter.GetStandardValues() TypeConverter.GetStandardValues(ITypeDescriptorContext) TypeConverter.GetStandardValuesExclusive() TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext) TypeConverter.GetStandardValuesSupported() TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext) TypeConverter.IsValid(ITypeDescriptorContext, object) TypeConverter.IsValid(object) TypeConverter.SortProperties(PropertyDescriptorCollection, string[]) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanConvertFrom(ITypeDescriptorContext, Type) Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context. public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType) Parameters context ITypeDescriptorContext An ITypeDescriptorContext that provides a format context. sourceType Type A Type that represents the type you want to convert from. Returns bool true if this converter can perform the conversion; otherwise, false. CanConvertTo(ITypeDescriptorContext, Type) Returns whether this converter can convert the object to the specified type, using the specified context. public override bool CanConvertTo(ITypeDescriptorContext context, Type destinationType) Parameters context ITypeDescriptorContext An ITypeDescriptorContext that provides a format context. destinationType Type A Type that represents the type you want to convert to. Returns bool true if this converter can perform the conversion; otherwise, false. ConvertFrom(ITypeDescriptorContext, CultureInfo, object) Converts the given object to the type of this converter, using the specified context and culture information. public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) Parameters context ITypeDescriptorContext An ITypeDescriptorContext that provides a format context. culture CultureInfo The CultureInfo to use as the current culture. value object The object to convert. Returns object An object that represents the converted value. Exceptions NotSupportedException The conversion cannot be performed."
  },
  "api/Sportradar.LiveData.Sdk.Common.Utils.MathExt.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Utils.MathExt.html",
    "title": "Class MathExt | sportradar.livedata.sdk",
    "keywords": "Class MathExt Namespace Sportradar.LiveData.Sdk.Common.Utils Assembly Sportradar.LiveData.Sdk.dll public static class MathExt Inheritance object MathExt Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Lengthen(decimal) The opposite of Math.Truncate. public static decimal Lengthen(decimal num) Parameters num decimal Number Returns decimal Truncate will round towards zero, this method rounds towards - or + infinity. This is like Math.Ceil for positive numbers, and like Math.Floor for negative numbers. Lengthen(double) The opposite of Math.Truncate. public static double Lengthen(double num) Parameters num double Number Returns double Truncate will round towards zero, this method rounds towards - or + infinity. This is like Math.Ceil for positive numbers, and like Math.Floor for negative numbers."
  },
  "api/Sportradar.LiveData.Sdk.Common.Utils.ObjectReflectionFormatter.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Utils.ObjectReflectionFormatter.html",
    "title": "Class ObjectReflectionFormatter | sportradar.livedata.sdk",
    "keywords": "Class ObjectReflectionFormatter Namespace Sportradar.LiveData.Sdk.Common.Utils Assembly Sportradar.LiveData.Sdk.dll Provides utilities for generating formatted string representations of object properties using reflection. public static class ObjectReflectionFormatter Inheritance object ObjectReflectionFormatter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FormatPropertiesInline<T>(T) Formats the properties of the specified object into a single line string. Each property is represented in the format \"key=value\" and separated by commas. Null or empty properties are omitted. public static string FormatPropertiesInline<T>(T obj) Parameters obj T The object whose properties are to be formatted. Returns string A string representation of the object with properties in a single line. Type Parameters T The type of the object to format. FormatPropertiesWithNewLine<T>(T) Formats the properties of the specified object with each property on a new line. Properties are presented in the format \"PropertyName: PropertyValue\". Null or empty properties are omitted. public static string FormatPropertiesWithNewLine<T>(T obj) Parameters obj T The object whose properties are to be formatted. Returns string A string representation of the object with properties on separate lines. Type Parameters T The type of the object to format."
  },
  "api/Sportradar.LiveData.Sdk.Common.Utils.StreamWrapper.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Utils.StreamWrapper.html",
    "title": "Class StreamWrapper | sportradar.livedata.sdk",
    "keywords": "Class StreamWrapper Namespace Sportradar.LiveData.Sdk.Common.Utils Assembly Sportradar.LiveData.Sdk.dll Another workaround for a .NET bug (http://social.msdn.microsoft.com/Forums/en-US/netfxnetcom/thread/f4c3d019-aecd-4fc6-9dea-680f04faa900) NetworkStream non-blocking Read() returns 0 bytes when there is nothing to read IOException when \"the underlying Socket is closed.\" -> reconnect Write() is thread-safe SslStream >non-blocking Read() throws IOException -> no need to reconnect after the exception a subsequent non-blocking Read() (when there is nothing to read) returns 5 bytes of SSL keep-alive data (23 3 1 0 17) 23 is TLS application protocol, 3 1 means TLS 1.0, 3 0 would be SSL 3.0 Write() is NOT thread-safe Unify the behavior to NetworkStream behavior. public class StreamWrapper Inheritance object StreamWrapper Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Remarks This implementation of stream wrapper is not thread safe. Properties ReadTimeout public int ReadTimeout { get; set; } Property Value int Stream public Stream Stream { set; } Property Value Stream TcpClient public TcpClient TcpClient { get; set; } Property Value TcpClient WriteTimeout public int WriteTimeout { get; set; } Property Value int Methods Close() public void Close() Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. Flush() public void Flush() GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. Read(byte[], int, int) public int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int Returns int ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Write(byte[], int, int) public void Write(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int"
  },
  "api/Sportradar.LiveData.Sdk.Common.Utils.StringUtils.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Utils.StringUtils.html",
    "title": "Class StringUtils | sportradar.livedata.sdk",
    "keywords": "Class StringUtils Namespace Sportradar.LiveData.Sdk.Common.Utils Assembly Sportradar.LiveData.Sdk.dll public static class StringUtils Inheritance object StringUtils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ClearString(string) public static bool ClearString(string str) Parameters str string Returns bool ClearStringByRef(ref string) public static bool ClearStringByRef(ref string s) Parameters s string Returns bool SecureStringToString(SecureString) public static string SecureStringToString(SecureString input) Parameters input SecureString Returns string StringToSecureString(string) public static SecureString StringToSecureString(string input) Parameters input string Returns SecureString"
  },
  "api/Sportradar.LiveData.Sdk.Common.Utils.TimeKeeper.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Utils.TimeKeeper.html",
    "title": "Class TimeKeeper | sportradar.livedata.sdk",
    "keywords": "Class TimeKeeper Namespace Sportradar.LiveData.Sdk.Common.Utils Assembly Sportradar.LiveData.Sdk.dll public class TimeKeeper : ITimeKeeper Inheritance object TimeKeeper Implements ITimeKeeper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TimeKeeper(int, TimeSpan) public TimeKeeper(int maximum_samples, TimeSpan max_age) Parameters maximum_samples int max_age TimeSpan Properties LastServerTime public DateTime LastServerTime { get; } Property Value DateTime LastSyncTime public DateTime LastSyncTime { get; } Property Value DateTime ServerTime public DateTime? ServerTime { get; } Property Value DateTime? Methods CheckTime(DateTime, DateTime) public TimeKeeperResponse CheckTime(DateTime server_time, DateTime received_time = default) Parameters server_time DateTime received_time DateTime Returns TimeKeeperResponse NewTime(DateTime, DateTime) public TimeKeeperResponse NewTime(DateTime server_time, DateTime received_time = default) Parameters server_time DateTime received_time DateTime Returns TimeKeeperResponse"
  },
  "api/Sportradar.LiveData.Sdk.Common.Utils.TimeKeeperResponse.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Utils.TimeKeeperResponse.html",
    "title": "Class TimeKeeperResponse | sportradar.livedata.sdk",
    "keywords": "Class TimeKeeperResponse Namespace Sportradar.LiveData.Sdk.Common.Utils Assembly Sportradar.LiveData.Sdk.dll public class TimeKeeperResponse Inheritance object TimeKeeperResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties DiffToAverage public TimeSpan DiffToAverage { get; set; } Property Value TimeSpan IsBehindLastSample public bool IsBehindLastSample { get; set; } Property Value bool NumSamples public int NumSamples { get; set; } Property Value int Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Sportradar.LiveData.Sdk.Common.Utils.ToStringBuilder-1.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Utils.ToStringBuilder-1.html",
    "title": "Class ToStringBuilder<T> | sportradar.livedata.sdk",
    "keywords": "Class ToStringBuilder<T> Namespace Sportradar.LiveData.Sdk.Common.Utils Assembly Sportradar.LiveData.Sdk.dll public class ToStringBuilder<T> Type Parameters T Inheritance object ToStringBuilder<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ToStringBuilder(T) public ToStringBuilder(T target) Parameters target T Methods Append(string) public ToStringBuilder<T> Append(string value) Parameters value string Returns ToStringBuilder<T> Append<TProperty>(object, Expression<Func<T, TProperty>>) public ToStringBuilder<T> Append<TProperty>(object invoke, Expression<Func<T, TProperty>> propertyExpression) Parameters invoke object propertyExpression Expression<Func<T, TProperty>> Returns ToStringBuilder<T> Type Parameters TProperty ListProperty<TProperty>(List<TProperty>) public string ListProperty<TProperty>(List<TProperty> input) Parameters input List<TProperty> Returns string Type Parameters TProperty ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. ToStringWithoutTypeName() public string ToStringWithoutTypeName() Returns string"
  },
  "api/Sportradar.LiveData.Sdk.Common.Utils.XmlUtils.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Utils.XmlUtils.html",
    "title": "Class XmlUtils | sportradar.livedata.sdk",
    "keywords": "Class XmlUtils Namespace Sportradar.LiveData.Sdk.Common.Utils Assembly Sportradar.LiveData.Sdk.dll public static class XmlUtils Inheritance object XmlUtils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Deserialize<T>(string) public static T Deserialize<T>(string msg) where T : IProtocolBase Parameters msg string Returns T Type Parameters T GetXmlSerializerByType(Type) public static XmlSerializer GetXmlSerializerByType(Type type) Parameters type Type Returns XmlSerializer ToXml<T>(T) public static string ToXml<T>(T status) Parameters status T Returns string Type Parameters T Validate(XmlSchemaSet, string, bool) public static bool Validate(XmlSchemaSet schemas, string msg, bool warn_as_error = false) Parameters schemas XmlSchemaSet msg string warn_as_error bool Returns bool"
  },
  "api/Sportradar.LiveData.Sdk.Common.Utils.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.Utils.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Common.Utils | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Common.Utils Classes AutoExpireDictionary<K, V> CloningDictionary<K, V> CommonUtils DiffEngine FtpLib LevelTypeConverter MathExt ObjectReflectionFormatter Provides utilities for generating formatted string representations of object properties using reflection. StreamWrapper Another workaround for a .NET bug (http://social.msdn.microsoft.com/Forums/en-US/netfxnetcom/thread/f4c3d019-aecd-4fc6-9dea-680f04faa900) NetworkStream non-blocking Read() returns 0 bytes when there is nothing to read IOException when \"the underlying Socket is closed.\" -> reconnect Write() is thread-safe SslStream >non-blocking Read() throws IOException -> no need to reconnect after the exception a subsequent non-blocking Read() (when there is nothing to read) returns 5 bytes of SSL keep-alive data (23 3 1 0 17) 23 is TLS application protocol, 3 1 means TLS 1.0, 3 0 would be SSL 3.0 Write() is NOT thread-safe Unify the behavior to NetworkStream behavior. StringUtils TimeKeeper TimeKeeperResponse ToStringBuilder<T> XmlUtils Interfaces IResequencer<T> Stateful component that allows to obtain items in correct sequence. IStash<T> Stateful component that allows to stash elements until needed. You get duplicate detection and ordering guarantees. Enums FtpProtocol"
  },
  "api/Sportradar.LiveData.Sdk.Common.html": {
    "href": "api/Sportradar.LiveData.Sdk.Common.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Common | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Common Classes CommonLoggerManager GlobalSettings LoggerData"
  },
  "api/Sportradar.LiveData.Sdk.Connections.Http.DataReceivedDelegates.DataStreamReceived.html": {
    "href": "api/Sportradar.LiveData.Sdk.Connections.Http.DataReceivedDelegates.DataStreamReceived.html",
    "title": "Delegate DataReceivedDelegates.DataStreamReceived | sportradar.livedata.sdk",
    "keywords": "Delegate DataReceivedDelegates.DataStreamReceived Namespace Sportradar.LiveData.Sdk.Connections.Http Assembly Sportradar.LiveData.Sdk.dll public delegate bool DataReceivedDelegates.DataStreamReceived(Stream data_stream) Parameters data_stream Stream Returns bool"
  },
  "api/Sportradar.LiveData.Sdk.Connections.Http.DataReceivedDelegates.html": {
    "href": "api/Sportradar.LiveData.Sdk.Connections.Http.DataReceivedDelegates.html",
    "title": "Class DataReceivedDelegates | sportradar.livedata.sdk",
    "keywords": "Class DataReceivedDelegates Namespace Sportradar.LiveData.Sdk.Connections.Http Assembly Sportradar.LiveData.Sdk.dll public class DataReceivedDelegates Inheritance object DataReceivedDelegates Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Sportradar.LiveData.Sdk.Connections.Http.HttpQueueFetcher.html": {
    "href": "api/Sportradar.LiveData.Sdk.Connections.Http.HttpQueueFetcher.html",
    "title": "Class HttpQueueFetcher | sportradar.livedata.sdk",
    "keywords": "Class HttpQueueFetcher Namespace Sportradar.LiveData.Sdk.Connections.Http Assembly Sportradar.LiveData.Sdk.dll public class HttpQueueFetcher : IQueueFetcher Inheritance object HttpQueueFetcher Implements IQueueFetcher Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HttpQueueFetcher(string, string) public HttpQueueFetcher(string fetch_url, string clear_queue_url) Parameters fetch_url string clear_queue_url string Methods DeleteQueue() public void DeleteQueue() Fetch() public Stream Fetch() Returns Stream"
  },
  "api/Sportradar.LiveData.Sdk.Connections.Http.IIntervalFetcher.html": {
    "href": "api/Sportradar.LiveData.Sdk.Connections.Http.IIntervalFetcher.html",
    "title": "Interface IIntervalFetcher | sportradar.livedata.sdk",
    "keywords": "Interface IIntervalFetcher Namespace Sportradar.LiveData.Sdk.Connections.Http Assembly Sportradar.LiveData.Sdk.dll public interface IIntervalFetcher Methods ClearQueue() void ClearQueue() ForceFetch() void ForceFetch() Start() Starts automatic fetching of data void Start() Stop() Stops automatic fetching of data void Stop() Events OnDataReceived Event to pass received data stream event DataReceivedDelegates.DataStreamReceived OnDataReceived Event Type DataReceivedDelegates.DataStreamReceived"
  },
  "api/Sportradar.LiveData.Sdk.Connections.Http.IQueueFetcher.html": {
    "href": "api/Sportradar.LiveData.Sdk.Connections.Http.IQueueFetcher.html",
    "title": "Interface IQueueFetcher | sportradar.livedata.sdk",
    "keywords": "Interface IQueueFetcher Namespace Sportradar.LiveData.Sdk.Connections.Http Assembly Sportradar.LiveData.Sdk.dll public interface IQueueFetcher Methods DeleteQueue() void DeleteQueue() Fetch() Stream Fetch() Returns Stream"
  },
  "api/Sportradar.LiveData.Sdk.Connections.Http.IntervalFetcher.html": {
    "href": "api/Sportradar.LiveData.Sdk.Connections.Http.IntervalFetcher.html",
    "title": "Class IntervalFetcher | sportradar.livedata.sdk",
    "keywords": "Class IntervalFetcher Namespace Sportradar.LiveData.Sdk.Connections.Http Assembly Sportradar.LiveData.Sdk.dll public class IntervalFetcher : IIntervalFetcher Inheritance object IntervalFetcher Implements IIntervalFetcher Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors IntervalFetcher(IQueueFetcher, TimeSpan, TimeSpan) public IntervalFetcher(IQueueFetcher fetcher, TimeSpan initial_delay, TimeSpan regular_delay) Parameters fetcher IQueueFetcher initial_delay TimeSpan regular_delay TimeSpan Methods ClearQueue() public void ClearQueue() ForceFetch() public void ForceFetch() Start() Starts automatic fetching of data public void Start() Stop() Stops automatic fetching of data public void Stop() Events OnDataReceived Event to pass received data stream public event DataReceivedDelegates.DataStreamReceived OnDataReceived Event Type DataReceivedDelegates.DataStreamReceived"
  },
  "api/Sportradar.LiveData.Sdk.Connections.Http.html": {
    "href": "api/Sportradar.LiveData.Sdk.Connections.Http.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Connections.Http | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Connections.Http Classes DataReceivedDelegates HttpQueueFetcher IntervalFetcher Interfaces IIntervalFetcher IQueueFetcher Delegates DataReceivedDelegates.DataStreamReceived"
  },
  "api/Sportradar.LiveData.Sdk.Connections.Tcp.InsecureTcpConnectionProvider.html": {
    "href": "api/Sportradar.LiveData.Sdk.Connections.Tcp.InsecureTcpConnectionProvider.html",
    "title": "Class InsecureTcpConnectionProvider | sportradar.livedata.sdk",
    "keywords": "Class InsecureTcpConnectionProvider Namespace Sportradar.LiveData.Sdk.Connections.Tcp Assembly Sportradar.LiveData.Sdk.dll public class InsecureTcpConnectionProvider : TcpConnectionProvider, IConnectionProvider Inheritance object TcpConnectionProvider InsecureTcpConnectionProvider Implements IConnectionProvider Inherited Members TcpConnectionProvider.IOLOOP TcpConnectionProvider.MIN_BUFFER_SIZE TcpConnectionProvider.INVALID_BYTES TcpConnectionProvider.g_random TcpConnectionProvider.THREAD_WAIT_TIMEOUT TcpConnectionProvider.m_pinger TcpConnectionProvider.m_rx_enabled TcpConnectionProvider.m_started TcpConnectionProvider.m_stream_wrapper TcpConnectionProvider.m_until_connected_block TcpConnectionProvider.m_until_disconnected_block TcpConnectionProvider.m_worker TcpConnectionProvider.OnAliveCheckNecessary TcpConnectionProvider.OnCommunicationError TcpConnectionProvider.OnConnected TcpConnectionProvider.OnDisconnected TcpConnectionProvider.OnMessageReceived TcpConnectionProvider.OnValidDataCheckNecessary TcpConnectionProvider.ConnectionData TcpConnectionProvider.IsStarted TcpConnectionProvider.RxEnabled TcpConnectionProvider.Error(string, string) TcpConnectionProvider.IOLoop() TcpConnectionProvider.IsReceiveThread() TcpConnectionProvider.SendMessage(string, bool) TcpConnectionProvider.Start(IConnectionData) TcpConnectionProvider.Start() TcpConnectionProvider.Stop(string) TcpConnectionProvider.WaitForConnection() TcpConnectionProvider.WaitForConnection(TimeSpan) TcpConnectionProvider.WaitForDisconnection() TcpConnectionProvider.WaitForDisconnection(TimeSpan) TcpConnectionProvider.EstablishConnection(bool, string, int) TcpConnectionProvider.Init() TcpConnectionProvider.IsByteSequenceOk(byte[], int, int) TcpConnectionProvider.StartInternal(IConnectionData) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors InsecureTcpConnectionProvider(ProtocolProviderType, ISdkLogger) public InsecureTcpConnectionProvider(ProtocolProviderType provider_type, ISdkLogger sdk_logger) Parameters provider_type ProtocolProviderType sdk_logger ISdkLogger InsecureTcpConnectionProvider(ProtocolProviderType, ISdkLogger, IConnectionData) public InsecureTcpConnectionProvider(ProtocolProviderType provider_type, ISdkLogger sdk_logger, IConnectionData data) Parameters provider_type ProtocolProviderType sdk_logger ISdkLogger data IConnectionData Methods ValidateServerCertificate(object, X509Certificate, X509Chain, SslPolicyErrors) protected override bool ValidateServerCertificate(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors ssl_policy_errors) Parameters sender object certificate X509Certificate chain X509Chain ssl_policy_errors SslPolicyErrors Returns bool VerifySslStrength(SslStream) protected override void VerifySslStrength(SslStream ssl_stream) Parameters ssl_stream SslStream"
  },
  "api/Sportradar.LiveData.Sdk.Connections.Tcp.TcpConnectionProvider.EstablishConnectionDelegate.html": {
    "href": "api/Sportradar.LiveData.Sdk.Connections.Tcp.TcpConnectionProvider.EstablishConnectionDelegate.html",
    "title": "Delegate TcpConnectionProvider.EstablishConnectionDelegate | sportradar.livedata.sdk",
    "keywords": "Delegate TcpConnectionProvider.EstablishConnectionDelegate Namespace Sportradar.LiveData.Sdk.Connections.Tcp Assembly Sportradar.LiveData.Sdk.dll public delegate StreamWrapper TcpConnectionProvider.EstablishConnectionDelegate(bool use_ssl, string hostname, int port) Parameters use_ssl bool hostname string port int Returns StreamWrapper"
  },
  "api/Sportradar.LiveData.Sdk.Connections.Tcp.TcpConnectionProvider.LineReceivedDelegate.html": {
    "href": "api/Sportradar.LiveData.Sdk.Connections.Tcp.TcpConnectionProvider.LineReceivedDelegate.html",
    "title": "Delegate TcpConnectionProvider.LineReceivedDelegate | sportradar.livedata.sdk",
    "keywords": "Delegate TcpConnectionProvider.LineReceivedDelegate Namespace Sportradar.LiveData.Sdk.Connections.Tcp Assembly Sportradar.LiveData.Sdk.dll public delegate void TcpConnectionProvider.LineReceivedDelegate(StringBuilder message_builder, string message) Parameters message_builder StringBuilder message string"
  },
  "api/Sportradar.LiveData.Sdk.Connections.Tcp.TcpConnectionProvider.html": {
    "href": "api/Sportradar.LiveData.Sdk.Connections.Tcp.TcpConnectionProvider.html",
    "title": "Class TcpConnectionProvider | sportradar.livedata.sdk",
    "keywords": "Class TcpConnectionProvider Namespace Sportradar.LiveData.Sdk.Connections.Tcp Assembly Sportradar.LiveData.Sdk.dll public class TcpConnectionProvider : IConnectionProvider Inheritance object TcpConnectionProvider Implements IConnectionProvider Derived InsecureTcpConnectionProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TcpConnectionProvider(ProtocolProviderType, ISdkLogger) public TcpConnectionProvider(ProtocolProviderType provider_type, ISdkLogger sdk_logger) Parameters provider_type ProtocolProviderType sdk_logger ISdkLogger TcpConnectionProvider(ProtocolProviderType, ISdkLogger, IConnectionData) public TcpConnectionProvider(ProtocolProviderType provider_type, ISdkLogger sdk_logger, IConnectionData data) Parameters provider_type ProtocolProviderType sdk_logger ISdkLogger data IConnectionData Fields INVALID_BYTES Contains all bytes that should not be received (for instance non-printable characters). protected static HashSet<int> INVALID_BYTES Field Value HashSet<int> IOLOOP public const string IOLOOP = \"IOLoop\" Field Value string MIN_BUFFER_SIZE public const int MIN_BUFFER_SIZE = 16 Field Value int THREAD_WAIT_TIMEOUT protected static TimeSpan THREAD_WAIT_TIMEOUT Field Value TimeSpan g_random protected static Random g_random Field Value Random m_pinger protected Timer m_pinger Field Value Timer m_rx_enabled protected ManualResetEventSlim m_rx_enabled Field Value ManualResetEventSlim m_started protected volatile bool m_started Field Value bool m_stream_wrapper protected StreamWrapper m_stream_wrapper Field Value StreamWrapper m_until_connected_block protected ManualResetEventSlim m_until_connected_block Field Value ManualResetEventSlim m_until_disconnected_block protected ManualResetEventSlim m_until_disconnected_block Field Value ManualResetEventSlim m_worker protected Thread m_worker Field Value Thread Properties ConnectionData Obtain current connection data public IConnectionData ConnectionData { get; } Property Value IConnectionData IsStarted Obtain whether the connection provider is running. public bool IsStarted { get; } Property Value bool RxEnabled Whether reading from input stream is enabled or not (i.e. input msg queue going over the high watermark should disable all RX) public ManualResetEventSlim RxEnabled { get; } Property Value ManualResetEventSlim Methods Error(string, string) Start immediate error recovery. Usually due to an error on the upper layer. [Obsolete] public virtual void Error(string opt_protocol_message, string log_message) Parameters opt_protocol_message string Optional message that should be sent before disconnection log_message string Informative error description EstablishConnection(bool, string, int) protected StreamWrapper EstablishConnection(bool use_ssl, string hostname, int port) Parameters use_ssl bool hostname string port int Returns StreamWrapper IOLoop() public virtual void IOLoop() Init() protected virtual void Init() IsByteSequenceOk(byte[], int, int) protected virtual bool IsByteSequenceOk(byte[] seq, int offset, int count) Parameters seq byte[] offset int count int Returns bool IsReceiveThread() public bool IsReceiveThread() Returns bool SendMessage(string, bool) Deliver a protocol unit (as a string) to the server. public virtual bool SendMessage(string message, bool only_try = false) Parameters message string protocol unit (in string format) only_try bool when true do not throw any exceptions Returns bool Exceptions DisconnectedStateException If we are currently disconnected Start() Start the connection provider (connects to the server and start the automatic reconnection). ConnectionData must be initialized or else an exception is thrown. public virtual void Start() Start(IConnectionData) public virtual void Start(IConnectionData data) Parameters data IConnectionData Exceptions InvalidOperationException Happens when you want to call Start() twice in a row without Stop() StartInternal(IConnectionData) protected virtual void StartInternal(IConnectionData data) Parameters data IConnectionData Stop(string) Stop the connection provider. Opposite of Start(). public virtual void Stop(string opt_protocol_message) Parameters opt_protocol_message string Optional message that should be sent before disconnection ValidateServerCertificate(object, X509Certificate, X509Chain, SslPolicyErrors) protected virtual bool ValidateServerCertificate(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors ssl_policy_errors) Parameters sender object certificate X509Certificate chain X509Chain ssl_policy_errors SslPolicyErrors Returns bool VerifySslStrength(SslStream) protected virtual void VerifySslStrength(SslStream ssl_stream) Parameters ssl_stream SslStream WaitForConnection() Block and wait until the connection is established. public bool WaitForConnection() Returns bool true if the connection is established; false (should rarely happen) in case of a race-condition or when wait_time times out Remarks The method might return true and the connection can get broken right after that, so do not assume after that method we are for sure in a \"connected\" state, it might have been just a temporary state. WaitForConnection(TimeSpan) public bool WaitForConnection(TimeSpan ttl) Parameters ttl TimeSpan Returns bool WaitForDisconnection() Block and wait until the connection is not established anymore. public bool WaitForDisconnection() Returns bool WaitForDisconnection(TimeSpan) public bool WaitForDisconnection(TimeSpan ttl) Parameters ttl TimeSpan Returns bool Events OnAliveCheckNecessary Invoked when the protocol requires an alive check. public virtual event ConnectionProviderDelegates.AliveCheckNecessaryDelegate OnAliveCheckNecessary Event Type ConnectionProviderDelegates.AliveCheckNecessaryDelegate OnCommunicationError Invoked when a communication error on the physical connection is detected public virtual event ConnectionProviderDelegates.CommunicationErrorDelegate OnCommunicationError Event Type ConnectionProviderDelegates.CommunicationErrorDelegate OnConnected Invoked when the physical connection to the server is established. public virtual event ConnectionProviderDelegates.ConnectionDelegate OnConnected Event Type ConnectionProviderDelegates.ConnectionDelegate OnDisconnected Invoked when the physical connection to the server is dropped. public virtual event ConnectionProviderDelegates.ConnectionDelegate OnDisconnected Event Type ConnectionProviderDelegates.ConnectionDelegate OnMessageReceived Invoked when a new protocol data unit in string format is received. public virtual event ConnectionProviderDelegates.DataReceivedDelegate OnMessageReceived Event Type ConnectionProviderDelegates.DataReceivedDelegate OnValidDataCheckNecessary Invoked when the protocol requires a check for valid data. public virtual event ConnectionProviderDelegates.ValidDataCheckNecessaryDelegate OnValidDataCheckNecessary Event Type ConnectionProviderDelegates.ValidDataCheckNecessaryDelegate"
  },
  "api/Sportradar.LiveData.Sdk.Connections.Tcp.html": {
    "href": "api/Sportradar.LiveData.Sdk.Connections.Tcp.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Connections.Tcp | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Connections.Tcp Classes InsecureTcpConnectionProvider TcpConnectionProvider Delegates TcpConnectionProvider.EstablishConnectionDelegate TcpConnectionProvider.LineReceivedDelegate"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.Common.Entities.HomeAway-1.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.Common.Entities.HomeAway-1.html",
    "title": "Class HomeAway<T> | sportradar.livedata.sdk",
    "keywords": "Class HomeAway<T> Namespace Sportradar.LiveData.Sdk.FeedProviders.Common.Entities Assembly Sportradar.LiveData.Sdk.dll Home and away tuple (e.g. counters, stats). [Serializable] public class HomeAway<T> Type Parameters T Type that has a home and away value. Inheritance object HomeAway<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors HomeAway(T, T) Initializes a new instance of the HomeAway<T> class. public HomeAway(T team1, T team2) Parameters team1 T Team 1 / Home team team2 T Team 2 / Away team Properties Team1 Team 1 / Home team. public T Team1 { get; } Property Value T Team2 Team 2 / Away team. public T Team2 { get; } Property Value T Methods ToString() Convert to string representation. public override string ToString() Returns string Proper string representation."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.Common.Entities.IdNameTuple.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.Common.Entities.IdNameTuple.html",
    "title": "Class IdNameTuple | sportradar.livedata.sdk",
    "keywords": "Class IdNameTuple Namespace Sportradar.LiveData.Sdk.FeedProviders.Common.Entities Assembly Sportradar.LiveData.Sdk.dll Id and localized name tuple with optional unique id field. [Serializable] public class IdNameTuple Inheritance object IdNameTuple Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IdNameTuple(long, string, bool) Initialize a new IdNameTuple instance. public IdNameTuple(long id, string value, bool id_specified = true) Parameters id long Entity id value string Entity value id_specified bool Whether id is specified or not IdNameTuple(long, string, long, bool, bool) Initialize a new IdNameTuple instance. public IdNameTuple(long id, string value, long unique_id, bool id_specified = true, bool unique_id_specified = true) Parameters id long Entity id value string Entity value unique_id long Entity unique id (i.e. team unique id) id_specified bool Whether id is specified or not unique_id_specified bool Whether unique id is specified or not Properties Id Entity id public long? Id { get; } Property Value long? Name Localized entity name public LocalizedString Name { get; } Property Value LocalizedString UniqueId Specified the team unique id. The teams have two id's; one named id and another named uniqueid. The id is for that team in that tournament, and the uniqueid is for that team in all tournaments. Not all teams have the uniqueid attribute, so it should only be used to identify that two teams in different tournaments are the same. public long? UniqueId { get; } Property Value long? Methods ToString() Convert to string representation. public override string ToString() Returns string Proper string representation."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.Common.Entities.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.Common.Entities.html",
    "title": "Namespace Sportradar.LiveData.Sdk.FeedProviders.Common.Entities | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.FeedProviders.Common.Entities Classes HomeAway<T> Home and away tuple (e.g. counters, stats). IdNameTuple Id and localized name tuple with optional unique id field."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.Common.Enums.ErrorCause.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.Common.Enums.ErrorCause.html",
    "title": "Enum ErrorCause | sportradar.livedata.sdk",
    "keywords": "Enum ErrorCause Namespace Sportradar.LiveData.Sdk.FeedProviders.Common.Enums Assembly Sportradar.LiveData.Sdk.dll Error cause. public enum ErrorCause Fields DISCONNECTED = 2 OnDisconnected from server PARSE = 1 Feed parsing error occurred UNKNOWN = 0 Unknown"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.Common.Enums.ErrorSeverity.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.Common.Enums.ErrorSeverity.html",
    "title": "Enum ErrorSeverity | sportradar.livedata.sdk",
    "keywords": "Enum ErrorSeverity Namespace Sportradar.LiveData.Sdk.FeedProviders.Common.Enums Assembly Sportradar.LiveData.Sdk.dll Error severity. public enum ErrorSeverity Fields CRITICAL = 0 Critical level ERROR = 1 Error level WARNING = 2 Warning level"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.Common.Enums.Team.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.Common.Enums.Team.html",
    "title": "Enum Team | sportradar.livedata.sdk",
    "keywords": "Enum Team Namespace Sportradar.LiveData.Sdk.FeedProviders.Common.Enums Assembly Sportradar.LiveData.Sdk.dll Home or Away team public enum Team Fields AWAY = 1 Away team HOME = 2 Home team NONE = 3 None (neither home or away) UNDEFINED = 0 Undefined"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.Common.Enums.TeamsReversed.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.Common.Enums.TeamsReversed.html",
    "title": "Enum TeamsReversed | sportradar.livedata.sdk",
    "keywords": "Enum TeamsReversed Namespace Sportradar.LiveData.Sdk.FeedProviders.Common.Enums Assembly Sportradar.LiveData.Sdk.dll public enum TeamsReversed Fields ORDER_CONFIRMED = 0 Order is officially confirmed (no changes) ORDER_NOT_CONFIRMED = 1 Order is not confirmed ORDER_REVERSED = 2 Order is reversed on official"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.Common.Enums.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.Common.Enums.html",
    "title": "Namespace Sportradar.LiveData.Sdk.FeedProviders.Common.Enums | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.FeedProviders.Common.Enums Enums ErrorCause Error cause. ErrorSeverity Error severity. Team Home or Away team TeamsReversed"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.Common.Events.FeedErrorEventArgs.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.Common.Events.FeedErrorEventArgs.html",
    "title": "Class FeedErrorEventArgs | sportradar.livedata.sdk",
    "keywords": "Class FeedErrorEventArgs Namespace Sportradar.LiveData.Sdk.FeedProviders.Common.Events Assembly Sportradar.LiveData.Sdk.dll Event arguments passed with OnFeedError [Serializable] public class FeedErrorEventArgs : EventArgs Inheritance object EventArgs FeedErrorEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Cause Error cause public ErrorCause Cause { get; } Property Value ErrorCause ErrorMessage Error message public string ErrorMessage { get; } Property Value string LocalTimestamp Error timestamp (local UTC timestamp) public DateTime LocalTimestamp { get; } Property Value DateTime Severity Error severity public ErrorSeverity Severity { get; } Property Value ErrorSeverity"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.Common.Events.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.Common.Events.html",
    "title": "Namespace Sportradar.LiveData.Sdk.FeedProviders.Common.Events | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.FeedProviders.Common.Events Classes FeedErrorEventArgs Event arguments passed with OnFeedError"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.Common.Interfaces.ILiveFeeds.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.Common.Interfaces.ILiveFeeds.html",
    "title": "Interface ILiveFeeds | sportradar.livedata.sdk",
    "keywords": "Interface ILiveFeeds Namespace Sportradar.LiveData.Sdk.FeedProviders.Common.Interfaces Assembly Sportradar.LiveData.Sdk.dll Live feeds base client interface. public interface ILiveFeeds : IStartable Inherited Members IStartable.Start() IStartable.Stop() Properties AvailableTranslations Language codes of the currently available translations. string[] AvailableTranslations { get; } Property Value string[] LastAliveMessage Get time when the last alive message from the server was received. DateTime LastAliveMessage { get; } Property Value DateTime Remarks Time is in UTC according to the local computer or DateTime.MinValue if no message was received yet in this session. A too old value might indicate a problem. Notice that you should not check against this value and disconnect manually MaxTimeSkew setting is meant for that. LastServerMessage Get time when the last message from the server was received. This includes alive messages that are periodically sent. DateTime LastServerMessage { get; } Property Value DateTime Remarks Time is in UTC according to the local computer or DateTime.MinValue if no message was received yet in this session. A too old value might indicate a problem. Notice that you should not check against this value and disconnect manually MaxTimeSkew setting is meant for that. ServerTime Get approximate server time. DateTime? ServerTime { get; } Property Value DateTime? Remarks Time is is synchronized from LiveOdds server in every received message and periodically from LiveScout (according to ServerTimeSyncInterval). Interpolation is used so this should approximately be the time on the server (not the time of the last message). Value can be null if last successful synchronization was more than MaxServerTimestampAge ago. SubscribedEvents All event ids we are currently subscribed to. long[] SubscribedEvents { get; } Property Value long[] Methods BookEvents(IEnumerable<long>) Book the specified events. Booked events cannot be cancelled through this interface. long? BookEvents(IEnumerable<long> event_ids) Parameters event_ids IEnumerable<long> event ids Returns long? Request id. LiveOdds : You can use this to match response if \"Include response reply number in meta\" is enabled Remarks You should prefer using the Live Calendar on the Betradar website (http://www.betradar.com) which offers automatic booking for certain types of events. Note that booking events will have a cost depending on the type of agreement you have with Sportradar. LiveScout: Expect OnMatchBookingReply message in reply. ClearState() Clears complete state for this provider, that can otherwise be used in case of feed error recovery which can occur after every feed server reconnect or at initial SDK startup. void ClearState() Remarks Should be used with extreme caution! Subscribe(IEnumerable<long>) Subscribe to specified events. void Subscribe(IEnumerable<long> event_ids) Parameters event_ids IEnumerable<long> Array of event ids Remarks With LiveScout you must explicitly call Subscribe() at start-up or no data will be received. Unsubscribe(IEnumerable<long>) Sends a batch unsubscribe request to the server for the specified event IDs. After this request is processed, no more events associated with these event IDs will be sent. void Unsubscribe(IEnumerable<long> event_ids) Parameters event_ids IEnumerable<long> Array of event ids Remarks LiveScout: Expect OnMatchStop message is response. Events OnFeedError Signals that a feed error has occurred (e.g. we got disconnected from the feed server, XML message parsing error occurred). event EventHandler<FeedErrorEventArgs> OnFeedError Event Type EventHandler<FeedErrorEventArgs> Remarks It is suggested that this event handler is wired to some Monitoring Service"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.Common.Interfaces.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.Common.Interfaces.html",
    "title": "Namespace Sportradar.LiveData.Sdk.FeedProviders.Common.Interfaces | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.FeedProviders.Common.Interfaces Interfaces ILiveFeeds Live feeds base client interface."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities.ConnectionTest.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities.ConnectionTest.html",
    "title": "Class ConnectionTest | sportradar.livedata.sdk",
    "keywords": "Class ConnectionTest Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities Assembly Sportradar.LiveData.Sdk.dll Connection test. [Serializable] public class ConnectionTest : ScoutEntityBase Inheritance object EntityBase ScoutEntityBase ConnectionTest Inherited Members EntityBase.AdditionalData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities.Lineups.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities.Lineups.html",
    "title": "Class Lineups | sportradar.livedata.sdk",
    "keywords": "Class Lineups Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities Assembly Sportradar.LiveData.Sdk.dll The current lineup. [Serializable] public class Lineups : ScoutEntityBase Inheritance object EntityBase ScoutEntityBase Lineups Inherited Members EntityBase.AdditionalData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Managers Team managers public List<Manager> Managers { get; } Property Value List<Manager> MatchId Match ID. public long MatchId { get; } Property Value long Players List of players in lineup public List<Player> Players { get; } Property Value List<Player> Preliminary public bool? Preliminary { get; } Property Value bool? TeamOfficals Team officals public List<TeamOffical> TeamOfficals { get; } Property Value List<TeamOffical> Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities.Manager.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities.Manager.html",
    "title": "Class Manager | sportradar.livedata.sdk",
    "keywords": "Class Manager Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities Assembly Sportradar.LiveData.Sdk.dll Team manager [Serializable] public class Manager Inheritance object Manager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Id Manager id public int Id { get; } Property Value int Name Manager name public string Name { get; } Property Value string Team Home or Away team public Team Team { get; } Property Value Team Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities.MatchBooking.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities.MatchBooking.html",
    "title": "Class MatchBooking | sportradar.livedata.sdk",
    "keywords": "Class MatchBooking Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities Assembly Sportradar.LiveData.Sdk.dll Match booking reply. This reply is sent when a client books a match. [Serializable] public class MatchBooking : ScoutEntityBase Inheritance object EntityBase ScoutEntityBase MatchBooking Inherited Members EntityBase.AdditionalData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties MatchId The ID of the match booking reply is for. public long? MatchId { get; } Property Value long? Message If the match booking fails for any reason (match already bought, match finished etc.), the message will contain an explanation. public string Message { get; } Property Value string Result Result of match booking (either valid or invalid) public BookMatchResult Result { get; } Property Value BookMatchResult Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities.MatchData.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities.MatchData.html",
    "title": "Class MatchData | sportradar.livedata.sdk",
    "keywords": "Class MatchData Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities Assembly Sportradar.LiveData.Sdk.dll Match time information during a game. [Serializable] public class MatchData : ScoutEntityBase Inheritance object EntityBase ScoutEntityBase MatchData Inherited Members EntityBase.AdditionalData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties MatchId Match id. public long MatchId { get; } Property Value long MatchTime Match time. public string MatchTime { get; } Property Value string RemainingTimeInPeriod Specifies the remaining time in this period (when this applies). public string RemainingTimeInPeriod { get; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities.MatchList.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities.MatchList.html",
    "title": "Class MatchList | sportradar.livedata.sdk",
    "keywords": "Class MatchList Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities Assembly Sportradar.LiveData.Sdk.dll List of matches in the time frame requested by the client. [Serializable] public class MatchList : ScoutEntityBase Inheritance object EntityBase ScoutEntityBase MatchList Derived MatchListUpdate Inherited Members EntityBase.AdditionalData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Matches List of matches in the time frame requested by the client. public List<MatchUpdate> Matches { get; } Property Value List<MatchUpdate> Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities.MatchListUpdate.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities.MatchListUpdate.html",
    "title": "Class MatchListUpdate | sportradar.livedata.sdk",
    "keywords": "Class MatchListUpdate Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities Assembly Sportradar.LiveData.Sdk.dll List of matches sent unsolicited from server (uses same format as MatchList for now). [Serializable] public class MatchListUpdate : MatchList Inheritance object EntityBase ScoutEntityBase MatchList MatchListUpdate Inherited Members MatchList.Matches EntityBase.AdditionalData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities.MatchStop.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities.MatchStop.html",
    "title": "Class MatchStop | sportradar.livedata.sdk",
    "keywords": "Class MatchStop Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities Assembly Sportradar.LiveData.Sdk.dll Reply sent when a client unsubscribes from a match or when a match subscription failed. [Serializable] public class MatchStop : ScoutEntityBase Inheritance object EntityBase ScoutEntityBase MatchStop Inherited Members EntityBase.AdditionalData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties MatchId Match id public long MatchId { get; } Property Value long Reason Reason for match subscription failure or notification that un-subscription was successful. public string Reason { get; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities.MatchUpdate.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities.MatchUpdate.html",
    "title": "Class MatchUpdate | sportradar.livedata.sdk",
    "keywords": "Class MatchUpdate Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities Assembly Sportradar.LiveData.Sdk.dll Match information message. Contains statistical information about a match as well as individual events (e.g. goals, cards, etc.). [Serializable] public class MatchUpdate : ScoutEntityBase Inheritance object EntityBase ScoutEntityBase MatchUpdate Inherited Members EntityBase.AdditionalData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Attacks Attacks statistics. public HomeAway<int> Attacks { get; } Property Value HomeAway<int> Behinds Gets the behinds public Behinds Behinds { get; } Property Value Behinds BlackCards Black cards (badminton) public HomeAway<int> BlackCards { get; } Property Value HomeAway<int> Category Sport category. public IdNameTuple Category { get; } Property Value IdNameTuple Corners Corner statistics. public HomeAway<int> Corners { get; } Property Value HomeAway<int> Court Type of court. public Court Court { get; } Property Value Court DangerousAttacks Dangerous attack statistics. public HomeAway<int> DangerousAttacks { get; } Property Value HomeAway<int> DirectFoulsPeriod Direct fouls for current period statistics (futsal). public HomeAway<int> DirectFoulsPeriod { get; } Property Value HomeAway<int> DirectFreeKicks Direct free kicks statistics (futsal). public HomeAway<int> DirectFreeKicks { get; } Property Value HomeAway<int> Events List of scout events. public List<ScoutEvent> Events { get; } Property Value List<ScoutEvent> FreeKicks Free kick statistics. public HomeAway<int> FreeKicks { get; } Property Value HomeAway<int> FreeThrows Free throws statistics. public HomeAway<int> FreeThrows { get; } Property Value HomeAway<int> GoalKicks Goal kick statistics. public HomeAway<int> GoalKicks { get; } Property Value HomeAway<int> GoalkeeperSaves Goal keeper saves statistics. public HomeAway<int> GoalkeeperSaves { get; } Property Value HomeAway<int> Goals Gets the goals public Goals Goals { get; } Property Value Goals Gold Gets the gold. public Gold Gold { get; } Property Value Gold GreenCards Green card statistics. public HomeAway<int> GreenCards { get; } Property Value HomeAway<int> IceConditions Ice conditions public IceConditions? IceConditions { get; } Property Value IceConditions? Injuries Injuries statistics. public HomeAway<int> Injuries { get; } Property Value HomeAway<int> Innings Innings public List<Innings> Innings { get; } Property Value List<Innings> IsTieBreak Whether the match is currently in tie break status (tennis). public bool? IsTieBreak { get; } Property Value bool? Jerseys Gets the jerseys public List<Jersey> Jerseys { get; } Property Value List<Jersey> KickoffTeam Kickoff team public Team? KickoffTeam { get; } Property Value Team? KickoffTeamFirstHalf Kickoff team public Team? KickoffTeamFirstHalf { get; } Property Value Team? KickoffTeamOt Kickoff team public Team? KickoffTeamOt { get; } Property Value Team? KickoffTeamSecondHalf Kickoff team public Team? KickoffTeamSecondHalf { get; } Property Value Team? MatchFormat Match format public List<Format> MatchFormat { get; } Property Value List<Format> MatchHeader Basic match information. public MatchHeader MatchHeader { get; } Property Value MatchHeader MatchStatus Current match status. Same status codes as in LiveOdds and LiveScore. public ScoutMatchStatus MatchStatus { get; } Property Value ScoutMatchStatus MatchStatusId Current match status id. Same status codes as in LiveOdds and LiveScore. public int MatchStatusId { get; } Property Value int MatchStatusStart Time stamp for when match status was set in UTC. public DateTime MatchStatusStart { get; } Property Value DateTime Networth Gets the networth public Networth Networth { get; } Property Value Networth Offsides Offside statistics. public HomeAway<int> Offsides { get; } Property Value HomeAway<int> OpeningFaceoff1StPeriod Opening faceoff 1st period public Team? OpeningFaceoff1StPeriod { get; } Property Value Team? OpeningFaceoff2NdPeriod Opening faceoff 2nd period public Team? OpeningFaceoff2NdPeriod { get; } Property Value Team? OpeningFaceoff3RdPeriod Opening faceoff 3rd period public Team? OpeningFaceoff3RdPeriod { get; } Property Value Team? OpeningFaceoffOvertime Opening faceoff overtime public Team? OpeningFaceoffOvertime { get; } Property Value Team? Penalties Penalties statistics. public HomeAway<int> Penalties { get; } Property Value HomeAway<int> PitchConditions Pitch / grass conditions. public PitchConditions PitchConditions { get; } Property Value PitchConditions Possession Ball possession statistics. public HomeAway<int?> Possession { get; } Property Value HomeAway<int?> PossessionTeam Which team currently has possession of the ball. public Team PossessionTeam { get; } Property Value Team Properties Match properties public List<MatchProperty> Properties { get; } Property Value List<MatchProperty> RedCards Red card statistics. public HomeAway<int> RedCards { get; } Property Value HomeAway<int> Score Match score information. [Obsolete(\"Use List<Score> Scores instead. It may contain SubScores - i.e. for tennis tie breaks\")] public IDictionary<string, HomeAway<double>> Score { get; } Property Value IDictionary<string, HomeAway<double>> Scores Gets the match scores public List<Score> Scores { get; } Property Value List<Score> The match scores Scout Scout public Scout Scout { get; } Property Value Scout Serve Which player/team currently has the serve (tennis, volleyball). public Team Serve { get; } Property Value Team ShotsBlocked Shots blocked statistics. public HomeAway<int> ShotsBlocked { get; } Property Value HomeAway<int> ShotsOffTarget Shots off target statistics. public HomeAway<int> ShotsOffTarget { get; } Property Value HomeAway<int> ShotsOnTarget Shots on target statistics. public HomeAway<int> ShotsOnTarget { get; } Property Value HomeAway<int> Sport Type of sport. public IdNameTuple Sport { get; } Property Value IdNameTuple SubTeam Sub team. [Obsolete(\"SubTeam is deprecated. Use Subteams instead.\")] public SubTeam SubTeam { get; } Property Value SubTeam SubTeams Sub team. public List<SubTeam> SubTeams { get; } Property Value List<SubTeam> The match scores SurfaceType Surface type (tennis). public SurfaceType SurfaceType { get; } Property Value SurfaceType Suspensions Suspensions statistics. public Suspensions Suspensions { get; } Property Value Suspensions Teams Match teams public List<MatchTeam> Teams { get; } Property Value List<MatchTeam> Throwins Throw-in statistics. public HomeAway<int> Throwins { get; } Property Value HomeAway<int> Tournament Sport tournament. public IdNameTuple Tournament { get; } Property Value IdNameTuple WeatherConditions Weather conditions. public WeatherConditions WeatherConditions { get; } Property Value WeatherConditions YellowCards Yellow cards statistics. public HomeAway<int> YellowCards { get; } Property Value HomeAway<int> Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities.Player.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities.Player.html",
    "title": "Class Player | sportradar.livedata.sdk",
    "keywords": "Class Player Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities Assembly Sportradar.LiveData.Sdk.dll A player in the lineup. [Serializable] public class Player : ScoutEntityBase Inheritance object EntityBase ScoutEntityBase Player Inherited Members EntityBase.AdditionalData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Attributes Attributes public List<Attribute> Attributes { get; } Property Value List<Attribute> Id ID of the player public int Id { get; } Property Value int IsSubstitute Is the player a substitute? public bool IsSubstitute { get; } Property Value bool MatchRoles Match roles public List<MatchRole> MatchRoles { get; } Property Value List<MatchRole> Name Name of the player. public string Name { get; } Property Value string Nickname Player nickname public string Nickname { get; } Property Value string Order The order id public int? Order { get; } Property Value int? Position Player position public string Position { get; } Property Value string ShirtNumber Shirt number. public int ShirtNumber { get; } Property Value int Team Team of the player. public Team Team { get; } Property Value Team Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities.ScoutEntityBase.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities.ScoutEntityBase.html",
    "title": "Class ScoutEntityBase | sportradar.livedata.sdk",
    "keywords": "Class ScoutEntityBase Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities Assembly Sportradar.LiveData.Sdk.dll Serves as a base class that all LiveOdds entities should be derived from. [Serializable] [KnownType(typeof(MatchBooking))] [KnownType(typeof(MatchList))] [KnownType(typeof(MatchListUpdate))] [KnownType(typeof(MatchStop))] [KnownType(typeof(Manager))] [KnownType(typeof(MatchUpdate))] [KnownType(typeof(MatchUpdate))] [KnownType(typeof(ScoutInfos))] [KnownType(typeof(Lineups))] [KnownType(typeof(ConnectionTest))] public abstract class ScoutEntityBase : EntityBase Inheritance object EntityBase ScoutEntityBase Derived ConnectionTest Lineups MatchBooking MatchData MatchList MatchStop MatchUpdate Player ScoutInfos Inherited Members EntityBase.AdditionalData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ScoutEntityBase() protected ScoutEntityBase() Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities.ScoutInfos.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities.ScoutInfos.html",
    "title": "Class ScoutInfos | sportradar.livedata.sdk",
    "keywords": "Class ScoutInfos Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities Assembly Sportradar.LiveData.Sdk.dll Match information messages (e.g. Distance between teams, Pre-match avg. odds, etc.) [Serializable] public class ScoutInfos : ScoutEntityBase Inheritance object EntityBase ScoutEntityBase ScoutInfos Inherited Members EntityBase.AdditionalData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Infos Collection of match information messages. public List<ScoutInfo> Infos { get; } Property Value List<ScoutInfo> MatchId Match id. public long MatchId { get; } Property Value long Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities.Suspensions.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities.Suspensions.html",
    "title": "Class Suspensions | sportradar.livedata.sdk",
    "keywords": "Class Suspensions Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class Suspensions Inheritance object Suspensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties PowerPlay public Team PowerPlay { get; } Property Value Team Team1 public int Team1 { get; } Property Value int Team2 public int Team2 { get; } Property Value int Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities.TeamOffical.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities.TeamOffical.html",
    "title": "Class TeamOffical | sportradar.livedata.sdk",
    "keywords": "Class TeamOffical Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities Assembly Sportradar.LiveData.Sdk.dll Team offical [Serializable] public class TeamOffical Inheritance object TeamOffical Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Id Manager id public int Id { get; } Property Value int Name Manager name public string Name { get; } Property Value string Team Home or Away team public Team Team { get; } Property Value Team Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities.html",
    "title": "Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Entities Classes ConnectionTest Connection test. Lineups The current lineup. Manager Team manager MatchBooking Match booking reply. This reply is sent when a client books a match. MatchData Match time information during a game. MatchList List of matches in the time frame requested by the client. MatchListUpdate List of matches sent unsolicited from server (uses same format as MatchList for now). MatchStop Reply sent when a client unsubscribes from a match or when a match subscription failed. MatchUpdate Match information message. Contains statistical information about a match as well as individual events (e.g. goals, cards, etc.). Player A player in the lineup. ScoutEntityBase Serves as a base class that all LiveOdds entities should be derived from. ScoutInfos Match information messages (e.g. Distance between teams, Pre-match avg. odds, etc.) Suspensions TeamOffical Team offical"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.BookMatchResult.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.BookMatchResult.html",
    "title": "Enum BookMatchResult | sportradar.livedata.sdk",
    "keywords": "Enum BookMatchResult Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums Assembly Sportradar.LiveData.Sdk.dll Book match result public enum BookMatchResult Fields INVALID = 2 Invalid UNDEFINED = 0 Undefined VALID = 1 Valid"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.Coverage.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.Coverage.html",
    "title": "Enum Coverage | sportradar.livedata.sdk",
    "keywords": "Enum Coverage Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums Assembly Sportradar.LiveData.Sdk.dll Type of match coverage. public enum Coverage Fields TV = 1 TV coverage UNDEFINED = 0 Undefined VENUE = 2 Coverage from the venue"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.EventType.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.EventType.html",
    "title": "Enum EventType | sportradar.livedata.sdk",
    "keywords": "Enum EventType Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums Assembly Sportradar.LiveData.Sdk.dll Event type. See LiveScout documentation to see which event types are supported for each sport. New event types can be offered in future. [Obsolete(\"Please use the appropriate event typeId instead and map typeId to event type based on sport in according to feed documentation\")] public enum EventType Fields ABANDONED = 13 ACES_PERIOD = 1518 ACTIVE_GOAL_KEEPER = 1704 Active goal keeper ADD_BALL = 1175 Add ball ADD_INCR_ID = 1129 AF_PENALTY_COUNT = 1608 Penalty count (American Football) ALL = 0 ALL_DARTS_AVERAGE = 1752 ALL_OUT = 2320 ALL_OUT_CANCELLED = 2321 ALL_OUT_POINT_ADJUSTMENT = 2322 ALL_POINT_ADJUSTMENT = 2326 AMERICAN_FOOTBALL_KICKOFF = 1445 American football kickoff APPEAL = 1335 Appeal AR_GOAL = 2094 ATTACK = 1126 Attack (Tennis) ATTACKING_PLAYERS = 2234 ATTENDANCE = 165 Attendance AUSSIE_RULES_FREE_KICK = 2093 AUSSIE_RULES_THROW_IN = 2111 AVERAGE_1ST_SERVE = 2035 AVERAGE_2ND_SERVE = 2036 AWARDED_6_METER_THROW = 1209 AWAY_TEAM_MANAGER = 170 AWAY_TEAM_USES_AWAY_KIT = 167 BACKHAND_WINNERS = 2030 BADMINTON_PENALTIES_COUNT = 1623 BADMINTON_PENALTIES_PERIOD = 1624 BADMINTON_SCORE_CHANGE = 1141 Badminton score change BALK = 1728 Balk BALL = 1723 Ball BALL_CANCELLED = 1931 BALL_CHANGE_FREQUENCY = 1106 Ball change frequency BALL_FINISHED = 1308 Ball finished BALL_HIT = 1310 Ball hit BALL_IN_PLAY = 1031 Ball in play at Volleyball and Beach Volleyball BALL_IN_PLAY_SERVICE_TAKEN = 1031 Ball in play / Service taken at Tennis BALL_KICKED = 1144 Ball kicked BALL_MARK_INSPECTION = 2387 BALL_POSITION = 1062 Ball position BALL_POSSESSION = 110 Ball possession BALL_POT = 1169 Ball pot BALL_RECYCLED = 1143 Ball recycled BALL_SAFE = 1030 Ball safe BALL_UP = 2092 BASEBALL_ERROR = 2112 BASE_LOAD_ADJUSTED = 1935 BASKETBALL_3X3_SCORE_ADJUSTMENT = 2331 BASKETBALL_SCORE_CHANGE = 1037 Basketball score change BASKETBALL_SCORE_MISS = 1038 Basketball score miss BASKET_POINTS_ATTEMPTED_AND_SUCCESS = 1066 BASKET_TOTAL_NUMBER_FREE_THROWS = 1065 BASKET_TOTAL_REBOUNDS = 1067 BATSMAN_COMING_ON = 1339 Batsman coming on BATTER_ADVANCES_TO_BASE_X = 1727 Batter advanced to base x BATTER_CHANGE = 1940 BATTER_OUT = 1726 Batter out BEHIND = 2095 BEST_OF_FRAMES = 1136 Best of frames BEST_OF_LEGS = 1135 Best of legs BEST_OF_MAPS = 1810 BETSTATUS_LIVEODDS_EVENT = 1183 BETSTATUS_SCOUT_EVENT = 1185 BET_START = 1010 Bet start BET_STOP = 1011 Bet stop BIGGEST_COMEBACK = 1617 BIGGEST_COMEBACK_PERIOD = 1618 BIGGEST_LEAD = 1619 BIGGEST_LEAD_PERIOD = 1620 BIG_PLAY = 1736 Big play BLACKCARD = 1142 Black card BLOCK = 1735 Block BLOCK_FINISHED = 2373 BLOCK_STARTED = 2372 BLUE_CARD = 48 Yellow and red card BOUNCE = 2091 BOUNDARY = 1312 Boundary BOWL = 1504 Bowl BOWLER_CHANGE = 1340 Bowler change BOWLER_RUNNING_IN = 1307 Bowler running in BOWLER_STARTS = 1501 Bowler starts BOWLS_COLORS = 1666 BOWLS_START_DELAYED = 1514 Start delayed BREAKS_PERIOD = 1526 BREAK_DUE_TO_EXTREME_WEATHER_CONDITIONS = 1108 Break due to extreme weather conditions (Tennis) BREAK_DUE_TO_EXTREME_WEATHER_CONDITIONS_OVER = 1109 Break due to extreme weather conditions over (Tennis) CALCULATED_PLAYER_MATCH_STATS_PER_PERIOD = 2055 CANCELED_2_POINT_CONVERSION = 1450 Canceled 2 point conversion CANCELED_6_METER_THROW = 1211 CANCELED_CHALLENGE = 1443 Delayed penalty (Ice Hockey) CANCELED_CONVERSION1P = 1469 CANCELED_CONVERSION3P = 1466 CANCELED_DROP_KICK = 2062 CANCELED_EXTRA_POINT = 1452 Canceled extra point CANCELED_FIELD_GOAL = 1425 Canceled field goal CANCELED_GREEN_CARD = 1754 CANCELED_PUNT = 1456 Canceled punt CANCELED_RUGBY_POINTS = 1095 CANCELED_SAFETY = 1454 Canceled safety CANCELED_TOUCHDOWN = 1439 CANCELED_TURNOVER = 1448 Canceled turnover CANCELED_VIDEO_ASSISTANT_REFEREE = 2067 The canceled video assistant referee CANCELED_VIDEO_REVIEW = 1921 Sent when video review is not confirmed CANCELLED = 21 CANCELLED_CORNER = 1017 Cancelled corner CANCELLED_EXCLUSION = 1419 Cancelled exclusion (Handball) CANCELLED_GOAL = 1019 Cancelled goal Extra info: 0 or -1(not specified, 1(off side, 2(foul, 3(incorrect entry, 4(out of bounds, 5(play stopped CANCELLED_PENALTY = 1043 Cancelled penalty CANCELLED_POINT = 1028 Cancelled point CANCELLED_RED_CARD = 1041 Cancelled red card CANCELLED_SUSPENSION = 1418 Cancelled suspension (Handball) CANCELLED_YELLOW_CARD = 1085 Cancelled yellow card CAPTAIN = 84 CHAIR_UMPIRE_ON_COURT = 1107 Chair umpire on court (Tennis) CHALLENGE = 1659 Challenge CHALLENGES_REMAINING = 2037 CHALLENGE_AF = 1433 Challenge af CHALLENGE_COUNT = 1614 Interception count (American Football) CHALLENGE_DECISION = 1656 Challenge decision CHALLENGE_NOT_CONFIRMED = 1660 Challenge not confirmed CHECKED_RUNNER = 1718 Checked runner CHECKOUTS = 1762 CODE_VIOLATION = 1115 Code violation (Tennis) COMMENT = 160 CONVERSION = 1156 Conversion CONVERSION1P = 1467 CONVERSION3P = 1464 CONVERSION_COUNT = 1640 CONVERSION_COUNT_PERIOD = 1641 CONVERSION_POSITION = 1205 CORNER = 154 Corner CORNER_ADJUSTMENT = 70 CORNER_COUNT_HALFTIME = 1079 CORNER_COUNT_NORMALTIME = 1078 CORNER_KICK_COUNT = 124 Corner kick count CORNER_KICK_COUNT_PERIOD = 1634 CORRECT_BALL_DATA = 1349 Correct ball data (Cricket) CORRECT_BATSMAN_DATA = 1345 Correct Batsman data (Cricket) CORRECT_BATSMAN_ON_STRIKE = 1348 Correct batsman on strike (Cricket) CORRECT_BOWLER_DATA = 1346 Correct bowler data (Cricket) CORRECT_TEAM_DATA = 1347 Correct team data (Cricket) CORRECT_UNKNOWN_BATSMAN = 1355 CORRECT_UNKNOWN_BOWLER = 1356 COURT_CHANGE = 1123 COVERAGE_CONFIRMED = 2221 COVERAGE_STATUS = 1102 Coverage status CRICKET_BALL_RESULT = 1883 CRICKET_BALL_STATS = 2049 CRICKET_CURRENT_STATUS = 1705 CRICKET_EQUATION_STATS = 2042 CRICKET_EXTRA_STATS = 2041 CRICKET_FALL_OF_WICKET_STATS = 2043 CRICKET_FORMAT_BATTING_POWERPLAYS = 1294 CRICKET_FORMAT_DAYS = 1292 CRICKET_FORMAT_IS_LIMITED_OVERS = 1290 CRICKET_FORMAT_MANDATORY_POWERPLAYS = 1293 CRICKET_FORMAT_NO_BALL_PENALTY_VALUE = 1297 CRICKET_FORMAT_OVERS = 1291 CRICKET_FORMAT_OVERS_PER_BOWLER = 1295 CRICKET_FORMAT_OVERS_USED = 1299 CRICKET_FORMAT_POWERPLAY_1 = 1287 CRICKET_FORMAT_POWERPLAY_2 = 1288 CRICKET_FORMAT_POWERPLAY_3 = 1289 CRICKET_FORMAT_REVIEWS = 1296 CRICKET_FORMAT_TIEBREAKER_METHOD = 1298 CRICKET_INNINGS_STATS = 2040 CRICKET_OVER_DETAILS = 2044 CRICKET_WICKET_PARTNERSHIPS = 2054 CS_ASSIST = 1824 CS_BOMB_DEFUSE_BEGIN = 1901 CS_BOMB_PLANTED = 1900 CS_CT_START = 1828 CS_DAMAGE_DEALT = 2224 CS_ITEM_CHANGE = 2222 CS_KILL = 1822 CS_MAP_BANNED = 2010 CS_MAP_ENDED = 1816 CS_MAP_HT_SCORE = 1829 CS_MAP_PICKED = 1826 CS_MAP_STARTED = 1814 CS_PLAYER_ECONOMY = 2079 CS_PLAYER_INVENTORY = 2225 CS_PURCHASE_PHASE_START = 2078 CS_ROUND_ENDED = 1820 CS_ROUND_INFO = 1812 CS_ROUND_ROLLBACK = 1827 CS_ROUND_STARTED = 1818 CS_SUICIDE = 1904 CS_TEAM_ECONOMY = 1902 CS_TEAM_KILL = 1903 CURRENT_BATTER_BASEBALL = 2144 CURRENT_PERIOD = 22 CURRENT_PITCHER_BASEBALL = 2143 CURRENT_SERVE_VOLLEYBALL = 1081 DANGEROUS_ATTACK = 1029 Dangerous attack DARTS_SCORE_CHANGE = 1130 Darts score change DEAD_BALL = 1332 Dead ball DEAD_BOWL = 1509 Dead bowl DEAD_END = 1507 Dead end DEAD_JACK = 1508 Dead jack DECISION_REVIEW = 1337 Decision review DECISION_REVIEW_RESULT = 1338 Decision review result DEFAULTED = 99 DEFENSIVE_FOUL = 1411 Defensive foul (Handball) DEFENSIVE_RETURN = 1738 Defensive return DEFENSIVE_RETURN_NOT_CONFIRMED = 1739 Defensive return not confirmed DEI_DARTS_DOUBLE_IN = 2211 DEI_DARTS_DRAW_POSSIBLE = 2206 DEI_DARTS_FIRST_TO_X_LEGS_IN_LAST_SET = 2203 DEI_DARTS_LEGS_TO_TRIGGER_SUDDEN_DEATH = 2207 DEI_DARTS_LEGS_TO_TRIGGER_SUDDEN_DEATH_IN_LAST_SET = 2208 DEI_DARTS_NUMBER_OF_LEGS_IN_EARLY_SETS = 2209 DEI_DARTS_NUMBER_OF_LEGS_IN_LAST_SET = 2210 DEI_DARTS_POINTS_TO_WIN_LEGS = 2212 DEI_DARTS_SUDDEN_DEATH_LEG = 2204 DEI_DARTS_SUDDEN_DEATH_LEG_IN_LAST_SET = 2205 DEI_DECIDER_AT_14 = 2193 DEI_NUMBER_OF_EXTRA_INNINGS = 2166 DEI_NUMBER_OF_OVERTIME_PERIODS = 2163 DEI_NUMBER_OF_PERIODS = 2162 DEI_OVERTIME_LENGTH = 2146 DEI_OVERTIME_TEAM_STRENGTH = 2168 DEI_PENALTY_SHOOTOUT_POSSIBLE = 2147 DEI_PERIOD_LENGTH = 2161 DEI_PLAYER_MARKETS = 2201 DEI_POINTS_TO_WIN_LAST_SET = 2184 DEI_POINTS_TO_WIN_SET = 2167 DEI_SUDDEN_DEATH = 2164 DEI_TECHNICAL_TIMEOUT = 2165 DEI_TENNIS_COURT_SIZE = 2148 DEI_VAR_COVERAGE = 2192 DELAYED_PENALTY = 1521 Delayed penalty DELETED_EVENT_ALERT = 1044 Deleted event alert DENIED_DROP_GOAL = 1168 Denied drop goal DENIED_TRY = 1167 Denied try DIRECT_FOUL = 1059 Direct foul DIRECT_FOUL_COUNT = 1100 DIRECT_FOUL_COUNT_PERIOD = 1636 DIRECT_FREE_KICK = 1060 Direct free kick DIRECT_FREE_KICK_COUNT = 1101 DIRECT_FREE_KICK_COUNT_PERIOD = 1637 DISMISSAL_BOWLED = 1322 Dismissal bowled DISMISSAL_CAUGHT = 1324 Dismissal caught DISMISSAL_HANDLED_THE_BALL = 1325 Dismissal handled by the ball DISMISSAL_HIT_THE_BALL_TWICE = 1326 Dismissal hit the ball twice DISMISSAL_HIT_WICKET = 1327 Dismissal hit wicket DISMISSAL_LBW = 1328 Dismissal lbw DISMISSAL_OBSTRUCTING_THE_FIELD = 1329 Dismissal obstructing the field DISMISSAL_OTHER = 2220 DISMISSAL_RETIRED = 1321 Dismissal retired DISMISSAL_RUN_OUT = 1330 Dismissal run out DISMISSAL_STUMPED = 1331 Dismissal stumped DISMISSAL_TIMED_OUT = 1323 Dismissal timed out DISQUALIFICATION = 1511 Disqualification DOTA_DIRE_START = 1850 DOTA_FINAL_KILLS = 2056 DOTA_FIRST_AEGIS = 1866 DOTA_FIRST_BARRACK = 1854 DOTA_PLAYER_INFO = 1856 DOTA_STRUCTURE_TAKEDOWN = 1858 DOT_BALL = 1311 Dot ball DOUBLE_FAULTS_PERIOD = 1525 DRIVES_COUNT = 1633 Drives count (American Football) DRIVE_INFORMATION_CHANGED = 1767 DRIVE_OVER = 2186 DRIVE_START = 2185 DROP_GOAL = 1158 Drop goal DROP_GOAL_ATTEMPT = 1166 Drop goal attempt DROP_GOAL_COUNT = 1642 DROP_GOAL_COUNT_PERIOD = 1643 DROP_GOAL_FROM_MARK = 1159 Drop goal from mark DROP_KICK_RESULT = 2060 DROP_OUT = 1200 Drop out (used in Rugby) DUCKWORTH_LEWIS = 1344 Duckworth lewis EARLY_BETSTATUS = 1091 Early bet status ELAM_ENDING = 2332 EMPTY_NET_SITUATION = 1051 Empty net situation EMPTY_NET_SITUATION_CANCELLED = 1053 Empty net situation cancelled EMPTY_NET_SITUATION_OVER = 1052 Empty net situation over EMPTY_RAID = 2302 EMPTY_RAID_ADJUST = 2304 EMPTY_RAID_CANCELLED = 2303 ENABLE_DISABLE_BOOKING_MARKETS = 1083 Enable/disable booking markets ENABLE_DISABLE_CORNER_MARKETS = 1082 Enable/disable corner markets END_OF_PERIOD_CANCELED = 2389 END_START = 1512 End start ESPORTS_AEGIS = 1926 ESPORTS_ASSISTS = 1780 ESPORTS_ASSISTS_PERIOD = 1781 ESPORTS_BARRACKS = 1925 ESPORTS_BARRONS = 2002 ESPORTS_DEATHS_PERIOD = 1783 ESPORTS_DRAGONS = 2001 ESPORTS_GOLD = 1922 ESPORTS_HERO_DENIES = 1929 ESPORTS_HERO_ITEMS = 1930 ESPORTS_HERO_LAST_HITS = 1928 ESPORTS_HERO_LEVEL = 1927 ESPORTS_HERO_MINIONS = 2003 ESPORTS_INHIBITORS = 2008 ESPORTS_KILLS = 1778 ESPORTS_KILLS_PERIOD = 1779 ESPORTS_MULTIKILLS_PERIOD = 2007 ESPORTS_TOWERS = 1924 ESPORTS_XP = 1923 EVICTION = 1517 EXCLUSION = 1415 Exclusion (Handball) EXPEDITE_MODE = 1176 Expedite mode EXTRAS_BYE = 1317 Extras bye EXTRAS_BYE_BYE = 1318 Extras bye bye EXTRAS_NO_BALL = 1315 Extras no ball EXTRAS_PENALTY_RUNS = 1319 Extras penalty runs EXTRAS_WIDE = 1316 Extras wide EXTRA_1_SCORE = 41 EXTRA_2_SCORE = 42 EXTRA_POINT = 1423 Extra point EXTRA_POINT_ADJUSTMENT = 2308 FACEOFF = 1771 FASTEST_1ST_SERVE = 2033 FASTEST_2ND_SERVE = 2034 FIELD_GOAL_RESULT = 1426 Field goal result FIFTY_METER_PENALTY_AWARDED = 2102 FINAL_SCORE = 1105 FIRST_DART_AVERAGE = 1749 FIRST_EXTRA_START = 27 FIRST_SERVE_GOLDEN_SET = 1773 FIRST_SERVE_SUCCESSFUL_PERIOD = 1524 FIRST_SERVE_WON_PERIOD = 1529 FIRST_SET_AWARDED = 1516 First set awarded FIVE_INNINGS_SCORE = 1160 FOLLOW_ON = 1342 Follow on FORCED_BETSTOP = 1831 FORCED_ERRORS = 2032 FOREHAND_WINNERS = 2029 FORTY_TWENTY = 1202 40-20 (used in Rugby) FORTY_TWENTY_COUNT = 1765 FOUL = 1190 FOULS_COUNT = 129 Fouls count at Soccer FOULS_COUNT_PERIOD = 1182 FOUL_BALL = 1724 Foul ball FOUL_BASKETBALL = 129 Foul at Basketball FREE_BALL = 1170 Free ball FREE_BALL_AWARDED = 1203 Free ball awarded (snooker) FREE_HIT = 1320 Free hit FREE_KICK = 150 Free kick FREE_KICK_COUNT = 120 Free kick count FREE_TEXT = 1015 Free text FREE_THROW = 1054 Free throw FREE_THROWS_COUNT_PERIOD = 1191 FULL_TIME_SCORE = 32 FUMBLE = 1428 Fumble FUMBLE_COUNT = 1610 Fumble count (American Football) FUMBLE_RECOVERED = 1446 Fumble recovered FUMBLE_RECOVERED_COUNT = 1611 Fumble recovered count (American Football) GAME_ON = 16 Game on GAME_SCORE = 75 GOAL = 30 Goal GOALKEEPER_SAVE = 157 Goalkeeper save GOALKEEPER_SAVE_COUNT = 127 Goalkeeper save count GOALS_POWER_PLAY = 1072 GOALS_SHORT_HANDED = 1073 GOAL_KICK = 151 Goal kick GOAL_KICK_COUNT = 121 Goal kick count GOING_FOR_KICK_AT_GOAL = 1164 Going for kick at goal GOLDENSET_SCORE = 1057 GOLDEN_GOAL_MODE = 1071 GREEN_CARD = 51 GREEN_CARD_COUNT_HALFTIME = 1669 GREEN_CARD_COUNT_NORMALTIME = 1755 GREEN_CARD_COUNT_PERIOD = 1756 GREEN_YELLOW_CARD = 52 GREEN_YELLOW_CARD_COUNT = 1667 GREEN_YELLOW_CARD_COUNT_PERIOD = 1668 GUMBO_EVENT_COMMENTARY = 2329 HALF_TIME_SCORE = 1048 HANDBALL_DROPPED = 2110 HANDBALL_GOAL_1_PT = 1212 HANDBALL_GOAL_2_PT = 1213 HANDBALL_PASS = 2098 HANDBALL_RECEIVED = 2109 HANDBALL_SEVEN_METRES = 1068 HANDBALL_TOTAL_NUMBER_FREE_THROWS = 1069 HIGHEST_CHECKOUT = 1760 HIT = 1768 HOME_TEAM_MANAGER = 169 HOME_TEAM_USES_AWAY_KIT = 166 ICE_CONDITIONS = 1769 INJURY = 158 Injury INJURY_TIME = 90 Injury time INJURY_TIMEOUT = 1462 INJURY_TIMEOUT_OVER = 1463 INNINGS_FINISHED = 1304 Innings finished INNINGS_STARTED = 1303 Innings started INTERCEPTION = 1429 Interception INTERCEPTION_COUNT = 1613 Turnover count (American Football) INTERNAL_MESSAGE = 2390 INTERRUPTED = 12 JACK_ROLL = 1502 Jack roll KABADDI_GREEN_CARD = 2330 KABADDI_SCORE_CHANGE = 2314 KABADDI_SCORE_CHANGE_CANCELLED = 2315 KABADDI_TACKLE = 2317 KABADDI_TACKLE_CANCELLED = 2318 KICKOFF_MODE_ENDED = 1764 KICKOFF_MODE_STARTED = 1763 KICKOFF_TEAM = 1012 Kick-off team at Soccer KICK_IN = 2097 KICK_PASS = 2099 KICK_TO_TOUCH = 1150 Kick to touch LETS_COUNT = 1625 LETS_PERIOD = 1626 LINEBREAK = 1206 LINE_OUT = 1097 Line out LINE_OUT_STATS = 1644 LINE_OUT_STATS_PERIOD = 1645 LINE_OUT_WON = 1147 Line out won LINE_VIOLATION = 2311 LINE_VIOLATION_CANCELLED = 2312 LOL_ANCIENT_KILL = 2196 LOL_ANCIENT_SPAWN = 2202 LOL_BLUE_START = 1910 LOL_CHRONOBREAK = 2213 LOL_FIRST_BARON = 1918 LOL_FIRST_DRAGON = 1920 LOL_FIRST_INHIBITOR = 1916 LOL_PLAYER_INFO = 1912 LOL_STRUCTURE_TAKEDOWN = 2195 LOL_TEAM_UPDATE = 1914 LONG_CORNER = 1224 LONG_CORNER_NOT_CONFIRMED = 1225 MANUAL_TIME_ADJUSTMENT = 1039 Manual time adjustment MARK = 2100 MARK_CONTESTED = 2108 MARK_DROPPED = 2107 MATCHTIME = 1080 MATCH_ABOUT_TO_START = 1024 Match about to start MATCH_CALLED = 1124 Match called (Tennis) MATCH_CANCELLED = 1001 MATCH_END = 20 MATCH_FORMAT = 1515 Match format MATCH_HAS_ENDED = 1134 MATCH_POINTS_COUNT = 1615 MATCH_POINTS_PERIOD = 1616 MATCH_RESUMED = 1730 MATCH_START = 10 MATCH_STATUS = 1013 Match status MATCH_STOP_OR_SUSPENSION = 1112 Match stop / suspension (Tennis) Extra info: 3(injury), 4(flood light failure), 5(persons entering field of play), 6 (crowd control issue), 7(water break), 8(disciplinary issue), 9(gone to TMO (video referee)) MATCH_STOP_OR_SUSPENSION_OVER = 1113 Match stop / suspension over (Tennis) MATCH_SUPERVISOR = 190 MATCH_WILL_START_SOON = 1133 MAUL = 1204 MAX_GAMES_IN_ROW_PERIOD = 1531 MAX_POINTS_IN_ROW_PERIOD = 1194 MEDICAL_CRAMPING = 1117 MINUTES_PLAYED_LS = 2025 MISSED_6_METER_THROW = 1210 MISSED_RUGBY_POINT = 1096 Missed rugby point MISSED_SCORE = 2113 MISSING_OUT = 1936 MOBA_FIRST_BLOOD = 1862 MOBA_FIRST_TOWER = 1864 MOBA_HERO_PICK_BANNED = 1844 MOBA_ITEM_CHANGE = 1860 MOBA_KILL = 2194 MOBA_KILLS = 1852 MOBA_MAP_ENDED = 1842 MOBA_MAP_STARTED = 1840 MOBA_PLAYER_ALIVE = 2058 MOBA_PLAYER_HERO = 1845 MOBA_PLAYER_ROLE = 2059 MOBA_START_PICKING = 1846 MOBA_TEAM_BALANCE_CHANGED = 1848 NET = 2361 NET_POINTS_WON = 2031 NEW_BALL = 1343 New ball NEW_FIRST_DOWN = 2191 NEW_PHASE = 1145 New phase NEXT_PLAY_CLOSE = 2300 NUMBER_OF_ATTACKS = 1074 NUMBER_OF_FREE_THROWS = 1056 Number of free throws NUMBER_OF_POWER_PLAYS = 1075 NUMBER_SETS = 1021 OFFICIAL_A = 2187 OFFICIAL_B = 2188 OFFICIAL_C = 2189 OFFICIAL_D = 2190 OFFSIDE = 153 Offside OFFSIDE_COUNT = 123 Offside count ONE_EIGHTIES = 1757 ONE_FORTIES = 1758 ONE_HUNDREDS = 1759 ONE_HUNDRED_CHECKOUTS = 1761 ONE_SHORT = 1314 One short OUT_CANCELLED = 1933 OVERRULE = 1658 Overrule OVERTIME_SCORE = 33 OVER_FINISHED = 1306 Over finished OVER_STARTED = 1305 Over started PASS = 1440 Pass PASSIVE_PLAY = 1700 Passive play PASSIVE_PLAY_CALLED = 1701 Passive play called (Handball) PASSIVE_PLAY_CANCELED = 1702 Passive play canceled PASS_COUNT = 1606 Pass count (American Football) PENALTIES_START = 29 PENALTY = 1435 Penalty PENALTY_ADVANTAGE = 1196 Penalty advantage (used in Rugby) PENALTY_AWARDED = 161 Penalty awarded at Futsal PENALTY_CONCEDED_COUNT = 1652 PENALTY_CONCEDED_COUNT_PERIOD = 1653 PENALTY_COUNT = 1099 PENALTY_COUNT_PERIOD = 1635 PENALTY_GOAL_COUNT = 1650 PENALTY_GOAL_COUNT_PERIOD = 1651 PENALTY_MISSED = 666 Penalty missed at Soccer PENALTY_POINTS = 1157 Penalty points PENALTY_REVERSED = 1207 PENALTY_SCORE = 34 PENALTY_SHOOTOUT = 161 Penalty shootout at Ice Hockey PENALTY_SHOOTOUT_EVENT_DEEP_COVERAGE = 1002 Penalty shootout event deep coverage PENALTY_SHOOTOUT_MISSED = 666 Penalty shootout missed at Ice Hockey PENALTY_SHOOTOUT_STARTING_TEAM = 1104 Penalty shootout starting team PENALTY_STROKE = 1218 PENALTY_STROKE_NOT_CONFIRMED = 1219 PENALTY_TRY = 1155 Penalty try PENALTY_TRY_COUNT = 1648 PENALTY_TRY_COUNT_PERIOD = 1649 PERIOD10_SCORE = 92 PERIOD11_SCORE = 93 PERIOD12_SCORE = 94 PERIOD13_SCORE = 95 PERIOD1_SCORE = 35 PERIOD2_SCORE = 36 PERIOD3_SCORE = 37 PERIOD4_SCORE = 38 PERIOD5_SCORE = 39 PERIOD6_SCORE = 71 PERIOD7_SCORE = 72 PERIOD8_SCORE = 73 PERIOD9_SCORE = 74 PERIOD_2_START = 23 PERIOD_DURATION = 1741 PERIOD_START = 24 PITCH_CONDITIONS = 1014 Pitch conditions PITCH_MAP = 1309 Pitch map PITCH_RELEASE = 2327 PLAYERS_IN_GAME = 2237 PLAYERS_LINING_UP = 2219 PLAYERS_ON_PITCH = 1181 PLAYERS_WALK_ON = 1179 Players walk on PLAYERS_WARMING_UP = 1180 PLAYER_BACK_FROM_INJURY = 168 Player back from injury PLAYER_COUNT_ADJUST = 2309 PLAYER_DISQUALIFIED = 1732 PLAYER_IN_POSSESSION = 2379 PLAYER_MATCH_STATS = 1714 PLAYER_MATCH_STATS_PER_PERIOD = 1905 PLAYER_ON_BASE_X = 2150 PLAYER_OUT = 2149 PLAY_ABANDONED_FOR_THE_DAY = 1353 PLAY_ABOUT_TO_START = 1187 Play about to start PLAY_CANCELLED = 1605 Play cancelled (Basketball) PLAY_CLOCK_STATUS = 2216 PLAY_CLOCK_WARNING = 2217 PLAY_ON = 2106 PLAY_OVER = 1604 Play over (Basketball) PLAY_OVER_AF = 1431 Play over af PLAY_OVER_BB = 1716 Play over bb PLAY_RESUMES_AFTER_GOAL = 1064 Play resumes after goal PLAY_START = 1603 Play start (Basketball) PLAY_START_AF = 1430 Play start af PLAY_START_BB = 1715 Play start bb PLAY_START_COUNT = 1609 Play start count (American Football) POINT_ADDED = 2305 POSSESSION_PERIOD = 1199 POSSIBLE_2_POINT_CONVERSION = 1449 Possible 2 point conversion POSSIBLE_6_METER_THROW = 1208 POSSIBLE_7_METER_THROW = 1042 Possible 7 meter throw at Handball POSSIBLE_ALL_OUT = 2319 POSSIBLE_BOUNDARY = 1334 Possible boundary POSSIBLE_CHALLENGE = 1434 Possible challenge POSSIBLE_CONVERSION1P = 1468 POSSIBLE_CONVERSION3P = 1465 POSSIBLE_CORNER = 1016 Possible corner POSSIBLE_DEFENSIVE_RETURN = 1737 Possible defensive return POSSIBLE_DROP_GOAL = 1833 POSSIBLE_DROP_KICK = 2061 POSSIBLE_EMPTY_NET_SITUATION = 1050 Possible empty net situation Events (POSSIBLE_EMPTY_NET_SITUATION and EMPTY_NET_SITUATION) were switched on 2014-12-02 POSSIBLE_EMPTY_RAID = 2301 POSSIBLE_END_OF_PERIOD = 2388 POSSIBLE_EXCLUSION = 1417 Possible exclusion (Handball) POSSIBLE_EXTRA_POINT = 1451 Possible extra point POSSIBLE_FIELD_GOAL = 1424 Possible field goal POSSIBLE_FOURTH_DOWN_ATTEMPT = 1740 Possible fourth down attempt POSSIBLE_GOAL = 1018 Possible goal POSSIBLE_GREEN_CARD = 1753 POSSIBLE_KABADDI_SCORE_CHANGE = 2313 POSSIBLE_KABADDI_TACKLE = 2316 POSSIBLE_LINE_VIOLATION = 2310 POSSIBLE_LONG_CORNER = 1223 POSSIBLE_ONSIDE_KICK = 1747 Possible onside kick POSSIBLE_PENALTY = 1042 Possible penalty at Soccer, Ice Hockey and Futsal POSSIBLE_PENALTY_STROKE = 1217 POSSIBLE_PUNT = 1455 Possible punt POSSIBLE_PURSUIT = 2323 POSSIBLE_RED_CARD = 1040 Possible red card POSSIBLE_RUGBY_POINTS = 1094 POSSIBLE_SAFETY = 1453 Possible safety POSSIBLE_SHORT_CORNER = 1220 POSSIBLE_SHOT = 2378 POSSIBLE_SHOT_NOT_CONFIRMED = 2380 POSSIBLE_SNOOKER = 2356 POSSIBLE_SUBSTITUTION = 2376 POSSIBLE_SUBSTITUTION_CANCELED = 2377 POSSIBLE_SUSPENSION = 1416 Possible suspension (Handball) POSSIBLE_TOUCHDOWN = 1436 Possible touchdown POSSIBLE_TRY = 1195 Possible try POSSIBLE_TURNOVER = 1447 Possible turnover POSSIBLE_VIDEO_ASSISTANT_REFEREE = 2066 The possible video assistant referee POSSIBLE_WICKET = 1333 Possible wicket POSSIBLE_YELLOW_CARD = 1084 Possible yellow card POSTPONED = 11 POWER_PLAY_FINISHED = 1352 Power play finished (Cricket) POWER_PLAY_STARTED = 1351 Power play started (Cricket) PRELIMINARY_TEAM_FORMATION = 83 PRELIMINARY_TEAM_PLAYER = 82 PREMIUM_DATA_AVAILABLE = 2235 PUCK_POSITION = 1885 PUCK_SAFE = 1772 PUNT_RESULT = 1432 Punt result PURSUIT = 2324 PURSUIT_CANCELLED = 2325 RAID = 2328 RAID_POINT_ADJUSTED = 2306 REBOUND = 1034 Rebound REBOUND_COUNT = 1602 Rebound count (Basketball) REBOUND_COUNT_PERIOD = 1192 REDELIVER_JACK = 1503 Redeliver jack REDUCED_OVERS_MATCH = 1350 Reduced overs match (Cricket) RED_CARD = 50 Red card RED_CARD_COUNT_HALFTIME = 1089 RED_CARD_COUNT_NORMALTIME = 1087 RED_CARD_COUNT_PERIOD = 1628 REFEREE = 163 REFEREE_1 = 185 REFEREE_2 = 186 REFEREE_ASSISTANT_1 = 173 REFEREE_ASSISTANT_2 = 174 REFEREE_FOURTH = 175 REGULAR_INNINGS = 2223 REMOVE_BALL = 1174 Remove ball REPLACEMENT = 1663 REPLAY_BOWL = 1510 Replay bowl REPLAY_OF_POINT = 1127 Replay of point (Tennis) REPORT = 2101 RERACK = 1173 Rerack RESET_PHASE_COUNT = 1149 Reset phase count RESPOTTED_BLACK = 2355 RESTART_END = 1506 Restart end RETIRED = 26 RETIRED_HURT = 1341 Retired hurt REVISED_POWERPLAY_OVERS = 1354 RE_WARM_UP = 1114 RUGBY_FORMAT_CONVERSION = 1876 RUGBY_FORMAT_DROP_GOAL = 1878 RUGBY_FORMAT_OVERTIME_LENGTH = 1880 RUGBY_FORMAT_PENALTY = 1877 RUGBY_FORMAT_PENALTY_SHOOTOUT = 1882 RUGBY_FORMAT_PENALTY_TRY = 1879 RUGBY_FORMAT_PERIOD_LENGTH = 1874 RUGBY_FORMAT_SUDDEN_DEATH = 1881 RUGBY_FORMAT_TRY = 1875 RUGBY_FULL_SCORE = 1093 RUGBY_SETS_STATS = 1766 RULE_SET = 1461 Rule set RUNNERS_IN_MOTION = 1717 Runners in motion RUNNER_ADVANCES_TO_BASE_X = 1719 Runner advances to base RUNNER_OUT = 1721 Runner out RUNS = 1313 Runs RUNS_ADJUSTED = 1934 RUN_SCORED = 1720 Run scored RUSH = 1441 Rush RUSH_COUNT = 1607 Rush count (American Football) SACK = 1442 Sack SAFETY = 1421 Safety SAVE_COUNT_PERIOD = 1706 SCORE_ADJUSTMENT = 1550 Score adjustment (Handball, Basketball and Volleyball) SCORE_CHANGE = 1500 Score change SCORE_CHANGE_TENNIS = 31 SCORE_CONFIRMED = 2104 SCORE_CORRECTION = 2218 SCORE_EVENT_CORRECTION = 1742 Score event correction SCORE_OVERTURNED = 2105 SCORE_REVIEW = 2103 SCOUT_BLOCK_STATUS = 1830 SCOUT_CONNECTION_STATUS = 1027 SCOUT_REQUEST_ASSISTANCE = 2215 SCRUM = 1090 SCRUM_OUTCOME = 1092 Scrum outcome SCRUM_RESET = 1146 Scrum reset SCRUM_STATS = 1646 SCRUM_STATS_PERIOD = 1647 SECOND_DART_AVERAGE = 1750 SECOND_EXTRA_START = 28 SECOND_SERVE_SUCCESSFUL = 1745 SECOND_SERVE_SUCCESSFUL_PERIOD = 1746 SECOND_SERVE_WON_PERIOD = 1530 SECRETARY = 188 SERVICE_ERRORS_PERIOD = 1519 SERVICE_ERRORS_VOLLEYBALL = 1077 SERVICE_GAMES_PERIOD = 1527 SERVICE_POINTS_EXPEDITE = 1629 SERVICE_POINTS_EXPEDITE_PERIOD = 1630 SERVICE_POINTS_PERIOD = 1520 SERVICE_TAKEN = 1061 Service taken SESSION_FINISHED = 1302 Session finished SESSION_STARTED = 1301 Session started SEVENTH_PLAYER_SUB = 1703 Empty net SEVEN_METER_THROW = 161 7 meter throw at Handball SEVEN_METER_THROW_MISSED = 666 7 meter throw missed at Handball SHIRT_NUMBER = 86 SHORT_CORNER = 1221 SHORT_CORNER_NOT_CONFIRMED = 1222 SHOT_BLOCKED = 172 Shot blocked SHOT_BLOCKED_COUNT = 171 Shot blocked count SHOT_ENDED = 2350 SHOT_OFF_TARGET = 156 Shot off target SHOT_OFF_TARGET_COUNT = 126 Shot off target count SHOT_ON_TARGET = 155 Shot on target SHOT_ON_TARGET_COUNT = 125 Shot on target count SHOT_RETAKEN = 2351 SHOT_TAKEN = 2349 SINGLE_DART_THROW = 1132 Single dart throw SNOOKER = 2357 SNOOKER_FOUL = 1171 Snooker foul SNOOKER_NOT_CONFIRMED = 2358 SNOOKER_SCORE_CHANGE = 1137 Snooker score change SNOOKER_WARNING = 2354 SQUASH_CURRENT_SERVE = 1835 SQUASH_DECISION_OUTCOME = 1836 SQUASH_FULL_SCORE = 1834 SQUASH_SCORE_UNDER_REVIEW = 2063 STADIUM = 162 START_DELAYED = 14 STATS_CORRECTION = 1832 Stats correction STEAL = 1412 Steal (Handball) STEALS_COUNT = 2015 STEAL_BASKETBALL = 1733 Steal basketball STOPPAGE = 1770 STRIKE = 1722 Strike STRIKE_CANCELLED = 1932 STROKE = 2360 SUBSTITUTION = 60 Substitution SURFACE_TYPE = 1020 The surface type SUSPENSION = 43 Suspension SUSPENSIONS_TOTAL_NUMBER = 1070 SUSPENSION_MINUTES_PERIOD = 1707 SUSPENSION_OVER = 1049 Suspension over SUSPENSION_STATUS = 1184 TABLE_READY = 1186 Table ready TABLE_TENNIS_BOUNCE = 2362 TABLE_TENNIS_SCORE_CHANGE = 1161 Table tennis score change TABLE_TENNIS_VIOLATION = 1177 Table tennis violation TACKLE = 2096 TACKLE_COUNT = 128 TACKLE_POINT_ADJUSTMENT = 2307 TAKE_PENALTY = 1884 TAP_AND_GO = 1148 Tap and go TEAM_FORMATION = 81 TEAM_MATCH_STATS = 1743 TEAM_MATCH_STATS_PER_PERIOD = 1906 TEAM_OFFICIAL = 189 TEAM_PLAYER = 80 TEAM_SUSPENSION = 44 TECHNICAL_FAULT = 1414 Technical rule fault (TRF) (Handball) TECHNICAL_FOUL = 1413 Technical ball handling fault (TF) (Handball) TELEVISION_MATCH_OFFICIAL_ASSISTS = 1165 Television match official assists TEMPERATURE = 1152 Temperature TEMPORARY_INTERRUPTION = 15 Temporary interruption TENNIS_FIRST_SERVE_SUCCESSFUL = 1189 TENNIS_FIRST_SERVE_WON = 137 TENNIS_LAST_BALL_INFO = 2086 TENNIS_SCORE_CHANGE = 1025 Tennis score change TENNIS_SECOND_SERVE_WON = 138 TENNIS_SERVICE_FAULT = 1032 Tennis service fault TENNIS_SERVICE_TIE_BREAK_DECIDING_POINT = 2137 TENNIS_SHOT = 2381 TENNIS_START_OF_MATCH_VIOLATION = 2227 TENNIS_STATS_ACES = 130 TENNIS_STATS_BREAKS = 139 TENNIS_STATS_BREAK_POINTS = 142 TENNIS_STATS_DOUBLE_FAULTS = 132 TENNIS_STATS_MAX_GAMES_IN_ROW = 143 TENNIS_STATS_MAX_POINTS_IN_ROW = 134 TENNIS_STATS_SERVICE_GAMES = 145 TENNIS_STATS_SERVICE_POINTS = 141 TENNIS_STATS_TOTAL_GAMES_WON = 144 TENNIS_STATS_TOTAL_POINTS_WON = 136 TENNIS_TIE_BREAKS_WON = 1188 THIRD_DART_AVERAGE = 1751 THIRD_UMPIRE = 1336 Third umpire THREE_POINTS_ATTEMPTED_AND_SUCCESS_PERIOD = 1198 THREE_POINT_MISS_COUNT = 1601 Three point miss count (Basketball) THROW_IN = 152 Throw in THROW_IN_COUNT = 122 Throw in count TIE_BREAK = 1026 TIE_BREAKS_WON_PERIOD = 1528 TIE_BREAK_LAST_SET = 1023 TIMEKEEPER = 181 TIMEOUT = 1035 Timeout TIMEOUT_COUNT = 1098 TIMEOUT_COUNT_PERIOD = 1193 TIMEOUT_OVER = 1047 Timeout over TIMES_IN_LEAD = 1661 TIMES_IN_LEAD_PERIOD = 1662 TIME_PLAYED_TOTAL = 2233 TIME_SPENT_IN_LEAD = 1654 TIME_SPENT_IN_LEAD_PERIOD = 1655 TIME_STARTSTOP = 1036 Time start/stop TIME_VIOLATION = 1116 Time violation (Tennis) TOILET_BREAK_OR_CHANGE_OF_ATTIRE = 1110 Toilet break / change of attire (Tennis) TOILET_BREAK_OR_CHANGE_OF_ATTIRE_OVER = 1111 Toilet break / change of attire over (Tennis) TOSS = 1300 Toss TOTAL_POINTS_WON_PERIOD = 1523 TOTAL_WINNERS = 131 TOUCHDOWN = 1444 Touchdown TRAINER_CALLED = 1118 Trainer called (Tennis) TRAINER_CALLED_FINISHED = 1119 Trainer called finished (Tennis) TRIAL_END = 1513 Trial end TRY = 1154 Try TRY_COUNT = 1638 TRY_COUNT_PERIOD = 1639 TURNOVER = 1162 Turnover TURNOVER_AF = 1427 Turnover af TURNOVER_BASKETBALL = 1734 Turnover TURNOVER_COUNT = 1612 Turnover count (American Football) TURNOVER_FAILED_4TH_DOWN = 2335 TV_TIMEOUT = 1437 TV Timeout (Ice Hockey) TV_TIMEOUT_OVER = 1438 Tv Timeout over (Ice Hockey) TWENTYTWO_DROP_OUT = 1151 Twenty two drop out TWENTY_DROP_OUT = 2336 TWENTY_M_RESTART = 1201 20m restart (used in Rugby) TWO_POINTS_ATTEMPTED_AND_SUCCESS_PERIOD = 1197 TWO_POINT_CONVERSION = 1457 Two point conversion TWO_POINT_MISS_COUNT = 1600 Two point miss count (Basketball) UNDEFINED = -1 Unknown, check event id UNFORCED_ERRORS = 133 UNSCHEDULED_BREAK = 1139 Unscheduled break USE_CHALLENGES_OFFICIAL_REVIEWS = 1657 Use challenges official reviews VIDEO_ASSISTANT_REFEREE = 2064 The video assistant referee VIDEO_ASSISTANT_REFEREE_OVER = 2065 The video assistant referee over VIDEO_REVIEW_OVER = 1459 Video review over VIDEO_REVIEW_START = 1458 Video review start VOLLEYBALL_SCORE_CHANGE = 1046 Volleyball score change WALKOVER = 25 WARNING = 1505 Warning WARNINGS_COUNT = 1621 WARNINGS_PERIOD = 1622 WEATHER_CONDITIONS = 164 Weather conditions WHICH_PLAYER_RECEIVES_FIRST_WITHIN_A_DOUBLES_TEAM = 1125 Which player receives first within a doubles team (Tennis) WHICH_PLAYER_SERVES_FIRST_WITHIN_A_DOUBLES_TEAM = 1122 Which player serves first within a doubles team (Tennis) WHICH_TEAM_SERVES_FIRST = 1022 Which team serves first WHICH_TEAM_STARTS_SERVING_ON_THE_LEFT_HAND_SIDE_OF_THE_UMPIRE = 1128 Which team starts serving on the left hand side of the umpire (Tennis) WHICH_TEAM_STARTS_WITH_POSSESSION = 1012 Which team starts with possession at Ice Hockey WHO_MADE_FIRST_SERVER_DECISION = 1121 Who made first server decision (Tennis) WHO_SERVES_FIRST_IN_TIE_BREAK_SET = 1058 Who serves first in tie break set WHO_THROWS_THE_FIRST_PITCH = 1725 Who throws the first pitch WHO_WON_COIN_TOSS = 1120 Who won coin toss (Tennis) WHO_WON_JUMP_BALL = 1033 Who won jump ball WICKETKEEPER = 1422 WIND = 1153 Wind WIND_ADVANTAGE = 1163 Wind advantage WINNER = 100 YELLOWRED_CARD = 45 Yellow and red card YELLOW_CARD = 40 Yellow card YELLOW_CARD_COUNT_HALFTIME = 1088 YELLOW_CARD_COUNT_NORMALTIME = 1086 YELLOW_CARD_COUNT_PERIOD = 1627 YELLOW_RED_CARD_COUNT = 1664 YELLOW_RED_CARD_COUNT_PERIOD = 1665 YELLOW_RED_CARD_SAME_HAND = 2052 YELLOW_RED_CARD_SEPARATE_HANDS = 2051"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.FormatType.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.FormatType.html",
    "title": "Enum FormatType | sportradar.livedata.sdk",
    "keywords": "Enum FormatType Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums Assembly Sportradar.LiveData.Sdk.dll Format type public enum FormatType Fields BATTINGPOWERPLAYOVERS = 4 Batting powerplay overs CONVERSIONVALUE = 16 Conversion value DAYS = 2 Days DROPGOALVALUE = 18 Drop goal value EXTRAPOINTYARDLINE = 26 Extra point yard line LENGTHOVERTIMEPERIODS = 21 Length overtime periods LENGTHSUDDENDEATH = 22 Length sudden death LIMITEDOVERS = 0 Limited overs MANDATORYPOWERPLAYOVERS = 3 Mandatory powerplay overs MAPS = 10 Maps MAXOVERSPERBOWLER = 8 Max overs per bowler NOBALLPENALTYVALUE = 27 Penalty value of no ball NUMBEROFPERIODS = 13 Number of periods NUMBEROVERTIMEPERIODS = 20 Number overtime time periods ONEPOINTCONVERSIONYARDLINE = 31 One point conversion yard line OVERS = 1 Overs OVERTIMEROUNDS = 12 Overtime rounds PENALTYSHOOTOUT = 23 Penalty shootout PENALTYTRYVALUE = 19 Penalty try value PENALTYVALUE = 17 Penalty value PERIODLENGTH = 14 Period length POWERPLAY1OVERS = 5 Powerplay 1 overs POWERPLAY2OVERS = 6 Powerplay 2 overs POWERPLAY3OVERS = 7 Powerplay 3 overs REGULARINNINGS = 30 Number of regular innings in MLB REVIEWS = 9 Reviews ROUNDS = 11 Rounds RULESET = 24 Rule set TIEBREAKERMETHOD = 28 How a tied match is resolved, if at all TRYVALUE = 15 Try value TWOPOINTCONVERSIONYARDLINE = 25 Two point conversion yard line USESOVERS = 29"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.IceConditions.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.IceConditions.html",
    "title": "Enum IceConditions | sportradar.livedata.sdk",
    "keywords": "Enum IceConditions Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums Assembly Sportradar.LiveData.Sdk.dll Ice conditions public enum IceConditions Fields GOOD = 1 MEDIUM = 2 POOR = 3 UNDEFINED = -1 UNKNOWN = 0"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.Inning.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.Inning.html",
    "title": "Enum Inning | sportradar.livedata.sdk",
    "keywords": "Enum Inning Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums Assembly Sportradar.LiveData.Sdk.dll Inning half public enum Inning Fields B = 1 Bottom T = 0 Top"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.MatchBetStatus.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.MatchBetStatus.html",
    "title": "Enum MatchBetStatus | sportradar.livedata.sdk",
    "keywords": "Enum MatchBetStatus Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums Assembly Sportradar.LiveData.Sdk.dll Bet status (whether market is open or closed) public enum MatchBetStatus Fields BETSTOP = 3 Bet stop NOT_STARTED = 1 Not started STARTED = 2 Started UNDEFINED = 0 Undefined"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.PitchConditions.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.PitchConditions.html",
    "title": "Enum PitchConditions | sportradar.livedata.sdk",
    "keywords": "Enum PitchConditions Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums Assembly Sportradar.LiveData.Sdk.dll Pitch conditions. public enum PitchConditions Fields BAD = 3 Bad GOOD = 1 Good MEDIUM = 2 Medium UNDEFINED = 0 Undefined UNKNOWN = 4 Unknown"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.ScoutFeedType.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.ScoutFeedType.html",
    "title": "Enum ScoutFeedType | sportradar.livedata.sdk",
    "keywords": "Enum ScoutFeedType Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums Assembly Sportradar.LiveData.Sdk.dll Type of scout match information message (full, delta or deltaupdate). public enum ScoutFeedType Fields DELTA = 2 Delta message DELTAUPDATE = 3 Delta update message FULL = 1 Full message FULL_PAGINATED = 4 Paginated full message UNDEFINED = 0 Undefined"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.ScoutMatchStatus.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.ScoutMatchStatus.html",
    "title": "Enum ScoutMatchStatus | sportradar.livedata.sdk",
    "keywords": "Enum ScoutMatchStatus Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums Assembly Sportradar.LiveData.Sdk.dll Match status as used by Live Odds. Not all match statuses are used by each sport. public enum ScoutMatchStatus Fields ABANDONED = 33 The match has been abandoned AFTER_GOLDEN_SET = 124 The after golden set AFTER_OT = 46 Overtime is finished AFTER_PENALTIES = 47 Penalties are finished AFTER_SD = 56 After sudden death AFTER_SUPER_OVER = 65 After super over AWAITING_GOLDEN_SET = 123 The awaiting golden set AWAITING_OT = 43 Waiting for overtime to start AWAITING_PENALTIES = 45 Waiting for penalty shooting to start AWAITING_SD = 55 Awaiting sudden death AWAITING_SUPER_OVER = 62 Awaiting super over BREAK_TOP1_BOTTOM1 = 72 Break top 1 bottom 1 BREAK_TOP2_BOTTOM1 = 74 Break top 2 bottom 1 BREAK_TOP2_BOTTOM2 = 76 Break top 2 bottom 2 BREAK_TOP3_BOTTOM2 = 78 Break top 3 bottom 2 BREAK_TOP3_BOTTOM3 = 80 Break top 3 bottom 3 BREAK_TOP4_BOTTOM3 = 82 Break top 4 bottom 3 BREAK_TOP4_BOTTOM4 = 84 Break top 4 bottom 4 BREAK_TOP5_BOTTOM4 = 86 Break top 5 bottom 4 BREAK_TOP5_BOTTOM5 = 88 Break top 5 bottom 5 BREAK_TOP6_BOTTOM5 = 90 Break top 6 bottom 5 BREAK_TOP6_BOTTOM6 = 92 Break top 6 bottom 6 BREAK_TOP7_BOTTOM6 = 94 Break top 7 bottom 6 BREAK_TOP7_BOTTOM7 = 96 Break top 7 bottom 7 BREAK_TOP8_BOTTOM7 = 98 Break top 8 bottom 7 BREAK_TOP8_BOTTOM8 = 100 Break top 8 bottom 8 BREAK_TOP9_BOTTOM8 = 102 Break top 9 bottom 8 BREAK_TOP9_BOTTOM9 = 104 Break top 9 bottom 9 BREAK_TOPEI_BOTTOM7 = 106 Break top extra inning bottom 7 BREAK_TOPEI_BOTTOM9 = 107 Break top extra inning bottom 9 BREAK_TOPEI_BOTTOMEI = 109 Break top extra inning bottom extra inning CANCELLED = 31 The match has been cancelled DEFAULTED1 = 40 Player 1 defaulted (e.g. by being disqualified or failing to attend the match) DEFAULTED2 = 41 Player 2 defaulted (e.g. by being disqualified or failing to attend the match) DELAYED = 30 The match start is delayed EIGHTH_INNING_BOTTOM = 101 Eighth inning bottom EIGHTH_INNING_TOP = 99 Eighth inning top ENDED = 42 The match has ended EXTRA_INNING_BOTTOM = 110 Extra inning bottom EXTRA_INNING_TOP = 108 Extra inning top FIFTH_GAME = 122 Fifth game FIFTH_INNING_BOTTOM = 89 Fifth inning bottom FIFTH_INNING_TOP = 87 Fifth inning top FIFTH_MAP = 115 Fifth map FIFTH_PAUSE = 52 5th pause FIFTH_PERIOD = 6 5th period of the match FIFTH_SET = 13 5th set FIRST_GAME = 118 First game FIRST_HALF = 7 1st half of the match FIRST_HALF_OT = 26 1st half of overtime FIRST_INNINGS_AWAY_TEAM = 59 First innings away team FIRST_INNINGS_HOME_TEAM = 58 First innings home team FIRST_INNING_BOTTOM = 73 First inning bottom FIRST_INNING_TOP = 71 First inning top FIRST_MAP = 111 First map FIRST_PAUSE = 48 1st pause FIRST_PERIOD = 2 1st period of the match FIRST_QUARTER = 16 1st quarter FIRST_SET = 9 1st set FOURTH_GAME = 121 Fourth game FOURTH_INNING_BOTTOM = 85 Fourth inning bottom FOURTH_INNING_TOP = 83 Fourth inning top FOURTH_MAP = 114 Fourth map FOURTH_PAUSE = 51 4th pause FOURTH_PERIOD = 5 4th period of the match FOURTH_QUARTER = 19 4th quarter FOURTH_SET = 12 4th set GOLDEN_SET = 20 Golden set (volleyball and beach volleyball) HALFTIME = 24 Half time INNINGS_BREAK = 66 Innings break INTERRUPTED = 32 The match has been interrupted IN_PROGRESS = 22 In progress LUNCH_BREAK = 68 Lunch break NINTH_INNING_BOTTOM = 105 Ninth inning bottom NINTH_INNING_TOP = 103 Ninth inning top NOT_STARTED = 1 Not started yet OT_HALFTIME = 44 Pause between 1st and 2nd overtime period OVERTIME = 25 Match overtime PAUSE = 23 Match paused PENALTY_SHOOTING = 28 Penalty shooting POSTPONED = 29 The match has been postponed and will be played later. RETIRED = 35 Player retired RETIRED1 = 38 Player 1 retired RETIRED2 = 39 Player 2 retired SECOND_GAME = 119 Second game SECOND_HALF = 8 2nd half of the match SECOND_HALF_OT = 27 2nd half of overtime SECOND_INNINGS_AWAY_TEAM = 61 Second innings away team SECOND_INNINGS_HOME_TEAM = 60 Second innings home team SECOND_INNING_BOTTOM = 77 Second inning bottom SECOND_INNING_TOP = 75 Second inning top SECOND_MAP = 112 Second map SECOND_PAUSE = 49 2nd pause SECOND_PERIOD = 3 2nd period of the match SECOND_QUARTER = 17 2nd quarter SECOND_SET = 10 2nd set SESSION_BREAK = 57 Session break SEVENTH_INNING_BOTTOM = 97 Seventh inning bottom SEVENTH_INNING_TOP = 95 Seventh inning top SEVENTH_MAP = 117 Seventh map SEVENTH_SET = 15 7th set SIXTH_INNING_BOTTOM = 93 Sixth inning bottom SIXTH_INNING_TOP = 91 Sixth inning top SIXTH_MAP = 116 Sixth map SIXTH_PAUSE = 53 6th pause SIXTH_SET = 14 6th set STARTED = 21 Match started STUMPS = 70 Stumps SUDDEN_DEATH = 54 Sudden death SUPER_OVER_AWAY_TEAM = 64 Super over away team SUPER_OVER_BREAK = 67 Super over break SUPER_OVER_HOME_TEAM = 63 Super over home team TEA_BREAK = 69 Tea break THIRD_GAME = 120 Third game THIRD_INNING_BOTTOM = 81 Third inning bottom THIRD_INNING_TOP = 79 Third inning top THIRD_MAP = 113 Third map THIRD_PAUSE = 50 3rd pause THIRD_PERIOD = 4 3rd period of the match THIRD_QUARTER = 18 3rd quarter THIRD_SET = 11 3rd set UNDEFINED = 0 Undefined WALKOVER = 34 A walkover has been awarded WALKOVER1 = 36 Player 1 won by walkover WALKOVER2 = 37 Player 2 won by walkover Remarks Match statuses used by the different sports: Soccer: NOT_STARTED, FIRST_HALF, HALFTIME, SECOND_HALF, INTERRUPTED, ABANDONED, ENDED, AWAITING_OT, FIRST_HALF_OT, OT_HALFTIME, SECOND_HALF_OT, AFTER_OT, AWAITING_PENALTIES, PENALTY_SHOOTING, AFTER_PENALTIES Ice Hockey: NOT_STARTED, FIRST_HALF, HALFTIME, SECOND_HALF, INTERRUPTED, ABANDONED, ENDED, AWAITING_OT, FIRST_HALF_OT, OT_HALFTIME, SECOND_HALF_OT, AFTER_OT, AWAITING_PENALTIES, PENALTY_SHOOTING, AFTER_PENALTIES Tennis: NOT_STARTED, FIRST_SET, SECOND_SET, THIRD_SET, FOURTH_SET, FIFTH_SET, ENDED, WALKOVER1, WALKOVER2, RETIRED1, RETIRED2, DELAYED, INTERRUPTED, ABANDONED, DEFAULTED1, DEFAULTED2 Basketball: NOT_STARTED, FIRST_QUARTER, FIRST_PAUSE, SECOND_QUARTER, SECOND_PAUSE, THIRD_QUARTER, THIRD_PAUSE, FOURTH_QUARTER, ENDED, AWAITING_OT, OVERTIME, AFTER_OT, INTERRUPTED, ABANDONED Volleyball: NOT_STARTED, FIRST_SET, FIRST_PAUSE, SECOND_SET, SECOND_PAUSE , THIRD_SET, THIRD_PAUSE, FOURTH_SET, FOURTH_PAUSE, FIFTH_SET, ENDED, GOLDEN_SET, WALKOVER1, WALKOVER2, RETIRED1, RETIRED2, DELAYED, INTERRUPTED, ABANDONED Beach Volleyball: NOT_STARTED, FIRST_SET, FIRST_PAUSE, SECOND_SET, SECOND_PAUSE , THIRD_SET, ENDED, GOLDEN_SET, WALKOVER1, WALKOVER2, RETIRED1, RETIRED2, DELAYED, INTERRUPTED, ABANDONED Handball: NOT_STARTED, FIRST_HALF, HALFTIME, SECOND_HALF, INTERRUPTED, ABANDONED, ENDED, AWAITING_OT, FIRST_HALF_OT, OT_HALFTIME, SECOND_HALF_OT, AFTER_OT, AWAITING_PENALTIES, PENALTY_SHOOTING, AFTER_PENALTIES Futsal: NOT_STARTED, FIRST_HALF, HALFTIME, SECOND_HALF, INTERRUPTED, ABANDONED, ENDED, AWAITING_OT, FIRST_HALF_OT, OT_HALFTIME,SECOND_HALF_OT, AFTER_OT, AWAITING_PENALTIES, PENALTY_SHOOTING, AFTER_PENALTIES Rugby union: NOT_STARTED, FIRST_HALF, HALFTIME, SECOND_HALF, AWAITING_OT, FIRST_HALF_OT, OT_HALFTIME,SECOND_HALF_OT, AFTER_OT, AWAITING_PENALTIES, PENALTY_SHOOTING, AFTER_PENALTIES, AWAITING_SD, SUDDEN_DEATH, AFTER_SD, ENDED, INTERRUPTED, ABANDONED, POSTPONED Darts: NOT_STARTED, IN_PROGRESS, PAUSE, ENDED, WALKOVER1, WALKOVER2, RETIRED1, RETIRED2, DEFAULTED1, DEFAULTED2, DELAYED, INTERRUPTED, ABANDONED"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.ScoutMatchStatusClasses.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.ScoutMatchStatusClasses.html",
    "title": "Class ScoutMatchStatusClasses | sportradar.livedata.sdk",
    "keywords": "Class ScoutMatchStatusClasses Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums Assembly Sportradar.LiveData.Sdk.dll Group ScoutMatchStatus in to different classes. public class ScoutMatchStatusClasses Inheritance object ScoutMatchStatusClasses Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DELAYED An unexpected delay has occurred on the match. public static readonly ScoutMatchStatus[] DELAYED Field Value ScoutMatchStatus[] Remarks You should not purge such matches in that state. TERMINAL Terminal states. public static readonly ScoutMatchStatus[] TERMINAL Field Value ScoutMatchStatus[] Remarks The match is no longer interesting for us after the transition to that state."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.Sex.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.Sex.html",
    "title": "Enum Sex | sportradar.livedata.sdk",
    "keywords": "Enum Sex Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums Assembly Sportradar.LiveData.Sdk.dll Sex (gender) of the contestant or the whole team. public enum Sex Fields FEMALE = 2 Female team or contestant. MALE = 1 Male team or contestant. MIXED = 3 Mixed team. UNDEFINED = 0 Undefined."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.SurfaceType.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.SurfaceType.html",
    "title": "Enum SurfaceType | sportradar.livedata.sdk",
    "keywords": "Enum SurfaceType Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums Assembly Sportradar.LiveData.Sdk.dll Type of surface public enum SurfaceType Fields CARPET = 4 Carpet GRASS = 3 Grass HARDCOURT = 2 Hard court SAND = 1 Sand UNDEFINED = 0 Undefined UNKNOWN = 5 Unknown"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.TeamStatsType.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.TeamStatsType.html",
    "title": "Enum TeamStatsType | sportradar.livedata.sdk",
    "keywords": "Enum TeamStatsType Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums Assembly Sportradar.LiveData.Sdk.dll public enum TeamStatsType Fields INNING1 = 1 INNING2 = 2 INNING3 = 3 INNING4 = 4 INNING5 = 5 INNING6 = 6 INNING7 = 7 INNING8 = 8 INNING9 = 9 INNINGE = 10 TOTAL = 0"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.VbpClassification.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.VbpClassification.html",
    "title": "Enum VbpClassification | sportradar.livedata.sdk",
    "keywords": "Enum VbpClassification Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums Assembly Sportradar.LiveData.Sdk.dll Book match result public enum VbpClassification Fields MVP = 2 MVP STAR = 1 Star UNDEFINED = 0 Undefined"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.WeatherConditions.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.WeatherConditions.html",
    "title": "Enum WeatherConditions | sportradar.livedata.sdk",
    "keywords": "Enum WeatherConditions Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums Assembly Sportradar.LiveData.Sdk.dll Weather conditions public enum WeatherConditions Fields BAD = 3 Bad EXTREME = 6 Extreme GOOD = 1 Good INDOOR = 5 Indoor MEDIUM = 2 Medium UNDEFINED = 0 Undefined UNKNOWN = 4 Unknown"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums.html",
    "title": "Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Enums Classes ScoutMatchStatusClasses Group ScoutMatchStatus in to different classes. Enums BookMatchResult Book match result Coverage Type of match coverage. EventType Event type. See LiveScout documentation to see which event types are supported for each sport. New event types can be offered in future. FormatType Format type IceConditions Ice conditions Inning Inning half MatchBetStatus Bet status (whether market is open or closed) PitchConditions Pitch conditions. ScoutFeedType Type of scout match information message (full, delta or deltaupdate). ScoutMatchStatus Match status as used by Live Odds. Not all match statuses are used by each sport. Sex Sex (gender) of the contestant or the whole team. SurfaceType Type of surface TeamStatsType VbpClassification Book match result WeatherConditions Weather conditions"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Events.ConnectionChangeEventArgs.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Events.ConnectionChangeEventArgs.html",
    "title": "Class ConnectionChangeEventArgs | sportradar.livedata.sdk",
    "keywords": "Class ConnectionChangeEventArgs Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Events Assembly Sportradar.LiveData.Sdk.dll Event arguments passed with OnClosed and OnOpened. [Serializable] public class ConnectionChangeEventArgs : EventArgs Inheritance object EventArgs ConnectionChangeEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties LocalTimestamp Connection change timestamp (local UTC timestamp) public DateTime LocalTimestamp { get; } Property Value DateTime"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Events.LineupsEventArgs.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Events.LineupsEventArgs.html",
    "title": "Class LineupsEventArgs | sportradar.livedata.sdk",
    "keywords": "Class LineupsEventArgs Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Events Assembly Sportradar.LiveData.Sdk.dll Event arguments passed with OnLineups. [Serializable] public class LineupsEventArgs : EventArgs Inheritance object EventArgs LineupsEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Lineups The lineups public Lineups Lineups { get; } Property Value Lineups"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Events.MatchBookingReplyEventArgs.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Events.MatchBookingReplyEventArgs.html",
    "title": "Class MatchBookingReplyEventArgs | sportradar.livedata.sdk",
    "keywords": "Class MatchBookingReplyEventArgs Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Events Assembly Sportradar.LiveData.Sdk.dll Event arguments passed with OnMatchBookingReply. [Serializable] public class MatchBookingReplyEventArgs : EventArgs Inheritance object EventArgs MatchBookingReplyEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties MatchBooking Match booking reply public MatchBooking MatchBooking { get; } Property Value MatchBooking"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Events.MatchDataEventArgs.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Events.MatchDataEventArgs.html",
    "title": "Class MatchDataEventArgs | sportradar.livedata.sdk",
    "keywords": "Class MatchDataEventArgs Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Events Assembly Sportradar.LiveData.Sdk.dll Event arguments passed with OnMatchData. [Serializable] public class MatchDataEventArgs : EventArgs Inheritance object EventArgs MatchDataEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties MatchData Gets the match data. public MatchData MatchData { get; } Property Value MatchData The match data."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Events.MatchListEventArgs.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Events.MatchListEventArgs.html",
    "title": "Class MatchListEventArgs | sportradar.livedata.sdk",
    "keywords": "Class MatchListEventArgs Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Events Assembly Sportradar.LiveData.Sdk.dll Event arguments passed with OnMatchList. [Serializable] public class MatchListEventArgs : EventArgs Inheritance object EventArgs MatchListEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties MatchList List of match infos public MatchUpdate[] MatchList { get; } Property Value MatchUpdate[] WasRequested Is the event a reply for something we asked for? true when yes; false else (when some schedule was changed and we get this) public bool WasRequested { get; } Property Value bool"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Events.MatchStopEventArgs.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Events.MatchStopEventArgs.html",
    "title": "Class MatchStopEventArgs | sportradar.livedata.sdk",
    "keywords": "Class MatchStopEventArgs Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Events Assembly Sportradar.LiveData.Sdk.dll Event arguments passed with OnMatchStop. [Serializable] public class MatchStopEventArgs : EventArgs Inheritance object EventArgs MatchStopEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties MatchId Match id public long MatchId { get; } Property Value long Reason Reason could be a match subscription failure or client unsubscribing from a match. public string Reason { get; } Property Value string"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Events.MatchUpdateEventArgs.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Events.MatchUpdateEventArgs.html",
    "title": "Class MatchUpdateEventArgs | sportradar.livedata.sdk",
    "keywords": "Class MatchUpdateEventArgs Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Events Assembly Sportradar.LiveData.Sdk.dll Event arguments passed OnMatchUpdate, OnMatchUpdateDelta, OnMatchUpdateDeltaUpdate and OnMatchUpdateFull. [Serializable] public class MatchUpdateEventArgs : EventArgs Inheritance object EventArgs MatchUpdateEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties MatchUpdate Match update (full, delta or delta update) public MatchUpdate MatchUpdate { get; } Property Value MatchUpdate"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Events.ScoutInfoEventArgs.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Events.ScoutInfoEventArgs.html",
    "title": "Class ScoutInfoEventArgs | sportradar.livedata.sdk",
    "keywords": "Class ScoutInfoEventArgs Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Events Assembly Sportradar.LiveData.Sdk.dll Event arguments passed with OnScoutInfo. [Serializable] public class ScoutInfoEventArgs : EventArgs Inheritance object EventArgs ScoutInfoEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties MatchId Match id public long MatchId { get; } Property Value long ScoutInfos Basic information about the match public ScoutInfo[] ScoutInfos { get; } Property Value ScoutInfo[]"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Events.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Events.html",
    "title": "Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Events | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Events Classes ConnectionChangeEventArgs Event arguments passed with OnClosed and OnOpened. LineupsEventArgs Event arguments passed with OnLineups. MatchBookingReplyEventArgs Event arguments passed with OnMatchBookingReply. MatchDataEventArgs Event arguments passed with OnMatchData. MatchListEventArgs Event arguments passed with OnMatchList. MatchStopEventArgs Event arguments passed with OnMatchStop. MatchUpdateEventArgs Event arguments passed OnMatchUpdate, OnMatchUpdateDelta, OnMatchUpdateDeltaUpdate and OnMatchUpdateFull. ScoutInfoEventArgs Event arguments passed with OnScoutInfo."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Factories.LiveScoutEntityFactory.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Factories.LiveScoutEntityFactory.html",
    "title": "Class LiveScoutEntityFactory | sportradar.livedata.sdk",
    "keywords": "Class LiveScoutEntityFactory Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Factories Assembly Sportradar.LiveData.Sdk.dll public class LiveScoutEntityFactory Inheritance object LiveScoutEntityFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildFakeBetStop(long, DateTime) Generates a special MatchUpdate messages that contains a betstop event public MatchUpdate BuildFakeBetStop(long match_id, DateTime time) Parameters match_id long Id of the match time DateTime Time when the event should have happened Returns MatchUpdate An instance of MatchUpdate. BuildLineups(lineups) public Lineups BuildLineups(lineups lineups) Parameters lineups lineups Returns Lineups BuildManager(manager) public Manager BuildManager(manager manager) Parameters manager manager Returns Manager BuildMatchBooking(bookmatch) public MatchBooking BuildMatchBooking(bookmatch bookmatch) Parameters bookmatch bookmatch Returns MatchBooking BuildMatchData(matchdata) public MatchData BuildMatchData(matchdata matchdata) Parameters matchdata matchdata Returns MatchData BuildMatchFormat(matchformat) public List<Format> BuildMatchFormat(matchformat matchformat) Parameters matchformat matchformat Returns List<Format> BuildMatchHeader(match) public MatchHeader BuildMatchHeader(match orig) Parameters orig match Returns MatchHeader BuildMatchList(matchlist) public MatchList BuildMatchList(matchlist matchlist) Parameters matchlist matchlist Returns MatchList BuildMatchListUpdate(matchlistupdate) public MatchListUpdate BuildMatchListUpdate(matchlistupdate matchlistupdate) Parameters matchlistupdate matchlistupdate Returns MatchListUpdate BuildMatchProperties(matchproperties) public List<MatchProperty> BuildMatchProperties(matchproperties matchProperties) Parameters matchProperties matchproperties Returns List<MatchProperty> BuildMatchStop(matchstop) public MatchStop BuildMatchStop(matchstop matchstop) Parameters matchstop matchstop Returns MatchStop BuildMatchTeams(teams) public List<MatchTeam> BuildMatchTeams(teams matchTeams) Parameters matchTeams teams Returns List<MatchTeam> BuildMatchUpdate(match) public MatchUpdate BuildMatchUpdate(match match) Parameters match match Returns MatchUpdate BuildPlayer(player) public Player BuildPlayer(player player) Parameters player player Returns Player BuildScoutInfos(infos) public ScoutInfos BuildScoutInfos(infos infos) Parameters infos infos Returns ScoutInfos BuildTeamOffical(teamofficial) public TeamOffical BuildTeamOffical(teamofficial teamofficial) Parameters teamofficial teamofficial Returns TeamOffical"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Factories.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Factories.html",
    "title": "Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Factories | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Factories Classes LiveScoutEntityFactory"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Interfaces.ILiveScout.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Interfaces.ILiveScout.html",
    "title": "Interface ILiveScout | sportradar.livedata.sdk",
    "keywords": "Interface ILiveScout Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Interfaces Assembly Sportradar.LiveData.Sdk.dll Live scout client interface. public interface ILiveScout : ILiveFeeds, IStartable Inherited Members ILiveFeeds.OnFeedError ILiveFeeds.AvailableTranslations ILiveFeeds.LastAliveMessage ILiveFeeds.LastServerMessage ILiveFeeds.ServerTime ILiveFeeds.SubscribedEvents ILiveFeeds.BookEvents(IEnumerable<long>) ILiveFeeds.ClearState() ILiveFeeds.Subscribe(IEnumerable<long>) ILiveFeeds.Unsubscribe(IEnumerable<long>) IStartable.Start() IStartable.Stop() Methods GetMatchList(int, int, bool, int[], int[]) Request a list of available scout matches for a given time frame. By default only matches you have access to will be sent. You can also request all available matches by setting the include_avail. If this is done the reply will also include matches that are open for booking. void GetMatchList(int hours_back, int hours_fwd, bool include_avail = false, int[] sportIds = null, int[] matchIds = null) Parameters hours_back int Start of time frame hours_fwd int End of time frame include_avail bool Whether to also include all available matches for booking sportIds int[] Filter by sports matchIds int[] Filter by match ids ( Not implemented yet on LDS side ) SubscribeTest(long, int?, int?) Request a full feed for the match, and then update messages will follow in the same pace as they were sent out live. void SubscribeTest(long match_id, int? message_delay = null, int? start_message = null) Parameters match_id long Match id. message_delay int? Specifies how many milliseconds to wait in between sending out each message. start_message int? Specifies which message to start replay on (how far into the match). If startmessage is greater than or equal to the number of messages for the match, a full feed for the finished match is sent out, and no more messages will follow after this. Remarks This should only be used on the test server. Events OnClosed Signals that the underlaying connection has been closed (disconnect) event EventHandler<ConnectionChangeEventArgs> OnClosed Event Type EventHandler<ConnectionChangeEventArgs> OnLineups Player lineups for both teams were received. event EventHandler<LineupsEventArgs> OnLineups Event Type EventHandler<LineupsEventArgs> Remarks The event is dispatched immediately after subscribing to a match and every time the lineup changes. XML configuration option \"Send lineups for matches where this is available\" needs to be activated (currently works just for deep coverage soccer matches). OnMatchBookingReply Reply sent when a client books a match. If match booking failed for some reason (match already bought, match finished etc.), the reply will contain additional explanation. event EventHandler<MatchBookingReplyEventArgs> OnMatchBookingReply Event Type EventHandler<MatchBookingReplyEventArgs> OnMatchData Occurs when [on match data]. event EventHandler<MatchDataEventArgs> OnMatchData Event Type EventHandler<MatchDataEventArgs> OnMatchList Signals that a list of matches in the time frame requested by the client has been received. event EventHandler<MatchListEventArgs> OnMatchList Event Type EventHandler<MatchListEventArgs> OnMatchListUpdate Signals that an unsolicited list of matches has been received. event EventHandler<MatchListEventArgs> OnMatchListUpdate Event Type EventHandler<MatchListEventArgs> OnMatchStop Reply sent after client unsubscribed from a match. It could also be sent if match subscription failed for any reason (e.g. too many match subscriptions). event EventHandler<MatchStopEventArgs> OnMatchStop Event Type EventHandler<MatchStopEventArgs> OnMatchUpdate Signals that a match update message was received. There are three types of match information messages: full match feed, delta match feed and delta update feed (see MatchHeader.TypeOfFeed). All three can contain statistical information as well as individual events (an event being a goal, card, etc.). When a client application subscribes to a match, it will receive a full match update immediately after (given the subscription was successful). This message will contain all data for the match. Different event types are offered for different sports. Note that new event types will be added in the future. After a full match update is received, most updates will be sent as delta updates. In these messages only the new data is sent, if a yellow card is given only this event will be sent. In addition summary data will be sent for the event type in question, i.e. the total number of yellow cards for the home/away team for the match. If an existing event is changed, a delta update is sent for this event. E.g. a yellow card event is entered, and 1 minute later the event is updated by including which player got the card. Client must consider this as an update to an existing event, and not a new event (based on Event Id property). event EventHandler<MatchUpdateEventArgs> OnMatchUpdate Event Type EventHandler<MatchUpdateEventArgs> OnMatchUpdateDelta Delta match update event. See OnMatchUpdate for more info. event EventHandler<MatchUpdateEventArgs> OnMatchUpdateDelta Event Type EventHandler<MatchUpdateEventArgs> OnMatchUpdateDeltaUpdate Delta update match update event. See OnMatchUpdate for more info. event EventHandler<MatchUpdateEventArgs> OnMatchUpdateDeltaUpdate Event Type EventHandler<MatchUpdateEventArgs> OnMatchUpdateFull Full match update event. See OnMatchUpdate for more info. event EventHandler<MatchUpdateEventArgs> OnMatchUpdateFull Event Type EventHandler<MatchUpdateEventArgs> OnMatchUpdateFullPaginated Paginated full match update event. event EventHandler<MatchUpdateEventArgs> OnMatchUpdateFullPaginated Event Type EventHandler<MatchUpdateEventArgs> OnOpened Signals that the underlaying connection has been opened (connect) event EventHandler<ConnectionChangeEventArgs> OnOpened Event Type EventHandler<ConnectionChangeEventArgs> OnScoutInfo Signals some basic information about the match. Sent out when a client subscribes to a match. event EventHandler<ScoutInfoEventArgs> OnScoutInfo Event Type EventHandler<ScoutInfoEventArgs>"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Interfaces.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Interfaces.html",
    "title": "Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Interfaces | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Interfaces Interfaces ILiveScout Live scout client interface."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.LiveScoutFeedProvider.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.LiveScoutFeedProvider.html",
    "title": "Class LiveScoutFeedProvider | sportradar.livedata.sdk",
    "keywords": "Class LiveScoutFeedProvider Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout Assembly Sportradar.LiveData.Sdk.dll public class LiveScoutFeedProvider : ILiveScout, ILiveFeeds, IStartable, IFeedDispatcher Inheritance object LiveScoutFeedProvider Implements ILiveScout ILiveFeeds IStartable IFeedDispatcher Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields m_expire_match_timer protected Timer m_expire_match_timer Field Value Timer m_interesting_matches protected IDictionary<long, DateTime> m_interesting_matches Field Value IDictionary<long, DateTime> m_proto_provider protected IProtocolProvider m_proto_provider Field Value IProtocolProvider m_was_disconnected protected volatile bool m_was_disconnected Field Value bool Properties AvailableTranslations Language codes of the currently available translations. public virtual string[] AvailableTranslations { get; } Property Value string[] ProtoProvider public virtual IProtocolProvider ProtoProvider { get; protected set; } Property Value IProtocolProvider ProviderType public ProtocolProviderType ProviderType { get; } Property Value ProtocolProviderType SubscribedEvents All event ids we are currently subscribed to. public virtual long[] SubscribedEvents { get; } Property Value long[] Methods DispatchEntity(EntityBase) public DispatchStatus DispatchEntity(EntityBase entity) Parameters entity EntityBase Returns DispatchStatus Start() Start component. public void Start() Remarks The component should be initialized first. Stop() Stop / shutdown component. public void Stop() Events OnClosed Signals that the underlaying connection has been closed (disconnect) public event EventHandler<ConnectionChangeEventArgs> OnClosed Event Type EventHandler<ConnectionChangeEventArgs> OnFeedError Signals that a feed error has occurred (e.g. we got disconnected from the feed server, XML message parsing error occurred). public virtual event EventHandler<FeedErrorEventArgs> OnFeedError Event Type EventHandler<FeedErrorEventArgs> Remarks It is suggested that this event handler is wired to some Monitoring Service OnLineups Player lineups for both teams were received. public virtual event EventHandler<LineupsEventArgs> OnLineups Event Type EventHandler<LineupsEventArgs> Remarks The event is dispatched immediately after subscribing to a match and every time the lineup changes. XML configuration option \"Send lineups for matches where this is available\" needs to be activated (currently works just for deep coverage soccer matches). OnMatchBookingReply Reply sent when a client books a match. If match booking failed for some reason (match already bought, match finished etc.), the reply will contain additional explanation. public virtual event EventHandler<MatchBookingReplyEventArgs> OnMatchBookingReply Event Type EventHandler<MatchBookingReplyEventArgs> OnMatchData Occurs when [on match data]. public virtual event EventHandler<MatchDataEventArgs> OnMatchData Event Type EventHandler<MatchDataEventArgs> OnMatchList Signals that a list of matches in the time frame requested by the client has been received. public virtual event EventHandler<MatchListEventArgs> OnMatchList Event Type EventHandler<MatchListEventArgs> OnMatchListUpdate Signals that an unsolicited list of matches has been received. public virtual event EventHandler<MatchListEventArgs> OnMatchListUpdate Event Type EventHandler<MatchListEventArgs> OnMatchStop Reply sent after client unsubscribed from a match. It could also be sent if match subscription failed for any reason (e.g. too many match subscriptions). public virtual event EventHandler<MatchStopEventArgs> OnMatchStop Event Type EventHandler<MatchStopEventArgs> OnMatchUpdate Signals that a match update message was received. There are three types of match information messages: full match feed, delta match feed and delta update feed (see MatchHeader.TypeOfFeed). All three can contain statistical information as well as individual events (an event being a goal, card, etc.). When a client application subscribes to a match, it will receive a full match update immediately after (given the subscription was successful). This message will contain all data for the match. Different event types are offered for different sports. Note that new event types will be added in the future. After a full match update is received, most updates will be sent as delta updates. In these messages only the new data is sent, if a yellow card is given only this event will be sent. In addition summary data will be sent for the event type in question, i.e. the total number of yellow cards for the home/away team for the match. If an existing event is changed, a delta update is sent for this event. E.g. a yellow card event is entered, and 1 minute later the event is updated by including which player got the card. Client must consider this as an update to an existing event, and not a new event (based on Event Id property). public virtual event EventHandler<MatchUpdateEventArgs> OnMatchUpdate Event Type EventHandler<MatchUpdateEventArgs> OnMatchUpdateDelta Delta match update event. See OnMatchUpdate for more info. public virtual event EventHandler<MatchUpdateEventArgs> OnMatchUpdateDelta Event Type EventHandler<MatchUpdateEventArgs> OnMatchUpdateDeltaUpdate Delta update match update event. See OnMatchUpdate for more info. public virtual event EventHandler<MatchUpdateEventArgs> OnMatchUpdateDeltaUpdate Event Type EventHandler<MatchUpdateEventArgs> OnMatchUpdateFull Full match update event. See OnMatchUpdate for more info. public virtual event EventHandler<MatchUpdateEventArgs> OnMatchUpdateFull Event Type EventHandler<MatchUpdateEventArgs> OnMatchUpdateFullPaginated Paginated full match update event. public virtual event EventHandler<MatchUpdateEventArgs> OnMatchUpdateFullPaginated Event Type EventHandler<MatchUpdateEventArgs> OnOpened Signals that the underlaying connection has been opened (connect) public event EventHandler<ConnectionChangeEventArgs> OnOpened Event Type EventHandler<ConnectionChangeEventArgs> OnScoutInfo Signals some basic information about the match. Sent out when a client subscribes to a match. public virtual event EventHandler<ScoutInfoEventArgs> OnScoutInfo Event Type EventHandler<ScoutInfoEventArgs>"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.Attribute.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.Attribute.html",
    "title": "Class Attribute | sportradar.livedata.sdk",
    "keywords": "Class Attribute Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types Assembly Sportradar.LiveData.Sdk.dll Attribute [Serializable] public class Attribute Inheritance object Attribute Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Type Type public string Type { get; set; } Property Value string TypeId Type id public int TypeId { get; set; } Property Value int Value Value public string Value { get; set; } Property Value string ValueId Value id public int ValueId { get; set; } Property Value int Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.BattersStatsTotal.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.BattersStatsTotal.html",
    "title": "Class BattersStatsTotal | sportradar.livedata.sdk",
    "keywords": "Class BattersStatsTotal Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class BattersStatsTotal Inheritance object BattersStatsTotal Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties PlayerStats public PlayerStats[] PlayerStats { get; } Property Value PlayerStats[] Side public Team Side { get; } Property Value Team Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.Behinds.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.Behinds.html",
    "title": "Class Behinds | sportradar.livedata.sdk",
    "keywords": "Class Behinds Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types Assembly Sportradar.LiveData.Sdk.dll Behinds [Serializable] public class Behinds Inheritance object Behinds Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties T1 Gets the T1 public int T1 { get; } Property Value int The T1 T2 Gets the T2 public int T2 { get; } Property Value int The T2 Type Gets the type (aussie_rules_score_type) public string Type { get; } Property Value string The type Methods ToString() Returns a string that represents the current object public override string ToString() Returns string A string that represents the current object Remarks Can be used for diagnostics purposes"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.Court.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.Court.html",
    "title": "Class Court | sportradar.livedata.sdk",
    "keywords": "Class Court Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types Assembly Sportradar.LiveData.Sdk.dll Court [Serializable] public class Court Inheritance object Court Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties CourtSeq Court seq public int? CourtSeq { get; } Property Value int? Id Id public int Id { get; } Property Value int Name Name public string Name { get; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.FeedPagination.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.FeedPagination.html",
    "title": "Class FeedPagination | sportradar.livedata.sdk",
    "keywords": "Class FeedPagination Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types Assembly Sportradar.LiveData.Sdk.dll Contains properties that are added to MatchHeader when ScoutFeedType.FULL_PAGINATED is received. [Serializable] public class FeedPagination Inheritance object FeedPagination Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Page Returns page number of current feed partial. public int? Page { get; } Property Value int? TotalPages Returns total amount of pages in splitted feed. public int? TotalPages { get; } Property Value int? Uuid Before splitting feed gets his own uuid . All partials after splitting will have same uuid . public string? Uuid { get; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.Format.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.Format.html",
    "title": "Class Format | sportradar.livedata.sdk",
    "keywords": "Class Format Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types Assembly Sportradar.LiveData.Sdk.dll Format [Serializable] public class Format Inheritance object Format Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Type Format type public FormatType Type { get; } Property Value FormatType Value Format value public int Value { get; } Property Value int Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.Goals.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.Goals.html",
    "title": "Class Goals | sportradar.livedata.sdk",
    "keywords": "Class Goals Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types Assembly Sportradar.LiveData.Sdk.dll Goals [Serializable] public class Goals Inheritance object Goals Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties T1 Gets the T1 public int T1 { get; } Property Value int The T1 T2 Gets the T2 public int T2 { get; } Property Value int The T2 Type Gets the type (aussie_rules_score_type) public string Type { get; } Property Value string The type Methods ToString() Returns a string that represents the current object public override string ToString() Returns string A string that represents the current object Remarks Can be used for diagnostics purposes"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.Gold.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.Gold.html",
    "title": "Class Gold | sportradar.livedata.sdk",
    "keywords": "Class Gold Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types Assembly Sportradar.LiveData.Sdk.dll gold [Serializable] public class Gold Inheritance object Gold Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties MapNr mapnr public int MapNr { get; } Property Value int T1 t1 public int T1 { get; } Property Value int T2 t2 public int T2 { get; } Property Value int Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.InningScore.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.InningScore.html",
    "title": "Class InningScore | sportradar.livedata.sdk",
    "keywords": "Class InningScore Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types Assembly Sportradar.LiveData.Sdk.dll Inning score [Serializable] public class InningScore Inheritance object InningScore Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Inning Inning public int Inning { get; } Property Value int Score Inning public HomeAway<int> Score { get; } Property Value HomeAway<int> Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.Innings.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.Innings.html",
    "title": "Class Innings | sportradar.livedata.sdk",
    "keywords": "Class Innings Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types Assembly Sportradar.LiveData.Sdk.dll Innings [Serializable] public class Innings Inheritance object Innings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Dismissals Dismissals public int Dismissals { get; } Property Value int Runs Runs public int Runs { get; } Property Value int StatusId Status id public int StatusId { get; } Property Value int StatusName Status Name public string StatusName { get; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.Jersey.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.Jersey.html",
    "title": "Class Jersey | sportradar.livedata.sdk",
    "keywords": "Class Jersey Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types Assembly Sportradar.LiveData.Sdk.dll Jersey [Serializable] public class Jersey Inheritance object Jersey Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Base Gets the base. public string Base { get; } Property Value string The base. HorizontalStripes Gets the horizontal stripes. public string HorizontalStripes { get; } Property Value string The horizontal stripes. JerseyType Gets the type of the jersey. public int JerseyType { get; } Property Value int The type of the jersey. Number Gets the number. public string Number { get; } Property Value string The number. Outline Gets the outline. public string Outline { get; } Property Value string The outline. ShirtType Gets the type of the shirt. public string ShirtType { get; } Property Value string The type of the shirt. Side Gets the side. public int Side { get; } Property Value int The side. Sleeve Gets the sleeve. public string Sleeve { get; } Property Value string The sleeve. Split Gets the split. public string Split { get; } Property Value string The split. Squares Gets the squares. public string Squares { get; } Property Value string The squares. VerticalStripes Gets the vertical stripes. public string VerticalStripes { get; } Property Value string The vertical stripes. Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.MatchHeader.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.MatchHeader.html",
    "title": "Class MatchHeader | sportradar.livedata.sdk",
    "keywords": "Class MatchHeader Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types Assembly Sportradar.LiveData.Sdk.dll Basic match information specifying match id, teams playing, bet status, feed type and other info. [Serializable] public class MatchHeader Inheritance object MatchHeader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Active Is match active? public bool? Active { get; } Property Value bool? AwayState public string AwayState { get; } Property Value string BetStatus Whether market is open or closed. public MatchBetStatus? BetStatus { get; } Property Value MatchBetStatus? ConnectionStatus Whether scout is currently connected or not. public bool? ConnectionStatus { get; } Property Value bool? CoverageStatusId Gets the coverage status identifier public int? CoverageStatusId { get; } Property Value int? CoveredFrom Whether the match is covered from TV or venue. public Coverage? CoveredFrom { get; } Property Value Coverage? Device Device used for scouting 1 – Hardphone/Asterisk 2 – Softphone 3 – Scout Admin 4 – Scout Mobile App 5 – External Data Feed public int? Device { get; } Property Value int? Distance Distance between teams in km. public int? Distance { get; } Property Value int? ExtMatchId public string ExtMatchId { get; } Property Value string ExtraInfo Integer specifying special information for the match. Can be one of the following: 1 – Soccer match played 2*40 minutes (+2*10 minutes extra time) 2 – Tennis no advantage rule, super tie break to 10 points 3 – Tennis no advantage rule, super tie break to 7 points 4 – Tennis no advantage rule, no super tie break 5 – Tennis advantage rule, super tie break to 10 points 6 – Tennis advantage rule, super tie break to 7 points 7 – Basketball 12 minute periods 8 – Volleyball best of 3 sets 9 - Soccer match played 2*35 minutes (+2* 5 minutes extra time) 10 - Soccer match played 2*30 minutes (+2* 5 minutes extra time) 11 - Soccer match played 2*25 minutes (+2* 5 minutes extra time) 12 - Ice hockey 10 minutes extra time periods 13 - Ice hockey 20 minutes extra time periods 14 – Futsal match played 2*25 minutes (+2* 5 minutes extra time) Tennis advantage rule is when games must be won by at least 2 points (i.e. the use of deuce and advantage player X). In doubles matches advantage rule is usually not used. Super tie break in tennis is when the last set is a special tie break set. public int? ExtraInfo { get; } Property Value int? FeedPagination Pagination properties that are provided when ScoutFeedType.FULL_PAGINATED is used. public FeedPagination? FeedPagination { get; } Property Value FeedPagination FirstServe Which player / team has first serve of match (tennis). public Team? FirstServe { get; } Property Value Team? FirstServeGoldenSet Which player / team has first serve of golden set public Team? FirstServeGoldenSet { get; } Property Value Team? FirstServeTieBreak Which player / team has first serve in tie-break (tennis). public Team? FirstServeTieBreak { get; } Property Value Team? HomeState public string HomeState { get; } Property Value string IsBooked Whether the match is booked by the client. public bool? IsBooked { get; } Property Value bool? IsCancelled public bool? IsCancelled { get; } Property Value bool? IsDeepCoverage Whether this is a deep coverage match. public bool? IsDeepCoverage { get; } Property Value bool? IsTimeRunning Whether time/clock is running/active or not. public bool? IsTimeRunning { get; } Property Value bool? MatchId Match Id. public long MatchId { get; } Property Value long MatchTime Match time, mm:ss (e.g. 40:00 or 00:00). public string MatchTime { get; } Property Value string NumberOfSets Number of sets in match (tennis). public int? NumberOfSets { get; } Property Value int? STime public long? STime { get; } Property Value long? SetLimit Number of points needed to win a set public int? SetLimit { get; } Property Value int? Sex Gender (sex) of the player / team. public Sex Sex { get; } Property Value Sex SourceId Customer match id. Included if set up and if available for this match. Contact Sportradar in order to include this in the scout feed public string SourceId { get; } Property Value string SportId Gets the sport identifier public int? SportId { get; } Property Value int? St1Id Betradar super team id for team 1. public int? St1Id { get; } Property Value int? Remarks Super team is the parent a certain team derives from. New sponsor might completely change the name of the team no matter it is actually the same thing. St2Id Betradar super team id for team 2. public int? St2Id { get; } Property Value int? Remarks Super team is the parent a certain team derives from. New sponsor might completely change the name of the team no matter it is actually the same thing. Start Official match start time, as a timestamp in UTC. public DateTime? Start { get; } Property Value DateTime? Team1 Betradar team 1 (home team). public IdNameTuple Team1 { get; } Property Value IdNameTuple Team1Abbreviation Team 1 abbreviation public string Team1Abbreviation { get; } Property Value string Team1Division public string Team1Division { get; } Property Value string Team1Natural Betradar team 1 (home team) - natural public IdNameTuple Team1Natural { get; } Property Value IdNameTuple Team2 Betradar team 2 (away team). public IdNameTuple Team2 { get; } Property Value IdNameTuple Team2Abbreviation Team 2 abbreviation public string Team2Abbreviation { get; } Property Value string Team2Division public string Team2Division { get; } Property Value string Team2Natural Betradar team 2 (away team) - natural public IdNameTuple Team2Natural { get; } Property Value IdNameTuple TeamMatch public bool? TeamMatch { get; } Property Value bool? TeamMatchId public long? TeamMatchId { get; } Property Value long? TeamsReversed public TeamsReversed TeamsReversed { get; } Property Value TeamsReversed TieBreakLastSet Last set has tie break. public bool? TieBreakLastSet { get; } Property Value bool? TypeOfFeed Whether this is a full, paginated full, delta or delta update message. public ScoutFeedType? TypeOfFeed { get; } Property Value ScoutFeedType? Var public int? Var { get; } Property Value int? VbpClassification public VbpClassification VbpClassification { get; } Property Value VbpClassification Venue public string Venue { get; } Property Value string WonJumpBall Which team won jump ball at the start of the match. public Team? WonJumpBall { get; } Property Value Team? Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.MatchProperty.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.MatchProperty.html",
    "title": "Class MatchProperty | sportradar.livedata.sdk",
    "keywords": "Class MatchProperty Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types Assembly Sportradar.LiveData.Sdk.dll Match Property [Serializable] public class MatchProperty Inheritance object MatchProperty Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Type Format type public string Type { get; } Property Value string Value Format value public string Value { get; } Property Value string Methods ToString() Returns a string that represents the current object public override string ToString() Returns string A string that represents the current object Remarks Can be used for diagnostics purposes"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.MatchRole.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.MatchRole.html",
    "title": "Class MatchRole | sportradar.livedata.sdk",
    "keywords": "Class MatchRole Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types Assembly Sportradar.LiveData.Sdk.dll Match role [Serializable] public class MatchRole Inheritance object MatchRole Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Description Description public string Description { get; set; } Property Value string Id Id public int Id { get; set; } Property Value int Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.MatchTeam.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.MatchTeam.html",
    "title": "Class MatchTeam | sportradar.livedata.sdk",
    "keywords": "Class MatchTeam Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types Assembly Sportradar.LiveData.Sdk.dll Match Team [Serializable] public class MatchTeam Inheritance object MatchTeam Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties DateOfBirth Date of birth public string DateOfBirth { get; } Property Value string Nationality Nationality public string Nationality { get; } Property Value string Side Gets the home or away side of team public Team Side { get; } Property Value Team The home or away side of team Methods ToString() Returns a string that represents the current object public override string ToString() Returns string A string that represents the current object Remarks Can be used for diagnostics purposes"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.Networth.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.Networth.html",
    "title": "Class Networth | sportradar.livedata.sdk",
    "keywords": "Class Networth Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types Assembly Sportradar.LiveData.Sdk.dll Networth [Serializable] public class Networth Inheritance object Networth Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties MapNr map number public int MapNr { get; } Property Value int T1 t1 public int T1 { get; } Property Value int T2 t2 public int T2 { get; } Property Value int Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.PitchersStatsTotal.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.PitchersStatsTotal.html",
    "title": "Class PitchersStatsTotal | sportradar.livedata.sdk",
    "keywords": "Class PitchersStatsTotal Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class PitchersStatsTotal Inheritance object PitchersStatsTotal Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties PlayerStats public PlayerStats[] PlayerStats { get; } Property Value PlayerStats[] Side public Team Side { get; } Property Value Team Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.PlayerStatistics.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.PlayerStatistics.html",
    "title": "Class PlayerStatistics | sportradar.livedata.sdk",
    "keywords": "Class PlayerStatistics Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class PlayerStatistics Inheritance object PlayerStatistics Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields EVENT_TYPE public static int EVENT_TYPE Field Value int Properties AwayBattersStatsTotal public string AwayBattersStatsTotal { get; } Property Value string AwayPitchersStatsTotal public string AwayPitchersStatsTotal { get; } Property Value string AwayPlayerStatsOt public string AwayPlayerStatsOt { get; } Property Value string AwayPlayerStatsP1 public string AwayPlayerStatsP1 { get; } Property Value string AwayPlayerStatsP2 public string AwayPlayerStatsP2 { get; } Property Value string AwayPlayerStatsP3 public string AwayPlayerStatsP3 { get; } Property Value string AwayPlayerStatsP4 public string AwayPlayerStatsP4 { get; } Property Value string AwayPlayerStatsTotal public string AwayPlayerStatsTotal { get; } Property Value string HomeBattersStatsTotal public string HomeBattersStatsTotal { get; } Property Value string HomePitchersStatsTotal public string HomePitchersStatsTotal { get; } Property Value string HomePlayerStatsOt public string HomePlayerStatsOt { get; } Property Value string HomePlayerStatsP1 public string HomePlayerStatsP1 { get; } Property Value string HomePlayerStatsP2 public string HomePlayerStatsP2 { get; } Property Value string HomePlayerStatsP3 public string HomePlayerStatsP3 { get; } Property Value string HomePlayerStatsP4 public string HomePlayerStatsP4 { get; } Property Value string HomePlayerStatsTotal public string HomePlayerStatsTotal { get; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.PlayerStats.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.PlayerStats.html",
    "title": "Class PlayerStats | sportradar.livedata.sdk",
    "keywords": "Class PlayerStats Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class PlayerStats Inheritance object PlayerStats Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Pid public long Pid { get; } Property Value long Stats public Stats[] Stats { get; } Property Value Stats[] Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.Score.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.Score.html",
    "title": "Class Score | sportradar.livedata.sdk",
    "keywords": "Class Score Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types Assembly Sportradar.LiveData.Sdk.dll Score [Serializable] public class Score Inheritance object Score Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties SubScore public Score SubScore { get; } Property Value Score Team1 public double Team1 { get; } Property Value double Team2 public double Team2 { get; } Property Value double Type public string Type { get; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.Scout.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.Scout.html",
    "title": "Class Scout | sportradar.livedata.sdk",
    "keywords": "Class Scout Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types Assembly Sportradar.LiveData.Sdk.dll Scout [Serializable] public class Scout Inheritance object Scout Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Id Id public int Id { get; } Property Value int Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.ScoutEvent.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.ScoutEvent.html",
    "title": "Class ScoutEvent | sportradar.livedata.sdk",
    "keywords": "Class ScoutEvent Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types Assembly Sportradar.LiveData.Sdk.dll Scout event like a card, corner kick, half time, penalty, etc. [Serializable] public class ScoutEvent Inheritance object ScoutEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties ActualMatchStatistics public string ActualMatchStatistics { get; } Property Value string Assists Assists public int? Assists { get; } Property Value int? AtBatNumber public int? AtBatNumber { get; } Property Value int? AtBatPitchNumber public int? AtBatPitchNumber { get; } Property Value int? AttackingPlayers public string AttackingPlayers { get; } Property Value string Automatic Identifies whether event was automatically generated automatically or not. public int? Automatic { get; } Property Value int? Remarks Probably not useful. AwayPlayerStats public string AwayPlayerStats { get; } Property Value string AwayPlayerStatsDef public string AwayPlayerStatsDef { get; } Property Value string AwayPlayerStatsOt [Obsolete(\"Moved to PlayerStatistics.\")] public string AwayPlayerStatsOt { get; } Property Value string AwayPlayerStatsP1 [Obsolete(\"Moved to PlayerStatistics.\")] public string AwayPlayerStatsP1 { get; } Property Value string AwayPlayerStatsP2 [Obsolete(\"Moved to PlayerStatistics.\")] public string AwayPlayerStatsP2 { get; } Property Value string AwayPlayerStatsP3 [Obsolete(\"Moved to PlayerStatistics.\")] public string AwayPlayerStatsP3 { get; } Property Value string AwayPlayerStatsP4 [Obsolete(\"Moved to PlayerStatistics.\")] public string AwayPlayerStatsP4 { get; } Property Value string AwayPlayerStatsPass public string AwayPlayerStatsPass { get; } Property Value string AwayPlayerStatsRec public string AwayPlayerStatsRec { get; } Property Value string AwayPlayerStatsRush public string AwayPlayerStatsRush { get; } Property Value string AwayPlayerStatsTotal [Obsolete(\"Moved to PlayerStatistics.\")] public string AwayPlayerStatsTotal { get; } Property Value string AwayPlayers public string AwayPlayers { get; } Property Value string AwayTeamStats public string AwayTeamStats { get; } Property Value string AwayTeamStatsOt [Obsolete(\"Moved to TeamStatistics.\")] public string AwayTeamStatsOt { get; } Property Value string AwayTeamStatsP1 [Obsolete(\"Moved to TeamStatistics.\")] public string AwayTeamStatsP1 { get; } Property Value string AwayTeamStatsP2 [Obsolete(\"Moved to TeamStatistics.\")] public string AwayTeamStatsP2 { get; } Property Value string AwayTeamStatsP3 [Obsolete(\"Moved to TeamStatistics.\")] public string AwayTeamStatsP3 { get; } Property Value string AwayTeamStatsP4 [Obsolete(\"Moved to TeamStatistics.\")] public string AwayTeamStatsP4 { get; } Property Value string AwayTeamStatsTotal [Obsolete(\"Moved to TeamStatistics.\")] public string AwayTeamStatsTotal { get; } Property Value string AwayTimeOnCourt public string AwayTimeOnCourt { get; } Property Value string AwayTimeOnIce public string AwayTimeOnIce { get; } Property Value string BallNumber Ball number public string BallNumber { get; } Property Value string BallSpotting Ball spotting public bool? BallSpotting { get; } Property Value bool? Balls Number of balls. public int? Balls { get; } Property Value int? BaronKills Baron kills public int BaronKills { get; } Property Value int BaseInfo Base info. public string BaseInfo { get; } Property Value string BatBallAngle Gets the angle of the ball, relative from the ground, as the ball leaves the bat public double? BatBallAngle { get; } Property Value double? The angle of the ball, relative from the ground, as the ball leaves the bat BatBallDirection Gets the direction of the ball as it leaves the bat public double? BatBallDirection { get; } Property Value double? The direction of the ball as it leaves the bat Remarks -45 = left field bounds, 45 = right field bounds, 0 = straight forward BatBallDistance public double? BatBallDistance { get; } Property Value double? BatBallSpeed Gets the speed at which the ball leaves the bat, mph public double? BatBallSpeed { get; } Property Value double? The speed at which the ball leaves the bat, mph BatBallX public double? BatBallX { get; } Property Value double? BatBallY public double? BatBallY { get; } Property Value double? BattingAverages Gets the batting averages. public string BattingAverages { get; } Property Value string The batting averages. Behinds Gets the behinds public string Behinds { get; } Property Value string The behinds BlockedBy public string BlockedBy { get; } Property Value string BreakScore Break score public string BreakScore { get; } Property Value string Remarks Used in snooker CaughtBy public string CaughtBy { get; } Property Value string CausedBy public string CausedBy { get; } Property Value string ChampionDamage public int? ChampionDamage { get; } Property Value int? Cloud public string Cloud { get; } Property Value string ConversionType Gets the type of the conversion. public int ConversionType { get; } Property Value int The type of the conversion. CorrectedFrom Corrected from, used with score correction event public int? CorrectedFrom { get; } Property Value int? CorrectedTo Corrected to, used with score correction event public int? CorrectedTo { get; } Property Value int? Damage public int? Damage { get; } Property Value int? Deaths Deaths public int? Deaths { get; } Property Value int? DefensedBy public string DefensedBy { get; } Property Value string Denies Denies public int? Denies { get; } Property Value int? Direction public string Direction { get; } Property Value string DismissalsInInnings Dismissals in innings public int? DismissalsInInnings { get; } Property Value int? DoubleKills Double kills public int DoubleKills { get; } Property Value int DownedBy public string DownedBy { get; } Property Value string DragonKills Dragon kills public int DragonKills { get; } Property Value int DragonType public string DragonType { get; } Property Value string DriveInfoStatus public string DriveInfoStatus { get; } Property Value string DrivePlayInfo public string DrivePlayInfo { get; } Property Value string EarlyBetstartType EarlyBetstartType public int? EarlyBetstartType { get; } Property Value int? EndScore End score public string EndScore { get; } Property Value string ErrorType public string ErrorType { get; } Property Value string Errors Number of errors. public int? Errors { get; } Property Value int? ErrorsAway Errors away public int? ErrorsAway { get; } Property Value int? ErrorsHome Errors home public int? ErrorsHome { get; } Property Value int? Experience Experience public int? Experience { get; } Property Value int? ExtraInfo Integer value, meaning of this attribute depends on event type: 30 (score): 0 or -1 = not specified, 1 = penalty, 2 = own goal, 3 = header 1019 (cancel goal): 0 or -1 = not specified, 1 = off side, 2 = foul, 3 = incorrect entry 1013 (match status): match status enumeration 1025 (tennis full score): tennis point type – 0=standard, 1=ace, 2=double fault opponent 158 (injury): Player still injured – 1=yes, 0=no 165 (attendance): Attendance 1039 (manual time adjustment): Number of seconds adjusted. Can be both a positive and a negative integer 1044 (event deleted): Id of event that was deleted 1037 (basketball points): Number of points scored – 1, 2 or 3 1038 (basketball points missed): Point attempt missed – 1, 2 or 3 (points) 1046 (volleyball full score): volleyball point type – 0=standard, 1=ace, 2=service error 1056 (number of free throws): Number of free throws 1036 (time start stop): 1 = time is running, 0 = time is stopped 43 (suspensions): Number of minutes player is suspended for 90 (injury time): Number of minutes injury time added 1082 (corner markets): 1 = safe to accept bets, 0 = not safe 1083 (booking markets): 1 = safe to accept bets, 0 = not safe 1002 (penalty shootout): -1=penalty not taken, 1=penalty scored, 0=penalty missed 1060 (direct free kick): -1 = not taken, 0 = miss, 1 = score 1102 (coverage status): 0 - match covered, 1 - coverage abandoned (used when abandoning coverage after a match has started), 2 - match will not be covered (used when we are unable to cover a match that we were supposed to cover) All counter event types (throw in count etc.): Number of events of this type for team specified by “side\" attribute public long? ExtraInfo { get; } Property Value long? ExtraInfoBaseball Extra info baseball. public string ExtraInfoBaseball { get; } Property Value string ExtraInfoBasketball Extra info for basketball game public string ExtraInfoBasketball { get; } Property Value string ExtraInfoBowls Extra info for bowls game public string ExtraInfoBowls { get; } Property Value string ExtraInfoCricket Extra info for cricket game public string ExtraInfoCricket { get; } Property Value string ExtraInfoCsGo Extra info for counter strike global offensive public string ExtraInfoCsGo { get; } Property Value string ExtraInfoDarts Extra info for dart game public string ExtraInfoDarts { get; } Property Value string ExtraInfoFootball Extra info for football game public string ExtraInfoFootball { get; } Property Value string ExtraInfoHandball Extra info for handball game public string ExtraInfoHandball { get; } Property Value string ExtraInfoIceHockey Extra info ice hockey. public string ExtraInfoIceHockey { get; } Property Value string ExtraInfoKabaddi public string ExtraInfoKabaddi { get; } Property Value string ExtraInfoMoba Extra info moba public string ExtraInfoMoba { get; } Property Value string ExtraInfoSnooker Extra info for snooker game public string ExtraInfoSnooker { get; } Property Value string ExtraInfoSoccer public string ExtraInfoSoccer { get; } Property Value string ExtraInfoTennis public string ExtraInfoTennis { get; } Property Value string ExtraInfoVolleyball Extra info for volleyball game public string ExtraInfoVolleyball { get; } Property Value string ExtraInfoWaterpolo public string ExtraInfoWaterpolo { get; } Property Value string FieldGoalDistance public string FieldGoalDistance { get; } Property Value string FieldingPlayers public string FieldingPlayers { get; } Property Value string FirstBaseLoaded First base loaded public bool? FirstBaseLoaded { get; } Property Value bool? FirstBasePlayer public long? FirstBasePlayer { get; } Property Value long? FoulTypeDescriptor public int? FoulTypeDescriptor { get; } Property Value int? FoulTypeQualifier public string FoulTypeQualifier { get; } Property Value string FrameNumber Frame number public int? FrameNumber { get; } Property Value int? Remarks Used in snooker FrameScore Frame score public string FrameScore { get; } Property Value string Remarks Used in snooker FreeKickReason public int FreeKickReason { get; } Property Value int FumbledBy public string FumbledBy { get; } Property Value string GameNumber In tennis, which game number in the set. public int? GameNumber { get; } Property Value int? GameScore In tennis, the game score. public string GameScore { get; } Property Value string Goals Gets the goals public string Goals { get; } Property Value string The goals HappenedAt public long? HappenedAt { get; } Property Value long? HealthRemaining public int? HealthRemaining { get; } Property Value int? HeroId Hero Id public int? HeroId { get; } Property Value int? HeroName Hero Name public string HeroName { get; } Property Value string HeroesAliveAway Level public int? HeroesAliveAway { get; } Property Value int? HeroesAliveHome Heroes alive home public int? HeroesAliveHome { get; } Property Value int? HitsAway Hits away public int? HitsAway { get; } Property Value int? HitsHome Hits home public int? HitsHome { get; } Property Value int? HomePlayerStats public string HomePlayerStats { get; } Property Value string HomePlayerStatsDef public string HomePlayerStatsDef { get; } Property Value string HomePlayerStatsOt [Obsolete(\"Moved to PlayerStatistics.\")] public string HomePlayerStatsOt { get; } Property Value string HomePlayerStatsP1 [Obsolete(\"Moved to PlayerStatistics.\")] public string HomePlayerStatsP1 { get; } Property Value string HomePlayerStatsP2 [Obsolete(\"Moved to PlayerStatistics.\")] public string HomePlayerStatsP2 { get; } Property Value string HomePlayerStatsP3 [Obsolete(\"Moved to PlayerStatistics.\")] public string HomePlayerStatsP3 { get; } Property Value string HomePlayerStatsP4 [Obsolete(\"Moved to PlayerStatistics.\")] public string HomePlayerStatsP4 { get; } Property Value string HomePlayerStatsPass public string HomePlayerStatsPass { get; } Property Value string HomePlayerStatsRec public string HomePlayerStatsRec { get; } Property Value string HomePlayerStatsRush public string HomePlayerStatsRush { get; } Property Value string HomePlayerStatsTotal [Obsolete(\"Moved to PlayerStatistics.\")] public string HomePlayerStatsTotal { get; } Property Value string HomePlayers public string HomePlayers { get; } Property Value string HomeRunsAway public int? HomeRunsAway { get; } Property Value int? HomeRunsHome public int? HomeRunsHome { get; } Property Value int? HomeTeamStats public string HomeTeamStats { get; } Property Value string HomeTeamStatsOt [Obsolete(\"Moved to TeamStatistics.\")] public string HomeTeamStatsOt { get; } Property Value string HomeTeamStatsP1 [Obsolete(\"Moved to TeamStatistics.\")] public string HomeTeamStatsP1 { get; } Property Value string HomeTeamStatsP2 [Obsolete(\"Moved to TeamStatistics.\")] public string HomeTeamStatsP2 { get; } Property Value string HomeTeamStatsP3 [Obsolete(\"Moved to TeamStatistics.\")] public string HomeTeamStatsP3 { get; } Property Value string HomeTeamStatsP4 [Obsolete(\"Moved to TeamStatistics.\")] public string HomeTeamStatsP4 { get; } Property Value string HomeTeamStatsTotal [Obsolete(\"Moved to TeamStatistics.\")] public string HomeTeamStatsTotal { get; } Property Value string HomeTimeOnCourt public string HomeTimeOnCourt { get; } Property Value string HomeTimeOnIce public string HomeTimeOnIce { get; } Property Value string Humidity public int? Humidity { get; } Property Value int? Id Unique event id. public long Id { get; } Property Value long InHole public long? InHole { get; } Property Value long? Info Text description of event. public string Info { get; } Property Value string InhibitorKills Inhibitor kills public int InhibitorKills { get; } Property Value int InjuryPlayer public string InjuryPlayer { get; } Property Value string InjuryReturn public string InjuryReturn { get; } Property Value string InningHalf Inning half. public Inning? InningHalf { get; } Property Value Inning? InningsScore Innings scores public InningScore[] InningsScore { get; } Property Value InningScore[] IntendedReceiver public int? IntendedReceiver { get; } Property Value int? InterceptedBy public string InterceptedBy { get; } Property Value string Inventory public string Inventory { get; } Property Value string Item public int? Item { get; } Property Value int? ItemName Item name public string ItemName { get; } Property Value string KickedBy public string KickedBy { get; } Property Value string Kills Kills public int? Kills { get; } Property Value int? KillsAway Kills away public int? KillsAway { get; } Property Value int? KillsHome Kills home public int? KillsHome { get; } Property Value int? LastHits Last hits public int? LastHits { get; } Property Value int? LastStroke public string LastStroke { get; } Property Value string LegScore Used in darts Leg (game) score public string LegScore { get; } Property Value string Level Level public int? Level { get; } Property Value int? MapName Map name public string MapName { get; } Property Value string MapNumber Map number public int? MapNumber { get; } Property Value int? MapScore Map score public string MapScore { get; } Property Value string MatchScore In tennis, the match score. public string MatchScore { get; } Property Value string MatchStatus The match status public string MatchStatus { get; } Property Value string MatchTime Match time, mm:ss (e.g. 40:00 or 00:00). public string MatchTime { get; } Property Value string MaxBreakFrame public int MaxBreakFrame { get; } Property Value int MonsterType public string MonsterType { get; } Property Value string MuffedBy public string MuffedBy { get; } Property Value string NetWorth Net worth public int? NetWorth { get; } Property Value int? NextBatter public int? NextBatter { get; } Property Value int? NumberOfShots public string NumberOfShots { get; } Property Value string OnDeck public long? OnDeck { get; } Property Value long? Outs Number of outs. public int? Outs { get; } Property Value int? PassedBy public string PassedBy { get; } Property Value string PenaltyDistance public string PenaltyDistance { get; } Property Value string PenaltyNoPlay public string PenaltyNoPlay { get; } Property Value string PenaltyReason public string PenaltyReason { get; } Property Value string PentaKills Penta kills public int PentaKills { get; } Property Value int PeriodNumber Period number of match. public int? PeriodNumber { get; } Property Value int? PeriodScore Period score. public string PeriodScore { get; } Property Value string PitchCount Pitch count. public int? PitchCount { get; } Property Value int? PitchSpeed Gets how fast the ball was pitched in MPH numeric values public double? PitchSpeed { get; } Property Value double? The pitch speed. PitchType Gets the type of how was the ball pitched public int? PitchType { get; } Property Value int? The type of the pitch. PitchingSubstitution public int? PitchingSubstitution { get; } Property Value int? PlacedAt public string PlacedAt { get; } Property Value string Player1Id Sportradar player id for player 1 connected to this event. The meaning of this attribute depends on event type: 30 (goal): Goal scorer 50, 40, 45 (red, yellow, yellow/red card): Who got card 60 (substitution): Outgoing player 154 (corner): Who took corner 161 (penalty awarded): Who caused penalty – offender 155, 156 (shot on/off target): Who shot 153 (off side): Who was off side 158 (injury): Who was injured public int? Player1Id { get; } Property Value int? Player2Id Sportradar player id for player 2 connected to this event. The meaning of this attribute depends on event type: 60 (substitution): Incoming player 161 (penalty awarded): Who was awarded a penalty public int? Player2Id { get; } Property Value int? Player3Id Sportradar player id for player 3 connected to this event. The meaning of this attribute depends on event type: 30 (goal): player3 = Second assisting player public int? Player3Id { get; } Property Value int? Player4Id Sportradar player id for player 3 connected to this event. The meaning of this attribute depends on event type: 30 (goal): player3 = Second assisting player public int? Player4Id { get; } Property Value int? PlayerStatistics public PlayerStatistics PlayerStatistics { get; } Property Value PlayerStatistics PointOutcome public string PointOutcome { get; } Property Value string PointsRemaining public int? PointsRemaining { get; } Property Value int? PointsUntilSnookerNeeded Points until snooker needed public int? PointsUntilSnookerNeeded { get; } Property Value int? PosX Horizontal position on pitch, posx being a number from 0 to 100. The reference point 0 is at home teams goal. public int? PosX { get; } Property Value int? PosY Vertical position on pitch, posy being a number from 0 to 100. The reference point 0 is on top of pitch when home teams goal is on the left hand side. public int? PosY { get; } Property Value int? PositionPlayerPitching public bool PositionPlayerPitching { get; } Property Value bool PossibleBreak Possible break public int? PossibleBreak { get; } Property Value int? PreliminaryMatchStatistics public string PreliminaryMatchStatistics { get; } Property Value string PrimaryShotType public string PrimaryShotType { get; } Property Value string PuntDistance public string PuntDistance { get; } Property Value string PushedBy public string PushedBy { get; } Property Value string QuadraKills Quadra kills public int QuadraKills { get; } Property Value int RanOutOfBoundsAt public string RanOutOfBoundsAt { get; } Property Value string ReceivedAt public string ReceivedAt { get; } Property Value string ReceivedBy public string ReceivedBy { get; } Property Value string RecoveredAt public string RecoveredAt { get; } Property Value string RecoveredBy public string RecoveredBy { get; } Property Value string Reds public int? Reds { get; } Property Value int? RefUuId public string RefUuId { get; } Property Value string RefsTime public long? RefsTime { get; } Property Value long? RemainingTimeInPeriod Remaining time of match, mm:ss public string RemainingTimeInPeriod { get; } Property Value string RoundNumber Round number public int? RoundNumber { get; } Property Value int? RoundScore public string RoundScore { get; } Property Value string Runs Number of runs. public int? Runs { get; } Property Value int? RunsAway Runs away public int? RunsAway { get; } Property Value int? RunsHome Runs home public int? RunsHome { get; } Property Value int? RunsInInnings Runs in innings public int? RunsInInnings { get; } Property Value int? RushSpeed public string RushSpeed { get; } Property Value string RushedBy public string RushedBy { get; } Property Value string SackedBy public string SackedBy { get; } Property Value string SafetyBy public string SafetyBy { get; } Property Value string ScoreTypeQualifier public string ScoreTypeQualifier { get; } Property Value string ScorerNotConfirmed public int? ScorerNotConfirmed { get; } Property Value int? SecondBaseLoaded Second base loaded public bool? SecondBaseLoaded { get; } Property Value bool? SecondBasePlayer public long? SecondBasePlayer { get; } Property Value long? SecondScoreType Seconds score type public int? SecondScoreType { get; } Property Value int? SecondaryShotType public string SecondaryShotType { get; } Property Value string Server Serving team public Team? Server { get; } Property Value Team? ServerTime Server time of event, time stamp in UTC. public DateTime ServerTime { get; } Property Value DateTime SetNumber In tennis, which set number in the match. public int? SetNumber { get; } Property Value int? SetScore In tennis, the set score. public string SetScore { get; } Property Value string ShotDistance public double? ShotDistance { get; } Property Value double? ShotProjectedGoalRate public double? ShotProjectedGoalRate { get; } Property Value double? ShotRatingCategory public int? ShotRatingCategory { get; } Property Value int? ShotSequence public string ShotSequence { get; } Property Value string ShotSpeed public double? ShotSpeed { get; } Property Value double? ShotType public int? ShotType { get; } Property Value int? Side Which side had an event - home, away or none. public Team Side { get; } Property Value Team Situation public string Situation { get; } Property Value string SnappedBy public string SnappedBy { get; } Property Value string Spin public string Spin { get; } Property Value string Spot public string Spot { get; } Property Value string SpottedAt public string SpottedAt { get; } Property Value string StadiumType public string StadiumType { get; } Property Value string Statistics public Statistics Statistics { get; } Property Value Statistics Strikes Number of strikes. public int? Strikes { get; } Property Value int? StrokeType public string StrokeType { get; } Property Value string Structure public string Structure { get; } Property Value string SupervisorAction public int? SupervisorAction { get; } Property Value int? TackledBy public string TackledBy { get; } Property Value string TeamStatistics public TeamStatistics TeamStatistics { get; } Property Value TeamStatistics Temperature public int? Temperature { get; } Property Value int? ThirdBaseLoaded Third loaded public bool? ThirdBaseLoaded { get; } Property Value bool? ThirdBasePlayer public long? ThirdBasePlayer { get; } Property Value long? ThrownTo public string ThrownTo { get; } Property Value string TippedTo public int? TippedTo { get; } Property Value int? TotalPitchCount public int? TotalPitchCount { get; } Property Value int? TotalYardsGained public int? TotalYardsGained { get; } Property Value int? TouchBackAt public string TouchBackAt { get; } Property Value string TouchdownType Gets the type of the touchdown. public int TouchdownType { get; } Property Value int The type of the touchdown. TowerKills Tower kills public int TowerKills { get; } Property Value int TripleKills Triple kills public int TripleKills { get; } Property Value int TurfType public string TurfType { get; } Property Value string Type Each event type has an id (e.g. yellow card 40, event deleted 1044, early bet status 1091, etc.). See LiveData documentation to see which event types are supported for each sport New event types can be offered in the future. [Obsolete(\"Please use the TypeId instead and map TypeId to event type based on sport in according to documentation\")] public EventType Type { get; } Property Value EventType TypeId Each event type has an id (e.g. yellow card 40, event deleted 1044, early bet status 1091, etc.). See LiveScout documentation to see which event types are supported for each sport. New event types can be offered in the future. public int TypeId { get; } Property Value int UnavailablePlayersAway public string UnavailablePlayersAway { get; } Property Value string UnavailablePlayersHome public string UnavailablePlayersHome { get; } Property Value string UuId public string UuId { get; } Property Value string WardsPlaced public int? WardsPlaced { get; } Property Value int? WeaponId Weapon id public int? WeaponId { get; } Property Value int? WeaponName Weapon name public string WeaponName { get; } Property Value string WindChill public int? WindChill { get; } Property Value int? WindDirection public string WindDirection { get; } Property Value string WindSpeed public int? WindSpeed { get; } Property Value int? YardLine public string YardLine { get; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.ScoutInfo.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.ScoutInfo.html",
    "title": "Class ScoutInfo | sportradar.livedata.sdk",
    "keywords": "Class ScoutInfo Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types Assembly Sportradar.LiveData.Sdk.dll Contains basic information about the match. [Serializable] public class ScoutInfo Inheritance object ScoutInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Remarks Could be that this information is only of interest for the flash scout client. Properties Header Caption text. public string Header { get; } Property Value string Link Whether this is URL or not. public bool? Link { get; } Property Value bool? Order Sort order public int Order { get; } Property Value int Value Info text. If Link is true then this is URL. public string Value { get; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.Statistics.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.Statistics.html",
    "title": "Class Statistics | sportradar.livedata.sdk",
    "keywords": "Class Statistics Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class Statistics Inheritance object Statistics Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties BattersStatsTotal public BattersStatsTotal BattersStatsTotal { get; } Property Value BattersStatsTotal PitchersStatsTotal public PitchersStatsTotal PitchersStatsTotal { get; } Property Value PitchersStatsTotal TeamStats public TeamStats[] TeamStats { get; } Property Value TeamStats[] Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.Stats.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.Stats.html",
    "title": "Class Stats | sportradar.livedata.sdk",
    "keywords": "Class Stats Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class Stats Inheritance object Stats Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Name public string Name { get; } Property Value string Value public string Value { get; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.SubTeam.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.SubTeam.html",
    "title": "Class SubTeam | sportradar.livedata.sdk",
    "keywords": "Class SubTeam Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types Assembly Sportradar.LiveData.Sdk.dll Sub team [Serializable] public class SubTeam Inheritance object SubTeam Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id Id public int Id { get; } Property Value int Name Name public string Name { get; } Property Value string Parent Parent public int Parent { get; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.TeamStatistics.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.TeamStatistics.html",
    "title": "Class TeamStatistics | sportradar.livedata.sdk",
    "keywords": "Class TeamStatistics Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class TeamStatistics Inheritance object TeamStatistics Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields EVENT_TYPE public static int EVENT_TYPE Field Value int Properties AwayTeamStatsI1 public string AwayTeamStatsI1 { get; } Property Value string AwayTeamStatsI2 public string AwayTeamStatsI2 { get; } Property Value string AwayTeamStatsI3 public string AwayTeamStatsI3 { get; } Property Value string AwayTeamStatsI4 public string AwayTeamStatsI4 { get; } Property Value string AwayTeamStatsI5 public string AwayTeamStatsI5 { get; } Property Value string AwayTeamStatsI6 public string AwayTeamStatsI6 { get; } Property Value string AwayTeamStatsI7 public string AwayTeamStatsI7 { get; } Property Value string AwayTeamStatsI8 public string AwayTeamStatsI8 { get; } Property Value string AwayTeamStatsI9 public string AwayTeamStatsI9 { get; } Property Value string AwayTeamStatsIe public string AwayTeamStatsIe { get; } Property Value string AwayTeamStatsOt public string AwayTeamStatsOt { get; } Property Value string AwayTeamStatsP1 public string AwayTeamStatsP1 { get; } Property Value string AwayTeamStatsP2 public string AwayTeamStatsP2 { get; } Property Value string AwayTeamStatsP3 public string AwayTeamStatsP3 { get; } Property Value string AwayTeamStatsP4 public string AwayTeamStatsP4 { get; } Property Value string AwayTeamStatsTotal public string AwayTeamStatsTotal { get; } Property Value string HomeTeamStatsI1 public string HomeTeamStatsI1 { get; } Property Value string HomeTeamStatsI2 public string HomeTeamStatsI2 { get; } Property Value string HomeTeamStatsI3 public string HomeTeamStatsI3 { get; } Property Value string HomeTeamStatsI4 public string HomeTeamStatsI4 { get; } Property Value string HomeTeamStatsI5 public string HomeTeamStatsI5 { get; } Property Value string HomeTeamStatsI6 public string HomeTeamStatsI6 { get; } Property Value string HomeTeamStatsI7 public string HomeTeamStatsI7 { get; } Property Value string HomeTeamStatsI8 public string HomeTeamStatsI8 { get; } Property Value string HomeTeamStatsI9 public string HomeTeamStatsI9 { get; } Property Value string HomeTeamStatsIe public string HomeTeamStatsIe { get; } Property Value string HomeTeamStatsOt public string HomeTeamStatsOt { get; } Property Value string HomeTeamStatsP1 public string HomeTeamStatsP1 { get; } Property Value string HomeTeamStatsP2 public string HomeTeamStatsP2 { get; } Property Value string HomeTeamStatsP3 public string HomeTeamStatsP3 { get; } Property Value string HomeTeamStatsP4 public string HomeTeamStatsP4 { get; } Property Value string HomeTeamStatsTotal public string HomeTeamStatsTotal { get; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.TeamStats.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.TeamStats.html",
    "title": "Class TeamStats | sportradar.livedata.sdk",
    "keywords": "Class TeamStats Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class TeamStats Inheritance object TeamStats Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Side public Team Side { get; } Property Value Team Stats public Stats[] Stats { get; } Property Value Stats[] Type public TeamStatsType Type { get; } Property Value TeamStatsType Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types.html",
    "title": "Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout.Types Classes Attribute Attribute BattersStatsTotal Behinds Behinds Court Court FeedPagination Contains properties that are added to MatchHeader when ScoutFeedType.FULL_PAGINATED is received. Format Format Goals Goals Gold gold InningScore Inning score Innings Innings Jersey Jersey MatchHeader Basic match information specifying match id, teams playing, bet status, feed type and other info. MatchProperty Match Property MatchRole Match role MatchTeam Match Team Networth Networth PitchersStatsTotal PlayerStatistics PlayerStats Score Score Scout Scout ScoutEvent Scout event like a card, corner kick, half time, penalty, etc. ScoutInfo Contains basic information about the match. Statistics Stats SubTeam Sub team TeamStatistics TeamStats"
  },
  "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.html": {
    "href": "api/Sportradar.LiveData.Sdk.FeedProviders.LiveScout.html",
    "title": "Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.FeedProviders.LiveScout Classes LiveScoutFeedProvider"
  },
  "api/Sportradar.LiveData.Sdk.LoggerExtensions.DefaultLogMessageConverter.html": {
    "href": "api/Sportradar.LiveData.Sdk.LoggerExtensions.DefaultLogMessageConverter.html",
    "title": "Class DefaultLogMessageConverter | sportradar.livedata.sdk",
    "keywords": "Class DefaultLogMessageConverter Namespace Sportradar.LiveData.Sdk.LoggerExtensions Assembly Sportradar.LiveData.Sdk.dll public class DefaultLogMessageConverter : PatternLayoutConverter Inheritance object PatternConverter PatternLayoutConverter DefaultLogMessageConverter Inherited Members PatternLayoutConverter.Convert(TextWriter, object) PatternLayoutConverter.IgnoresException PatternConverter.SetNext(PatternConverter) PatternConverter.Format(TextWriter, object) PatternConverter.SpacePad(TextWriter, int) PatternConverter.WriteDictionary(TextWriter, ILoggerRepository, IDictionary) PatternConverter.WriteDictionary(TextWriter, ILoggerRepository, IDictionaryEnumerator) PatternConverter.WriteObject(TextWriter, ILoggerRepository, object) PatternConverter.Next PatternConverter.FormattingInfo PatternConverter.Option PatternConverter.Properties object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DefaultLogMessageConverter() public DefaultLogMessageConverter() Methods Convert(TextWriter, LoggingEvent) Derived pattern converters must override this method in order to convert conversion specifiers in the correct way. protected override void Convert(TextWriter writer, LoggingEvent logging_event) Parameters writer TextWriter TextWriter that will receive the formatted result. logging_event LoggingEvent"
  },
  "api/Sportradar.LiveData.Sdk.LoggerExtensions.Logging.html": {
    "href": "api/Sportradar.LiveData.Sdk.LoggerExtensions.Logging.html",
    "title": "Class Logging | sportradar.livedata.sdk",
    "keywords": "Class Logging Namespace Sportradar.LiveData.Sdk.LoggerExtensions Assembly Sportradar.LiveData.Sdk.dll public static class Logging Inheritance object Logging Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties NumAppenders public static int NumAppenders { get; } Property Value int Methods Init() public static void Init() OnConfigChanged(object, EventArgs) public static void OnConfigChanged(object sender, EventArgs e) Parameters sender object e EventArgs"
  },
  "api/Sportradar.LiveData.Sdk.LoggerExtensions.State.html": {
    "href": "api/Sportradar.LiveData.Sdk.LoggerExtensions.State.html",
    "title": "Class State | sportradar.livedata.sdk",
    "keywords": "Class State Namespace Sportradar.LiveData.Sdk.LoggerExtensions Assembly Sportradar.LiveData.Sdk.dll public class State Inheritance object State Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors State(string) public State(string state) Parameters state string Methods AlterState(string) public string AlterState(string text) Parameters text string Returns string GetState() public string GetState() Returns string"
  },
  "api/Sportradar.LiveData.Sdk.LoggerExtensions.Utils.html": {
    "href": "api/Sportradar.LiveData.Sdk.LoggerExtensions.Utils.html",
    "title": "Class Utils | sportradar.livedata.sdk",
    "keywords": "Class Utils Namespace Sportradar.LiveData.Sdk.LoggerExtensions Assembly Sportradar.LiveData.Sdk.dll public static class Utils Inheritance object Utils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields LOG_PREFIX public const string LOG_PREFIX = \"log\" Field Value string SEED_SIZE public const int SEED_SIZE = 256 Field Value int Methods GetInitState() public static string GetInitState() Returns string Hash(string) public static string Hash(string text) Parameters text string Returns string"
  },
  "api/Sportradar.LiveData.Sdk.LoggerExtensions.html": {
    "href": "api/Sportradar.LiveData.Sdk.LoggerExtensions.html",
    "title": "Namespace Sportradar.LiveData.Sdk.LoggerExtensions | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.LoggerExtensions Classes DefaultLogMessageConverter Logging State Utils"
  },
  "api/Sportradar.LiveData.Sdk.ProtocolProviders.AbstractProtocolProvider.html": {
    "href": "api/Sportradar.LiveData.Sdk.ProtocolProviders.AbstractProtocolProvider.html",
    "title": "Class AbstractProtocolProvider | sportradar.livedata.sdk",
    "keywords": "Class AbstractProtocolProvider Namespace Sportradar.LiveData.Sdk.ProtocolProviders Assembly Sportradar.LiveData.Sdk.dll public abstract class AbstractProtocolProvider Inheritance object AbstractProtocolProvider Derived LiveScoutProtocolProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AbstractProtocolProvider() public AbstractProtocolProvider() Fields LONG_RUNNING protected static readonly TimeSpan LONG_RUNNING Field Value TimeSpan WAIT_TIME protected static readonly TimeSpan WAIT_TIME Field Value TimeSpan m_until_connected_block protected ManualResetEventSlim m_until_connected_block Field Value ManualResetEventSlim m_until_disconnected_block protected ManualResetEventSlim m_until_disconnected_block Field Value ManualResetEventSlim Properties ClientSchemas protected abstract XmlSchemaSet ClientSchemas { get; set; } Property Value XmlSchemaSet ConnectionProvider public virtual IConnectionProvider ConnectionProvider { get; protected set; } Property Value IConnectionProvider IsStarted public bool IsStarted { get; } Property Value bool LoggerData public virtual ILoggerData LoggerData { get; protected set; } Property Value ILoggerData ProtocolData public virtual IProtocolData ProtocolData { get; protected set; } Property Value IProtocolData ServerSchemas protected abstract XmlSchemaSet ServerSchemas { get; set; } Property Value XmlSchemaSet Methods MyConnectedHandler(DateTime?) protected void MyConnectedHandler(DateTime? time) Parameters time DateTime? MyDisconnectedHandler(DateTime?) protected void MyDisconnectedHandler(DateTime? time) Parameters time DateTime? SendMessageRaw(string, TimeSpan) public void SendMessageRaw(string reply, TimeSpan ttl) Parameters reply string ttl TimeSpan ValidDataCheckNecessary(string, DataReceivedOutcome) public void ValidDataCheckNecessary(string message, ConnectionProviderDelegates.DataReceivedOutcome outcome) Parameters message string outcome ConnectionProviderDelegates.DataReceivedOutcome WaitForConnection() public virtual bool WaitForConnection() Returns bool WaitForConnection(TimeSpan) public virtual bool WaitForConnection(TimeSpan ttl) Parameters ttl TimeSpan Returns bool WaitForDisconnection() public virtual bool WaitForDisconnection() Returns bool WaitForDisconnection(TimeSpan) public virtual bool WaitForDisconnection(TimeSpan ttl) Parameters ttl TimeSpan Returns bool"
  },
  "api/Sportradar.LiveData.Sdk.ProtocolProviders.IProtocolProvider.html": {
    "href": "api/Sportradar.LiveData.Sdk.ProtocolProviders.IProtocolProvider.html",
    "title": "Interface IProtocolProvider | sportradar.livedata.sdk",
    "keywords": "Interface IProtocolProvider Namespace Sportradar.LiveData.Sdk.ProtocolProviders Assembly Sportradar.LiveData.Sdk.dll public interface IProtocolProvider Properties ConnectionProvider The underlying connection provider. IConnectionProvider ConnectionProvider { get; } Property Value IConnectionProvider IsStarted Is the protocol provider running? True when yes, false otherwise. bool IsStarted { get; } Property Value bool LogoutMessage What should be tried to send before we disconnect? string LogoutMessage { get; } Property Value string ProtocolData Settings relevant for the protocol. IProtocolData ProtocolData { get; } Property Value IProtocolData SdkLogger ISdkLogger SdkLogger { get; } Property Value ISdkLogger Type Protocol provider type. ProtocolProviderType Type { get; } Property Value ProtocolProviderType Methods SendMessageRaw(string, TimeSpan) Deliver a protocol unit in string format to the server. void SendMessageRaw(string msg, TimeSpan ttl) Parameters msg string Protocol unit message in string format ttl TimeSpan Time how long the message is valid. if TimeSpan.Zero try delivery just once if TimeSpan.FromMilliseconds(-1), meaning Infinity try an infinite number of times else try ttl time long Exceptions DisconnectedStateException If timeout passes without success RateLimitingException If sending the message would be over the limit SendMessage<T>(T) Deliver a protocol unit to the server (no matter whether it is connected or sure). void SendMessage<T>(T msg) where T : IProtocolRequest Parameters msg T Protocol unit message Type Parameters T Protocol unit type derived from IProtocolRequest Remarks This method might block indefinitely. SendMessage<T>(T, TimeSpan) Deliver a protocol unit to the server. void SendMessage<T>(T msg, TimeSpan ttl) where T : IProtocolRequest Parameters msg T Protocol unit message ttl TimeSpan Time how long the message is valid. if TimeSpan.Zero try delivery just once if TimeSpan.FromMilliseconds(-1), meaning Infinity try an infinite number of times else try ttl time long Type Parameters T Protocol unit type derived from IProtocolRequest Exceptions DisconnectedStateException If timeout passes without success RateLimitingException If sending the message would be over the limit WaitForConnection() Block until the connection is established. bool WaitForConnection() Returns bool true if the connection is established; false if the wait time elapsed and no connection was established Remarks The method might return true and the connection can get broken right after that, so do not assume after that method we are for sure in a \"connected\" state, it might have been just a temporary state. WaitForConnection(TimeSpan) Block for a certain amount of time until the connection is established. bool WaitForConnection(TimeSpan ttl) Parameters ttl TimeSpan Time to wait Returns bool true if the connection is established; false if the wait time elapsed and no connection was established Remarks The method might return true and the connection can get broken right after that, so do not assume after that method we are for sure in a \"connected\" state, it might have been just a temporary state. WaitForDisconnection() Block and wait until the connection is not established anymore. bool WaitForDisconnection() Returns bool WaitForDisconnection(TimeSpan) Block and wait until the connection is not established anymore. bool WaitForDisconnection(TimeSpan wait_time) Parameters wait_time TimeSpan Time to wait before timeout Returns bool Events OnConnected Invoked when the logical connection to the server is established. event ConnectionProviderDelegates.ConnectionDelegate OnConnected Event Type ConnectionProviderDelegates.ConnectionDelegate OnDisconnected Invoked when the logical connection to the server is broken. event ConnectionProviderDelegates.ConnectionDelegate OnDisconnected Event Type ConnectionProviderDelegates.ConnectionDelegate OnInvalidMessageReceived Invoked when a message was received by the lower layer that could not be validated or processed. event ConnectionProviderDelegates.SimpleDataReceivedDelegate OnInvalidMessageReceived Event Type ConnectionProviderDelegates.SimpleDataReceivedDelegate OnParsedMessageReceived Invoked when a new protocol data unit (implementing IProtocolResponse) is received. event ProtocolProviderDelegates.ParsedDataReceivedDelegate OnParsedMessageReceived Event Type ProtocolProviderDelegates.ParsedDataReceivedDelegate"
  },
  "api/Sportradar.LiveData.Sdk.ProtocolProviders.LiveScout.LiveScoutProtocolProvider.html": {
    "href": "api/Sportradar.LiveData.Sdk.ProtocolProviders.LiveScout.LiveScoutProtocolProvider.html",
    "title": "Class LiveScoutProtocolProvider | sportradar.livedata.sdk",
    "keywords": "Class LiveScoutProtocolProvider Namespace Sportradar.LiveData.Sdk.ProtocolProviders.LiveScout Assembly Sportradar.LiveData.Sdk.dll Live scout protocol provider. public class LiveScoutProtocolProvider : AbstractProtocolProvider, IProtocolProvider Inheritance object AbstractProtocolProvider LiveScoutProtocolProvider Implements IProtocolProvider Inherited Members AbstractProtocolProvider.LONG_RUNNING AbstractProtocolProvider.WAIT_TIME AbstractProtocolProvider.m_until_connected_block AbstractProtocolProvider.m_until_disconnected_block AbstractProtocolProvider.ConnectionProvider AbstractProtocolProvider.IsStarted AbstractProtocolProvider.ProtocolData AbstractProtocolProvider.LoggerData AbstractProtocolProvider.SendMessageRaw(string, TimeSpan) AbstractProtocolProvider.ValidDataCheckNecessary(string, ConnectionProviderDelegates.DataReceivedOutcome) AbstractProtocolProvider.WaitForConnection() AbstractProtocolProvider.WaitForConnection(TimeSpan) AbstractProtocolProvider.WaitForDisconnection() AbstractProtocolProvider.WaitForDisconnection(TimeSpan) AbstractProtocolProvider.MyConnectedHandler(DateTime?) AbstractProtocolProvider.MyDisconnectedHandler(DateTime?) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LiveScoutProtocolProvider(IConnectionProvider, IProtocolData, ISdkLogger) public LiveScoutProtocolProvider(IConnectionProvider connection_provider, IProtocolData data, ISdkLogger sdk_logger) Parameters connection_provider IConnectionProvider data IProtocolData sdk_logger ISdkLogger Fields CLIENT_SCHEMA_PATH public const string CLIENT_SCHEMA_PATH = \"./Schema/scout_client_xml.xsd\" Field Value string SERVER_SCHEMA_PATH public const string SERVER_SCHEMA_PATH = \"./Schema/scout_server_xml.xsd\" Field Value string m_max_skew protected TimeSpan m_max_skew Field Value TimeSpan Properties ClientSchemas protected override XmlSchemaSet ClientSchemas { get; set; } Property Value XmlSchemaSet LogoutMessage What should be tried to send before we disconnect? public virtual string LogoutMessage { get; } Property Value string SdkLogger public ISdkLogger SdkLogger { get; } Property Value ISdkLogger ServerSchemas protected override XmlSchemaSet ServerSchemas { get; set; } Property Value XmlSchemaSet Type Protocol provider type. public virtual ProtocolProviderType Type { get; } Property Value ProtocolProviderType Methods LoadClientSchema(string, ISdkLogger) public static XmlSchemaSet LoadClientSchema(string name, ISdkLogger sdk_logger) Parameters name string sdk_logger ISdkLogger Returns XmlSchemaSet LoadServerSchema(string, ISdkLogger) public static XmlSchemaSet LoadServerSchema(string name, ISdkLogger sdk_logger) Parameters name string sdk_logger ISdkLogger Returns XmlSchemaSet LowerConnectedHandler(DateTime?) protected virtual void LowerConnectedHandler(DateTime? time) Parameters time DateTime? LowerDisconnectedHandler(DateTime?) protected virtual void LowerDisconnectedHandler(DateTime? time) Parameters time DateTime? MessageReceivedHandler(IMessageIdentifier, string, DataReceivedOutcome) protected virtual void MessageReceivedHandler(IMessageIdentifier identifier, string msg, ConnectionProviderDelegates.DataReceivedOutcome outcome) Parameters identifier IMessageIdentifier msg string outcome ConnectionProviderDelegates.DataReceivedOutcome ParsedMessageReceivedHandler(IMessageIdentifier, IProtocolResponse) protected virtual void ParsedMessageReceivedHandler(IMessageIdentifier identifier, IProtocolResponse proto) Parameters identifier IMessageIdentifier proto IProtocolResponse SendMessage<T>(T) Deliver a protocol unit to the server (no matter whether it is connected or sure). public virtual void SendMessage<T>(T reply) where T : IProtocolRequest Parameters reply T Type Parameters T Protocol unit type derived from IProtocolRequest Remarks This method might block indefinitely. SendMessage<T>(T, TimeSpan) Deliver a protocol unit to the server. public virtual void SendMessage<T>(T reply, TimeSpan ttl) where T : IProtocolRequest Parameters reply T ttl TimeSpan Time how long the message is valid. if TimeSpan.Zero try delivery just once if TimeSpan.FromMilliseconds(-1), meaning Infinity try an infinite number of times else try ttl time long Type Parameters T Protocol unit type derived from IProtocolRequest Exceptions DisconnectedStateException If timeout passes without success RateLimitingException If sending the message would be over the limit Events OnConnected Invoked when the logical connection to the server is established. public virtual event ConnectionProviderDelegates.ConnectionDelegate OnConnected Event Type ConnectionProviderDelegates.ConnectionDelegate OnDisconnected Invoked when the logical connection to the server is broken. public virtual event ConnectionProviderDelegates.ConnectionDelegate OnDisconnected Event Type ConnectionProviderDelegates.ConnectionDelegate OnInvalidMessageReceived Invoked when a message was received by the lower layer that could not be validated or processed. public virtual event ConnectionProviderDelegates.SimpleDataReceivedDelegate OnInvalidMessageReceived Event Type ConnectionProviderDelegates.SimpleDataReceivedDelegate OnParsedMessageReceived Invoked when a new protocol data unit (implementing IProtocolResponse) is received. public virtual event ProtocolProviderDelegates.ParsedDataReceivedDelegate OnParsedMessageReceived Event Type ProtocolProviderDelegates.ParsedDataReceivedDelegate"
  },
  "api/Sportradar.LiveData.Sdk.ProtocolProviders.LiveScout.LiveScoutUtils.html": {
    "href": "api/Sportradar.LiveData.Sdk.ProtocolProviders.LiveScout.LiveScoutUtils.html",
    "title": "Class LiveScoutUtils | sportradar.livedata.sdk",
    "keywords": "Class LiveScoutUtils Namespace Sportradar.LiveData.Sdk.ProtocolProviders.LiveScout Assembly Sportradar.LiveData.Sdk.dll public static class LiveScoutUtils Inheritance object LiveScoutUtils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DeserializeClientData(string) public static ClientData DeserializeClientData(string msg) Parameters msg string Returns ClientData DeserializeServerData(string) public static ServerData DeserializeServerData(string msg) Parameters msg string Returns ServerData GetRootElementName(string) public static string GetRootElementName(string msg) Parameters msg string Returns string"
  },
  "api/Sportradar.LiveData.Sdk.ProtocolProviders.LiveScout.html": {
    "href": "api/Sportradar.LiveData.Sdk.ProtocolProviders.LiveScout.html",
    "title": "Namespace Sportradar.LiveData.Sdk.ProtocolProviders.LiveScout | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.ProtocolProviders.LiveScout Classes LiveScoutProtocolProvider Live scout protocol provider. LiveScoutUtils"
  },
  "api/Sportradar.LiveData.Sdk.ProtocolProviders.ProtocolProviderDelegates.ParsedDataReceivedDelegate.html": {
    "href": "api/Sportradar.LiveData.Sdk.ProtocolProviders.ProtocolProviderDelegates.ParsedDataReceivedDelegate.html",
    "title": "Delegate ProtocolProviderDelegates.ParsedDataReceivedDelegate | sportradar.livedata.sdk",
    "keywords": "Delegate ProtocolProviderDelegates.ParsedDataReceivedDelegate Namespace Sportradar.LiveData.Sdk.ProtocolProviders Assembly Sportradar.LiveData.Sdk.dll public delegate void ProtocolProviderDelegates.ParsedDataReceivedDelegate(IMessageIdentifier identifier, IProtocolResponse response) Parameters identifier IMessageIdentifier response IProtocolResponse"
  },
  "api/Sportradar.LiveData.Sdk.ProtocolProviders.ProtocolProviderDelegates.html": {
    "href": "api/Sportradar.LiveData.Sdk.ProtocolProviders.ProtocolProviderDelegates.html",
    "title": "Class ProtocolProviderDelegates | sportradar.livedata.sdk",
    "keywords": "Class ProtocolProviderDelegates Namespace Sportradar.LiveData.Sdk.ProtocolProviders Assembly Sportradar.LiveData.Sdk.dll public static class ProtocolProviderDelegates Inheritance object ProtocolProviderDelegates Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Sportradar.LiveData.Sdk.ProtocolProviders.html": {
    "href": "api/Sportradar.LiveData.Sdk.ProtocolProviders.html",
    "title": "Namespace Sportradar.LiveData.Sdk.ProtocolProviders | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.ProtocolProviders Classes AbstractProtocolProvider ProtocolProviderDelegates Interfaces IProtocolProvider Delegates ProtocolProviderDelegates.ParsedDataReceivedDelegate"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.ClientData.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.ClientData.html",
    "title": "Class ClientData | sportradar.livedata.sdk",
    "keywords": "Class ClientData Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client Assembly Sportradar.LiveData.Sdk.dll public class ClientData : IProtocolRequest, IProtocolBase Inheritance object ClientData Implements IProtocolRequest IProtocolBase Derived bookmatch clientversion credential ct login loginname logout match matchlist matchstop matchsubscription matchunsubscription password servertime Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetMessageType() Get type of the message. public string GetMessageType() Returns string A human readable message type."
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.bookmatch.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.bookmatch.html",
    "title": "Class bookmatch | sportradar.livedata.sdk",
    "keywords": "Class bookmatch Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class bookmatch : ClientData, IProtocolRequest, IProtocolBase Inheritance object ClientData bookmatch Implements IProtocolRequest IProtocolBase Inherited Members ClientData.GetMessageType() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties matchid public long matchid { get; set; } Property Value long"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.clientversion.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.clientversion.html",
    "title": "Class clientversion | sportradar.livedata.sdk",
    "keywords": "Class clientversion Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class clientversion : ClientData, IProtocolRequest, IProtocolBase Inheritance object ClientData clientversion Implements IProtocolRequest IProtocolBase Inherited Members ClientData.GetMessageType() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties value public string value { get; set; } Property Value string"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.credential.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.credential.html",
    "title": "Class credential | sportradar.livedata.sdk",
    "keywords": "Class credential Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class credential : ClientData, IProtocolRequest, IProtocolBase Inheritance object ClientData credential Implements IProtocolRequest IProtocolBase Inherited Members ClientData.GetMessageType() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties clientversion public clientversion clientversion { get; set; } Property Value clientversion loginname public loginname loginname { get; set; } Property Value loginname password public password password { get; set; } Property Value password"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.ct.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.ct.html",
    "title": "Class ct | sportradar.livedata.sdk",
    "keywords": "Class ct Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class ct : ClientData, IProtocolRequest, IProtocolBase Inheritance object ClientData ct Implements IProtocolRequest IProtocolBase Inherited Members ClientData.GetMessageType() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client Classes ClientData bookmatch clientversion credential ct login loginname logout match matchlist matchlistMatch matchlistSport matchstop matchsubscription matchunsubscription password servertime Enums matchFeedtype matchlistIncludeavailable"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.login.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.login.html",
    "title": "Class login | sportradar.livedata.sdk",
    "keywords": "Class login Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class login : ClientData, IProtocolRequest, IProtocolBase Inheritance object ClientData login Implements IProtocolRequest IProtocolBase Inherited Members ClientData.GetMessageType() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties credential public credential credential { get; set; } Property Value credential"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.loginname.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.loginname.html",
    "title": "Class loginname | sportradar.livedata.sdk",
    "keywords": "Class loginname Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class loginname : ClientData, IProtocolRequest, IProtocolBase Inheritance object ClientData loginname Implements IProtocolRequest IProtocolBase Inherited Members ClientData.GetMessageType() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties value public string value { get; set; } Property Value string"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.logout.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.logout.html",
    "title": "Class logout | sportradar.livedata.sdk",
    "keywords": "Class logout Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class logout : ClientData, IProtocolRequest, IProtocolBase Inheritance object ClientData logout Implements IProtocolRequest IProtocolBase Inherited Members ClientData.GetMessageType() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.match.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.match.html",
    "title": "Class match | sportradar.livedata.sdk",
    "keywords": "Class match Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class match : ClientData, IProtocolRequest, IProtocolBase Inheritance object ClientData match Implements IProtocolRequest IProtocolBase Inherited Members ClientData.GetMessageType() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties feedtype public matchFeedtype feedtype { get; set; } Property Value matchFeedtype matchid public long matchid { get; set; } Property Value long"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.matchFeedtype.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.matchFeedtype.html",
    "title": "Enum matchFeedtype | sportradar.livedata.sdk",
    "keywords": "Enum matchFeedtype Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum matchFeedtype Fields delta = 0"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.matchlist.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.matchlist.html",
    "title": "Class matchlist | sportradar.livedata.sdk",
    "keywords": "Class matchlist Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class matchlist : ClientData, IProtocolRequest, IProtocolBase Inheritance object ClientData matchlist Implements IProtocolRequest IProtocolBase Inherited Members ClientData.GetMessageType() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Items public object[] Items { get; set; } Property Value object[] hoursback public int hoursback { get; set; } Property Value int hoursforward public int hoursforward { get; set; } Property Value int includeavailable public matchlistIncludeavailable includeavailable { get; set; } Property Value matchlistIncludeavailable includeavailableSpecified public bool includeavailableSpecified { get; set; } Property Value bool"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.matchlistIncludeavailable.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.matchlistIncludeavailable.html",
    "title": "Enum matchlistIncludeavailable | sportradar.livedata.sdk",
    "keywords": "Enum matchlistIncludeavailable Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum matchlistIncludeavailable Fields no = 1 yes = 0"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.matchlistMatch.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.matchlistMatch.html",
    "title": "Class matchlistMatch | sportradar.livedata.sdk",
    "keywords": "Class matchlistMatch Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class matchlistMatch Inheritance object matchlistMatch Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties matchid public long matchid { get; set; } Property Value long matchidSpecified public bool matchidSpecified { get; set; } Property Value bool"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.matchlistSport.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.matchlistSport.html",
    "title": "Class matchlistSport | sportradar.livedata.sdk",
    "keywords": "Class matchlistSport Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class matchlistSport Inheritance object matchlistSport Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties sportid public long sportid { get; set; } Property Value long sportidSpecified public bool sportidSpecified { get; set; } Property Value bool"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.matchstop.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.matchstop.html",
    "title": "Class matchstop | sportradar.livedata.sdk",
    "keywords": "Class matchstop Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class matchstop : ClientData, IProtocolRequest, IProtocolBase Inheritance object ClientData matchstop Implements IProtocolRequest IProtocolBase Inherited Members ClientData.GetMessageType() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties matchid public int matchid { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.matchsubscription.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.matchsubscription.html",
    "title": "Class matchsubscription | sportradar.livedata.sdk",
    "keywords": "Class matchsubscription Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class matchsubscription : ClientData, IProtocolRequest, IProtocolBase Inheritance object ClientData matchsubscription Implements IProtocolRequest IProtocolBase Inherited Members ClientData.GetMessageType() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties match public match[] match { get; set; } Property Value match[]"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.matchunsubscription.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.matchunsubscription.html",
    "title": "Class matchunsubscription | sportradar.livedata.sdk",
    "keywords": "Class matchunsubscription Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class matchunsubscription : ClientData, IProtocolRequest, IProtocolBase Inheritance object ClientData matchunsubscription Implements IProtocolRequest IProtocolBase Inherited Members ClientData.GetMessageType() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties match public match[] match { get; set; } Property Value match[]"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.password.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.password.html",
    "title": "Class password | sportradar.livedata.sdk",
    "keywords": "Class password Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class password : ClientData, IProtocolRequest, IProtocolBase Inheritance object ClientData password Implements IProtocolRequest IProtocolBase Inherited Members ClientData.GetMessageType() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties value public string value { get; set; } Property Value string"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.servertime.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client.servertime.html",
    "title": "Class servertime | sportradar.livedata.sdk",
    "keywords": "Class servertime Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Client Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class servertime : ClientData, IProtocolRequest, IProtocolBase Inheritance object ClientData servertime Implements IProtocolRequest IProtocolBase Inherited Members ClientData.GetMessageType() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.ServerData.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.ServerData.html",
    "title": "Class ServerData | sportradar.livedata.sdk",
    "keywords": "Class ServerData Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll public class ServerData : IProtocolResponse, IProtocolBase Inheritance object ServerData Implements IProtocolResponse IProtocolBase Derived black bookmatch category corners court ct dangerousattacks dbfail event eventconfig events flashconfig freekicks freethrows goalkeepersaves goalkicks info infos injuries kickoffteam lineups login match matchdata matchformat matchlist matchlistupdate matchstop offsides penalties pitchconditions player possession red score serve servertime serverversion shotsblocked shotsofftarget shotsontarget sport status subteam surfacetype suspensions throwins tiebreak tournament user weatherconditions yellow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods GetMessageType() public string GetMessageType() Returns string ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.attacks.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.attacks.html",
    "title": "Class attacks | sportradar.livedata.sdk",
    "keywords": "Class attacks Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class attacks Inheritance object attacks Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties t1 public int t1 { get; set; } Property Value int t2 public int t2 { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.attribute.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.attribute.html",
    "title": "Class attribute | sportradar.livedata.sdk",
    "keywords": "Class attribute Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class attribute Inheritance object attribute Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties type public string type { get; set; } Property Value string typeid public int typeid { get; set; } Property Value int value public string value { get; set; } Property Value string valueid public int valueid { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.attributes.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.attributes.html",
    "title": "Class attributes | sportradar.livedata.sdk",
    "keywords": "Class attributes Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class attributes Inheritance object attributes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties attribute public attribute[] attribute { get; set; } Property Value attribute[]"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.battersstatstotal.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.battersstatstotal.html",
    "title": "Class battersstatstotal | sportradar.livedata.sdk",
    "keywords": "Class battersstatstotal Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class battersstatstotal Inheritance object battersstatstotal Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties playerstats public playerstats[] playerstats { get; set; } Property Value playerstats[] side public battersstatstotalSide side { get; set; } Property Value battersstatstotalSide"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.battersstatstotalSide.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.battersstatstotalSide.html",
    "title": "Enum battersstatstotalSide | sportradar.livedata.sdk",
    "keywords": "Enum battersstatstotalSide Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum battersstatstotalSide Fields away = 1 home = 0"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.behinds.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.behinds.html",
    "title": "Class behinds | sportradar.livedata.sdk",
    "keywords": "Class behinds Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class behinds Inheritance object behinds Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties behinds1 public behinds behinds1 { get; set; } Property Value behinds t1 public int t1 { get; set; } Property Value int t2 public int t2 { get; set; } Property Value int type public string type { get; set; } Property Value string"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.black.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.black.html",
    "title": "Class black | sportradar.livedata.sdk",
    "keywords": "Class black Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class black : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData black Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties t1 public int t1 { get; set; } Property Value int t2 public int t2 { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.bookmatch.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.bookmatch.html",
    "title": "Class bookmatch | sportradar.livedata.sdk",
    "keywords": "Class bookmatch Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class bookmatch : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData bookmatch Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties matchid public long matchid { get; set; } Property Value long matchidSpecified public bool matchidSpecified { get; set; } Property Value bool message public string message { get; set; } Property Value string result public bookmatchResult result { get; set; } Property Value bookmatchResult"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.bookmatchResult.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.bookmatchResult.html",
    "title": "Enum bookmatchResult | sportradar.livedata.sdk",
    "keywords": "Enum bookmatchResult Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum bookmatchResult Fields invalid = 1 valid = 0"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.category.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.category.html",
    "title": "Class category | sportradar.livedata.sdk",
    "keywords": "Class category Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class category : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData category Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties id public int id { get; set; } Property Value int name public string name { get; set; } Property Value string"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.corners.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.corners.html",
    "title": "Class corners | sportradar.livedata.sdk",
    "keywords": "Class corners Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class corners : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData corners Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties t1 public int t1 { get; set; } Property Value int t2 public int t2 { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.court.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.court.html",
    "title": "Class court | sportradar.livedata.sdk",
    "keywords": "Class court Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class court : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData court Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties courtseq public int courtseq { get; set; } Property Value int courtseqSpecified public bool courtseqSpecified { get; set; } Property Value bool id public int id { get; set; } Property Value int name public string name { get; set; } Property Value string"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.ct.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.ct.html",
    "title": "Class ct | sportradar.livedata.sdk",
    "keywords": "Class ct Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class ct : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData ct Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object)"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.dangerousattacks.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.dangerousattacks.html",
    "title": "Class dangerousattacks | sportradar.livedata.sdk",
    "keywords": "Class dangerousattacks Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class dangerousattacks : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData dangerousattacks Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties t1 public int t1 { get; set; } Property Value int t2 public int t2 { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.dbfail.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.dbfail.html",
    "title": "Class dbfail | sportradar.livedata.sdk",
    "keywords": "Class dbfail Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class dbfail : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData dbfail Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties request public string request { get; set; } Property Value string"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.directfoulsperiod.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.directfoulsperiod.html",
    "title": "Class directfoulsperiod | sportradar.livedata.sdk",
    "keywords": "Class directfoulsperiod Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class directfoulsperiod Inheritance object directfoulsperiod Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties t1 public int t1 { get; set; } Property Value int t2 public int t2 { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.directfreekicks.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.directfreekicks.html",
    "title": "Class directfreekicks | sportradar.livedata.sdk",
    "keywords": "Class directfreekicks Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class directfreekicks Inheritance object directfreekicks Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties t1 public int t1 { get; set; } Property Value int t2 public int t2 { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.event.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.event.html",
    "title": "Class event | sportradar.livedata.sdk",
    "keywords": "Class event Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class @event : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData event Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties actualmatchstatistics public string actualmatchstatistics { get; set; } Property Value string assists public int assists { get; set; } Property Value int assistsSpecified public bool assistsSpecified { get; set; } Property Value bool atbatnumber public int atbatnumber { get; set; } Property Value int atbatnumberSpecified public bool atbatnumberSpecified { get; set; } Property Value bool atbatpitchnumber public int atbatpitchnumber { get; set; } Property Value int atbatpitchnumberSpecified public bool atbatpitchnumberSpecified { get; set; } Property Value bool attackingplayers public string attackingplayers { get; set; } Property Value string automatic public int automatic { get; set; } Property Value int automaticSpecified public bool automaticSpecified { get; set; } Property Value bool awaybattersstatstotal public string awaybattersstatstotal { get; set; } Property Value string awaypitchersstatstotal public string awaypitchersstatstotal { get; set; } Property Value string awayplayers public string awayplayers { get; set; } Property Value string awayplayerstats public string awayplayerstats { get; set; } Property Value string awayplayerstatsdef public string awayplayerstatsdef { get; set; } Property Value string awayplayerstatsot public string awayplayerstatsot { get; set; } Property Value string awayplayerstatsp1 public string awayplayerstatsp1 { get; set; } Property Value string awayplayerstatsp2 public string awayplayerstatsp2 { get; set; } Property Value string awayplayerstatsp3 public string awayplayerstatsp3 { get; set; } Property Value string awayplayerstatsp4 public string awayplayerstatsp4 { get; set; } Property Value string awayplayerstatspass public string awayplayerstatspass { get; set; } Property Value string awayplayerstatsrec public string awayplayerstatsrec { get; set; } Property Value string awayplayerstatsrush public string awayplayerstatsrush { get; set; } Property Value string awayplayerstatstotal public string awayplayerstatstotal { get; set; } Property Value string awayteamstats public string awayteamstats { get; set; } Property Value string awayteamstatsi1 public string awayteamstatsi1 { get; set; } Property Value string awayteamstatsi2 public string awayteamstatsi2 { get; set; } Property Value string awayteamstatsi3 public string awayteamstatsi3 { get; set; } Property Value string awayteamstatsi4 public string awayteamstatsi4 { get; set; } Property Value string awayteamstatsi5 public string awayteamstatsi5 { get; set; } Property Value string awayteamstatsi6 public string awayteamstatsi6 { get; set; } Property Value string awayteamstatsi7 public string awayteamstatsi7 { get; set; } Property Value string awayteamstatsi8 public string awayteamstatsi8 { get; set; } Property Value string awayteamstatsi9 public string awayteamstatsi9 { get; set; } Property Value string awayteamstatsie public string awayteamstatsie { get; set; } Property Value string awayteamstatsot public string awayteamstatsot { get; set; } Property Value string awayteamstatsp1 public string awayteamstatsp1 { get; set; } Property Value string awayteamstatsp2 public string awayteamstatsp2 { get; set; } Property Value string awayteamstatsp3 public string awayteamstatsp3 { get; set; } Property Value string awayteamstatsp4 public string awayteamstatsp4 { get; set; } Property Value string awayteamstatstotal public string awayteamstatstotal { get; set; } Property Value string awaytimeoncourt public string awaytimeoncourt { get; set; } Property Value string awaytimeonice public string awaytimeonice { get; set; } Property Value string ballnumber public string ballnumber { get; set; } Property Value string balls public int balls { get; set; } Property Value int ballsSpecified public bool ballsSpecified { get; set; } Property Value bool ballspotting public bool ballspotting { get; set; } Property Value bool ballspottingSpecified public bool ballspottingSpecified { get; set; } Property Value bool baronkills public int baronkills { get; set; } Property Value int baronkillsSpecified public bool baronkillsSpecified { get; set; } Property Value bool baseinfo public string baseinfo { get; set; } Property Value string batballangle public double batballangle { get; set; } Property Value double batballangleSpecified public bool batballangleSpecified { get; set; } Property Value bool batballdirection public double batballdirection { get; set; } Property Value double batballdirectionSpecified public bool batballdirectionSpecified { get; set; } Property Value bool batballdistance public double batballdistance { get; set; } Property Value double batballdistanceSpecified public bool batballdistanceSpecified { get; set; } Property Value bool batballspeed public double batballspeed { get; set; } Property Value double batballspeedSpecified public bool batballspeedSpecified { get; set; } Property Value bool batballx public double batballx { get; set; } Property Value double batballxSpecified public bool batballxSpecified { get; set; } Property Value bool batbally public double batbally { get; set; } Property Value double batballySpecified public bool batballySpecified { get; set; } Property Value bool battingaverages public string battingaverages { get; set; } Property Value string behinds public string behinds { get; set; } Property Value string blockedby public string blockedby { get; set; } Property Value string breakscore public string breakscore { get; set; } Property Value string caughtby public string caughtby { get; set; } Property Value string causedby public string causedby { get; set; } Property Value string championdamage public int championdamage { get; set; } Property Value int championdamageSpecified public bool championdamageSpecified { get; set; } Property Value bool cloud public string cloud { get; set; } Property Value string conversiontype public sbyte conversiontype { get; set; } Property Value sbyte conversiontypeSpecified public bool conversiontypeSpecified { get; set; } Property Value bool correctedfrom public int correctedfrom { get; set; } Property Value int correctedfromSpecified public bool correctedfromSpecified { get; set; } Property Value bool correctedto public int correctedto { get; set; } Property Value int correctedtoSpecified public bool correctedtoSpecified { get; set; } Property Value bool damage public int damage { get; set; } Property Value int damageSpecified public bool damageSpecified { get; set; } Property Value bool deaths public int deaths { get; set; } Property Value int deathsSpecified public bool deathsSpecified { get; set; } Property Value bool defensedby public string defensedby { get; set; } Property Value string denies public int denies { get; set; } Property Value int deniesSpecified public bool deniesSpecified { get; set; } Property Value bool direction public string direction { get; set; } Property Value string dismissalsininnings public int dismissalsininnings { get; set; } Property Value int dismissalsininningsSpecified public bool dismissalsininningsSpecified { get; set; } Property Value bool doublekills public int doublekills { get; set; } Property Value int doublekillsSpecified public bool doublekillsSpecified { get; set; } Property Value bool downedby public string downedby { get; set; } Property Value string dragonkills public int dragonkills { get; set; } Property Value int dragonkillsSpecified public bool dragonkillsSpecified { get; set; } Property Value bool dragontype public string dragontype { get; set; } Property Value string driveinfostatus public string driveinfostatus { get; set; } Property Value string driveplayinfo public string driveplayinfo { get; set; } Property Value string earlybetstarttype public int earlybetstarttype { get; set; } Property Value int earlybetstarttypeSpecified public bool earlybetstarttypeSpecified { get; set; } Property Value bool endscore public string endscore { get; set; } Property Value string errors public int errors { get; set; } Property Value int errorsSpecified public bool errorsSpecified { get; set; } Property Value bool errorsaway public int errorsaway { get; set; } Property Value int errorsawaySpecified public bool errorsawaySpecified { get; set; } Property Value bool errorshome public int errorshome { get; set; } Property Value int errorshomeSpecified public bool errorshomeSpecified { get; set; } Property Value bool errortype public string errortype { get; set; } Property Value string experience public int experience { get; set; } Property Value int experienceSpecified public bool experienceSpecified { get; set; } Property Value bool extrainfo public long extrainfo { get; set; } Property Value long extrainfoSpecified public bool extrainfoSpecified { get; set; } Property Value bool extrainfobaseball public string extrainfobaseball { get; set; } Property Value string extrainfobasketball public string extrainfobasketball { get; set; } Property Value string extrainfobowls public string extrainfobowls { get; set; } Property Value string extrainfocricket public string extrainfocricket { get; set; } Property Value string extrainfocsgo public string extrainfocsgo { get; set; } Property Value string extrainfodarts public string extrainfodarts { get; set; } Property Value string extrainfofootball public string extrainfofootball { get; set; } Property Value string extrainfohandball public string extrainfohandball { get; set; } Property Value string extrainfoicehockey public string extrainfoicehockey { get; set; } Property Value string extrainfokabaddi public string extrainfokabaddi { get; set; } Property Value string extrainfomoba public string extrainfomoba { get; set; } Property Value string extrainfosnooker public string extrainfosnooker { get; set; } Property Value string extrainfosoccer public string extrainfosoccer { get; set; } Property Value string extrainfotennis public string extrainfotennis { get; set; } Property Value string extrainfovolleyball public string extrainfovolleyball { get; set; } Property Value string extrainfowaterpolo public string extrainfowaterpolo { get; set; } Property Value string fieldgoaldistance public string fieldgoaldistance { get; set; } Property Value string fieldingplayers public string fieldingplayers { get; set; } Property Value string firstbaseloaded public sbyte firstbaseloaded { get; set; } Property Value sbyte firstbaseloadedSpecified public bool firstbaseloadedSpecified { get; set; } Property Value bool firstbaseplayer public long firstbaseplayer { get; set; } Property Value long firstbaseplayerSpecified public bool firstbaseplayerSpecified { get; set; } Property Value bool foultypedescriptor public int foultypedescriptor { get; set; } Property Value int foultypedescriptorSpecified public bool foultypedescriptorSpecified { get; set; } Property Value bool foultypequalifier public string foultypequalifier { get; set; } Property Value string framenumber public int framenumber { get; set; } Property Value int framenumberSpecified public bool framenumberSpecified { get; set; } Property Value bool framescore public string framescore { get; set; } Property Value string freekickreason public int freekickreason { get; set; } Property Value int freekickreasonSpecified public bool freekickreasonSpecified { get; set; } Property Value bool fumbledby public string fumbledby { get; set; } Property Value string gamenumber public int gamenumber { get; set; } Property Value int gamenumberSpecified public bool gamenumberSpecified { get; set; } Property Value bool gamescore public string gamescore { get; set; } Property Value string goals public string goals { get; set; } Property Value string happenedat public long happenedat { get; set; } Property Value long happenedatSpecified public bool happenedatSpecified { get; set; } Property Value bool healthremaining public int healthremaining { get; set; } Property Value int healthremainingSpecified public bool healthremainingSpecified { get; set; } Property Value bool heroesaliveaway public int heroesaliveaway { get; set; } Property Value int heroesaliveawaySpecified public bool heroesaliveawaySpecified { get; set; } Property Value bool heroesalivehome public int heroesalivehome { get; set; } Property Value int heroesalivehomeSpecified public bool heroesalivehomeSpecified { get; set; } Property Value bool heroid public int heroid { get; set; } Property Value int heroidSpecified public bool heroidSpecified { get; set; } Property Value bool heroname public string heroname { get; set; } Property Value string hitsaway public int hitsaway { get; set; } Property Value int hitsawaySpecified public bool hitsawaySpecified { get; set; } Property Value bool hitshome public int hitshome { get; set; } Property Value int hitshomeSpecified public bool hitshomeSpecified { get; set; } Property Value bool homebattersstatstotal public string homebattersstatstotal { get; set; } Property Value string homepitchersstatstotal public string homepitchersstatstotal { get; set; } Property Value string homeplayers public string homeplayers { get; set; } Property Value string homeplayerstats public string homeplayerstats { get; set; } Property Value string homeplayerstatsdef public string homeplayerstatsdef { get; set; } Property Value string homeplayerstatsot public string homeplayerstatsot { get; set; } Property Value string homeplayerstatsp1 public string homeplayerstatsp1 { get; set; } Property Value string homeplayerstatsp2 public string homeplayerstatsp2 { get; set; } Property Value string homeplayerstatsp3 public string homeplayerstatsp3 { get; set; } Property Value string homeplayerstatsp4 public string homeplayerstatsp4 { get; set; } Property Value string homeplayerstatspass public string homeplayerstatspass { get; set; } Property Value string homeplayerstatsrec public string homeplayerstatsrec { get; set; } Property Value string homeplayerstatsrush public string homeplayerstatsrush { get; set; } Property Value string homeplayerstatstotal public string homeplayerstatstotal { get; set; } Property Value string homerunsaway public int homerunsaway { get; set; } Property Value int homerunsawaySpecified public bool homerunsawaySpecified { get; set; } Property Value bool homerunshome public int homerunshome { get; set; } Property Value int homerunshomeSpecified public bool homerunshomeSpecified { get; set; } Property Value bool hometeamstats public string hometeamstats { get; set; } Property Value string hometeamstatsi1 public string hometeamstatsi1 { get; set; } Property Value string hometeamstatsi2 public string hometeamstatsi2 { get; set; } Property Value string hometeamstatsi3 public string hometeamstatsi3 { get; set; } Property Value string hometeamstatsi4 public string hometeamstatsi4 { get; set; } Property Value string hometeamstatsi5 public string hometeamstatsi5 { get; set; } Property Value string hometeamstatsi6 public string hometeamstatsi6 { get; set; } Property Value string hometeamstatsi7 public string hometeamstatsi7 { get; set; } Property Value string hometeamstatsi8 public string hometeamstatsi8 { get; set; } Property Value string hometeamstatsi9 public string hometeamstatsi9 { get; set; } Property Value string hometeamstatsie public string hometeamstatsie { get; set; } Property Value string hometeamstatsot public string hometeamstatsot { get; set; } Property Value string hometeamstatsp1 public string hometeamstatsp1 { get; set; } Property Value string hometeamstatsp2 public string hometeamstatsp2 { get; set; } Property Value string hometeamstatsp3 public string hometeamstatsp3 { get; set; } Property Value string hometeamstatsp4 public string hometeamstatsp4 { get; set; } Property Value string hometeamstatstotal public string hometeamstatstotal { get; set; } Property Value string hometimeoncourt public string hometimeoncourt { get; set; } Property Value string hometimeonice public string hometimeonice { get; set; } Property Value string humidity public int humidity { get; set; } Property Value int humiditySpecified public bool humiditySpecified { get; set; } Property Value bool id public long id { get; set; } Property Value long info public string info { get; set; } Property Value string inhibitorkills public int inhibitorkills { get; set; } Property Value int inhibitorkillsSpecified public bool inhibitorkillsSpecified { get; set; } Property Value bool inhole public long inhole { get; set; } Property Value long inholeSpecified public bool inholeSpecified { get; set; } Property Value bool injuryplayer public string injuryplayer { get; set; } Property Value string injuryreturn public string injuryreturn { get; set; } Property Value string inninghalf public eventInninghalf inninghalf { get; set; } Property Value eventInninghalf inninghalfSpecified public bool inninghalfSpecified { get; set; } Property Value bool inningscore public inningscore[] inningscore { get; set; } Property Value inningscore[] intendedreceiver public int intendedreceiver { get; set; } Property Value int intendedreceiverSpecified public bool intendedreceiverSpecified { get; set; } Property Value bool interceptedby public string interceptedby { get; set; } Property Value string inventory public string inventory { get; set; } Property Value string item public int item { get; set; } Property Value int itemSpecified public bool itemSpecified { get; set; } Property Value bool itemname public string itemname { get; set; } Property Value string kickedby public string kickedby { get; set; } Property Value string kills public int kills { get; set; } Property Value int killsSpecified public bool killsSpecified { get; set; } Property Value bool killsaway public int killsaway { get; set; } Property Value int killsawaySpecified public bool killsawaySpecified { get; set; } Property Value bool killshome public int killshome { get; set; } Property Value int killshomeSpecified public bool killshomeSpecified { get; set; } Property Value bool lasthits public int lasthits { get; set; } Property Value int lasthitsSpecified public bool lasthitsSpecified { get; set; } Property Value bool laststroke public string laststroke { get; set; } Property Value string legscore public string legscore { get; set; } Property Value string level public int level { get; set; } Property Value int levelSpecified public bool levelSpecified { get; set; } Property Value bool mapname public string mapname { get; set; } Property Value string mapnumber public int mapnumber { get; set; } Property Value int mapnumberSpecified public bool mapnumberSpecified { get; set; } Property Value bool mapscore public string mapscore { get; set; } Property Value string matchscore public string matchscore { get; set; } Property Value string matchstatus public string matchstatus { get; set; } Property Value string maxbreakframe public int maxbreakframe { get; set; } Property Value int maxbreakframeSpecified public bool maxbreakframeSpecified { get; set; } Property Value bool maxbreakmatch public int maxbreakmatch { get; set; } Property Value int maxbreakmatchSpecified public bool maxbreakmatchSpecified { get; set; } Property Value bool monstertype public string monstertype { get; set; } Property Value string mtime public string mtime { get; set; } Property Value string muffedby public string muffedby { get; set; } Property Value string networth public int networth { get; set; } Property Value int networthSpecified public bool networthSpecified { get; set; } Property Value bool nextbatter public int nextbatter { get; set; } Property Value int nextbatterSpecified public bool nextbatterSpecified { get; set; } Property Value bool numberofshots public string numberofshots { get; set; } Property Value string ondeck public long ondeck { get; set; } Property Value long ondeckSpecified public bool ondeckSpecified { get; set; } Property Value bool outs public int outs { get; set; } Property Value int outsSpecified public bool outsSpecified { get; set; } Property Value bool passedby public string passedby { get; set; } Property Value string pcount public int pcount { get; set; } Property Value int pcountSpecified public bool pcountSpecified { get; set; } Property Value bool penaltydistance public string penaltydistance { get; set; } Property Value string penaltynoplay public string penaltynoplay { get; set; } Property Value string penaltyreason public string penaltyreason { get; set; } Property Value string pentakills public int pentakills { get; set; } Property Value int pentakillsSpecified public bool pentakillsSpecified { get; set; } Property Value bool periodnumber public int periodnumber { get; set; } Property Value int periodnumberSpecified public bool periodnumberSpecified { get; set; } Property Value bool periodscore public string periodscore { get; set; } Property Value string pitchingsubstitution public int pitchingsubstitution { get; set; } Property Value int pitchingsubstitutionSpecified public bool pitchingsubstitutionSpecified { get; set; } Property Value bool pitchspeed public double pitchspeed { get; set; } Property Value double pitchspeedSpecified public bool pitchspeedSpecified { get; set; } Property Value bool pitchtype public int pitchtype { get; set; } Property Value int pitchtypeSpecified public bool pitchtypeSpecified { get; set; } Property Value bool placedat public string placedat { get; set; } Property Value string player1 public int player1 { get; set; } Property Value int player1Specified public bool player1Specified { get; set; } Property Value bool player2 public int player2 { get; set; } Property Value int player2Specified public bool player2Specified { get; set; } Property Value bool player3 public int player3 { get; set; } Property Value int player3Specified public bool player3Specified { get; set; } Property Value bool player4 public int player4 { get; set; } Property Value int player4Specified public bool player4Specified { get; set; } Property Value bool pointoutcome public string pointoutcome { get; set; } Property Value string pointsremaining public int pointsremaining { get; set; } Property Value int pointsremainingSpecified public bool pointsremainingSpecified { get; set; } Property Value bool pointsuntilsnookerneeded public int pointsuntilsnookerneeded { get; set; } Property Value int pointsuntilsnookerneededSpecified public bool pointsuntilsnookerneededSpecified { get; set; } Property Value bool positionplayerpitching public bool positionplayerpitching { get; set; } Property Value bool positionplayerpitchingSpecified public bool positionplayerpitchingSpecified { get; set; } Property Value bool possiblebreak public int possiblebreak { get; set; } Property Value int possiblebreakSpecified public bool possiblebreakSpecified { get; set; } Property Value bool posx public int posx { get; set; } Property Value int posxSpecified public bool posxSpecified { get; set; } Property Value bool posy public int posy { get; set; } Property Value int posySpecified public bool posySpecified { get; set; } Property Value bool preliminarymatchstatistics public string preliminarymatchstatistics { get; set; } Property Value string primaryshottype public string primaryshottype { get; set; } Property Value string puntdistance public string puntdistance { get; set; } Property Value string pushedby public string pushedby { get; set; } Property Value string quadrakills public int quadrakills { get; set; } Property Value int quadrakillsSpecified public bool quadrakillsSpecified { get; set; } Property Value bool ranoutofboundsat public string ranoutofboundsat { get; set; } Property Value string receivedby public string receivedby { get; set; } Property Value string recoveredat public string recoveredat { get; set; } Property Value string recoveredby public string recoveredby { get; set; } Property Value string reds public int reds { get; set; } Property Value int redsSpecified public bool redsSpecified { get; set; } Property Value bool refstime public long refstime { get; set; } Property Value long refstimeSpecified public bool refstimeSpecified { get; set; } Property Value bool refuuid public string refuuid { get; set; } Property Value string remainingtimeperiod public string remainingtimeperiod { get; set; } Property Value string roundnumber public int roundnumber { get; set; } Property Value int roundnumberSpecified public bool roundnumberSpecified { get; set; } Property Value bool roundscore public string roundscore { get; set; } Property Value string runs public int runs { get; set; } Property Value int runsSpecified public bool runsSpecified { get; set; } Property Value bool runsaway public int runsaway { get; set; } Property Value int runsawaySpecified public bool runsawaySpecified { get; set; } Property Value bool runshome public int runshome { get; set; } Property Value int runshomeSpecified public bool runshomeSpecified { get; set; } Property Value bool runsininnings public int runsininnings { get; set; } Property Value int runsininningsSpecified public bool runsininningsSpecified { get; set; } Property Value bool rushedby public string rushedby { get; set; } Property Value string rushspeed public string rushspeed { get; set; } Property Value string sackedby public string sackedby { get; set; } Property Value string safetyby public string safetyby { get; set; } Property Value string scorernotconfirmed public int scorernotconfirmed { get; set; } Property Value int scorernotconfirmedSpecified public bool scorernotconfirmedSpecified { get; set; } Property Value bool scoretypequalifier public string scoretypequalifier { get; set; } Property Value string secondaryshottype public string secondaryshottype { get; set; } Property Value string secondbaseloaded public sbyte secondbaseloaded { get; set; } Property Value sbyte secondbaseloadedSpecified public bool secondbaseloadedSpecified { get; set; } Property Value bool secondbaseplayer public long secondbaseplayer { get; set; } Property Value long secondbaseplayerSpecified public bool secondbaseplayerSpecified { get; set; } Property Value bool secondscoretype public int secondscoretype { get; set; } Property Value int secondscoretypeSpecified public bool secondscoretypeSpecified { get; set; } Property Value bool server public eventServer server { get; set; } Property Value eventServer serverSpecified public bool serverSpecified { get; set; } Property Value bool setnumber public int setnumber { get; set; } Property Value int setnumberSpecified public bool setnumberSpecified { get; set; } Property Value bool setscore public string setscore { get; set; } Property Value string shotdistance public double shotdistance { get; set; } Property Value double shotdistanceSpecified public bool shotdistanceSpecified { get; set; } Property Value bool shotprojectedgoalrate public double shotprojectedgoalrate { get; set; } Property Value double shotprojectedgoalrateSpecified public bool shotprojectedgoalrateSpecified { get; set; } Property Value bool shotratingcategory public int shotratingcategory { get; set; } Property Value int shotratingcategorySpecified public bool shotratingcategorySpecified { get; set; } Property Value bool shotsequence public string shotsequence { get; set; } Property Value string shotspeed public double shotspeed { get; set; } Property Value double shotspeedSpecified public bool shotspeedSpecified { get; set; } Property Value bool shottype public int shottype { get; set; } Property Value int shottypeSpecified public bool shottypeSpecified { get; set; } Property Value bool side public eventSide side { get; set; } Property Value eventSide situation public string situation { get; set; } Property Value string snappedby public string snappedby { get; set; } Property Value string spin public string spin { get; set; } Property Value string spot public string spot { get; set; } Property Value string spottedat public string spottedat { get; set; } Property Value string stadiumtype public string stadiumtype { get; set; } Property Value string statistics public statistics statistics { get; set; } Property Value statistics stime public long stime { get; set; } Property Value long strikes public int strikes { get; set; } Property Value int strikesSpecified public bool strikesSpecified { get; set; } Property Value bool stroketype public string stroketype { get; set; } Property Value string structure public string structure { get; set; } Property Value string supervisoraction public int supervisoraction { get; set; } Property Value int supervisoractionSpecified public bool supervisoractionSpecified { get; set; } Property Value bool tackledby public string tackledby { get; set; } Property Value string temperature public int temperature { get; set; } Property Value int temperatureSpecified public bool temperatureSpecified { get; set; } Property Value bool thirdbaseloaded public sbyte thirdbaseloaded { get; set; } Property Value sbyte thirdbaseloadedSpecified public bool thirdbaseloadedSpecified { get; set; } Property Value bool thirdbaseplayer public long thirdbaseplayer { get; set; } Property Value long thirdbaseplayerSpecified public bool thirdbaseplayerSpecified { get; set; } Property Value bool thrownto public string thrownto { get; set; } Property Value string tippedto public int tippedto { get; set; } Property Value int tippedtoSpecified public bool tippedtoSpecified { get; set; } Property Value bool totalpitchcount public int totalpitchcount { get; set; } Property Value int totalpitchcountSpecified public bool totalpitchcountSpecified { get; set; } Property Value bool totalyardsgained public int totalyardsgained { get; set; } Property Value int totalyardsgainedSpecified public bool totalyardsgainedSpecified { get; set; } Property Value bool touchbackat public string touchbackat { get; set; } Property Value string touchdowntype public sbyte touchdowntype { get; set; } Property Value sbyte touchdowntypeSpecified public bool touchdowntypeSpecified { get; set; } Property Value bool towerkills public int towerkills { get; set; } Property Value int towerkillsSpecified public bool towerkillsSpecified { get; set; } Property Value bool triplekills public int triplekills { get; set; } Property Value int triplekillsSpecified public bool triplekillsSpecified { get; set; } Property Value bool turftype public string turftype { get; set; } Property Value string type public int type { get; set; } Property Value int unavailableplayersaway public string unavailableplayersaway { get; set; } Property Value string unavailableplayershome public string unavailableplayershome { get; set; } Property Value string uuid public string uuid { get; set; } Property Value string wardsplaced public int wardsplaced { get; set; } Property Value int wardsplacedSpecified public bool wardsplacedSpecified { get; set; } Property Value bool weaponid public int weaponid { get; set; } Property Value int weaponidSpecified public bool weaponidSpecified { get; set; } Property Value bool weaponname public string weaponname { get; set; } Property Value string windchill public int windchill { get; set; } Property Value int windchillSpecified public bool windchillSpecified { get; set; } Property Value bool winddirection public string winddirection { get; set; } Property Value string windspeed public int windspeed { get; set; } Property Value int windspeedSpecified public bool windspeedSpecified { get; set; } Property Value bool yardline public string yardline { get; set; } Property Value string"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.eventInninghalf.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.eventInninghalf.html",
    "title": "Enum eventInninghalf | sportradar.livedata.sdk",
    "keywords": "Enum eventInninghalf Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum eventInninghalf Fields B = 1 T = 0"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.eventServer.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.eventServer.html",
    "title": "Enum eventServer | sportradar.livedata.sdk",
    "keywords": "Enum eventServer Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum eventServer Fields away = 0 home = 1 none = 2"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.eventSide.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.eventSide.html",
    "title": "Enum eventSide | sportradar.livedata.sdk",
    "keywords": "Enum eventSide Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum eventSide Fields away = 0 home = 1 none = 2"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.eventconfig.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.eventconfig.html",
    "title": "Class eventconfig | sportradar.livedata.sdk",
    "keywords": "Class eventconfig Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class eventconfig : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData eventconfig Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties audio public string audio { get; set; } Property Value string changebackgroundcolour public bool changebackgroundcolour { get; set; } Property Value bool changebackgroundcolourpossible public bool changebackgroundcolourpossible { get; set; } Property Value bool changebackgroundcolourpossibleSpecified public bool changebackgroundcolourpossibleSpecified { get; set; } Property Value bool eventtype public int eventtype { get; set; } Property Value int extrainfo public int extrainfo { get; set; } Property Value int extrainfoSpecified public bool extrainfoSpecified { get; set; } Property Value bool p3 public int p3 { get; set; } Property Value int p3Specified public bool p3Specified { get; set; } Property Value bool p4 public int p4 { get; set; } Property Value int p4Specified public bool p4Specified { get; set; } Property Value bool playsound public bool playsound { get; set; } Property Value bool popup public bool popup { get; set; } Property Value bool side public eventconfigSide side { get; set; } Property Value eventconfigSide sideSpecified public bool sideSpecified { get; set; } Property Value bool sportid public int sportid { get; set; } Property Value int sportidSpecified public bool sportidSpecified { get; set; } Property Value bool"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.eventconfigSide.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.eventconfigSide.html",
    "title": "Enum eventconfigSide | sportradar.livedata.sdk",
    "keywords": "Enum eventconfigSide Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum eventconfigSide Fields away = 0 home = 1 none = 2"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.events.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.events.html",
    "title": "Class events | sportradar.livedata.sdk",
    "keywords": "Class events Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class events : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData events Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties event public @event[] @event { get; set; } Property Value event[]"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.firstkickoffteam1sthalf.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.firstkickoffteam1sthalf.html",
    "title": "Class firstkickoffteam1sthalf | sportradar.livedata.sdk",
    "keywords": "Class firstkickoffteam1sthalf Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class firstkickoffteam1sthalf Inheritance object firstkickoffteam1sthalf Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties team public int team { get; set; } Property Value int teamSpecified public bool teamSpecified { get; set; } Property Value bool"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.firstkickoffteam2ndhalf.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.firstkickoffteam2ndhalf.html",
    "title": "Class firstkickoffteam2ndhalf | sportradar.livedata.sdk",
    "keywords": "Class firstkickoffteam2ndhalf Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class firstkickoffteam2ndhalf Inheritance object firstkickoffteam2ndhalf Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties team public int team { get; set; } Property Value int teamSpecified public bool teamSpecified { get; set; } Property Value bool"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.firstkickoffteamot.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.firstkickoffteamot.html",
    "title": "Class firstkickoffteamot | sportradar.livedata.sdk",
    "keywords": "Class firstkickoffteamot Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class firstkickoffteamot Inheritance object firstkickoffteamot Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties team public int team { get; set; } Property Value int teamSpecified public bool teamSpecified { get; set; } Property Value bool"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.flashconfig.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.flashconfig.html",
    "title": "Class flashconfig | sportradar.livedata.sdk",
    "keywords": "Class flashconfig Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class flashconfig : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData flashconfig Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties eventconfig public eventconfig[] eventconfig { get; set; } Property Value eventconfig[]"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.format.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.format.html",
    "title": "Class format | sportradar.livedata.sdk",
    "keywords": "Class format Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class format Inheritance object format Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties type public formatType type { get; set; } Property Value formatType value public int value { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.formatType.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.formatType.html",
    "title": "Enum formatType | sportradar.livedata.sdk",
    "keywords": "Enum formatType Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum formatType Fields battingpowerplayovers = 4 conversionvalue = 16 days = 2 dropgoalvalue = 18 extrapointyardline = 27 lengthovertimeperiods = 21 lengthsuddendeath = 22 limitedovers = 0 mandatorypowerplayovers = 3 maps = 10 maxoversperbowler = 8 noballpenaltyvalue = 28 numberofperiods = 13 numberovertimeperiods = 20 onepointconversionyardline = 25 overs = 1 overtimerounds = 12 penaltyshootout = 23 penaltytryvalue = 19 penaltyvalue = 17 periodlength = 14 powerplay1overs = 5 powerplay2overs = 6 powerplay3overs = 7 regularinnings = 31 reviews = 9 rounds = 11 ruleset = 24 tiebreakermethod = 29 tryvalue = 15 twopointconversionyardline = 26 usesovers = 30"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.freekicks.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.freekicks.html",
    "title": "Class freekicks | sportradar.livedata.sdk",
    "keywords": "Class freekicks Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class freekicks : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData freekicks Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties t1 public int t1 { get; set; } Property Value int t2 public int t2 { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.freethrows.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.freethrows.html",
    "title": "Class freethrows | sportradar.livedata.sdk",
    "keywords": "Class freethrows Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class freethrows : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData freethrows Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties t1 public int t1 { get; set; } Property Value int t2 public int t2 { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.goalkeepersaves.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.goalkeepersaves.html",
    "title": "Class goalkeepersaves | sportradar.livedata.sdk",
    "keywords": "Class goalkeepersaves Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class goalkeepersaves : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData goalkeepersaves Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties t1 public int t1 { get; set; } Property Value int t2 public int t2 { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.goalkicks.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.goalkicks.html",
    "title": "Class goalkicks | sportradar.livedata.sdk",
    "keywords": "Class goalkicks Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class goalkicks : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData goalkicks Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties t1 public int t1 { get; set; } Property Value int t2 public int t2 { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.goals.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.goals.html",
    "title": "Class goals | sportradar.livedata.sdk",
    "keywords": "Class goals Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class goals Inheritance object goals Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties goals1 public goals goals1 { get; set; } Property Value goals t1 public int t1 { get; set; } Property Value int t2 public int t2 { get; set; } Property Value int type public string type { get; set; } Property Value string"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.gold.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.gold.html",
    "title": "Class gold | sportradar.livedata.sdk",
    "keywords": "Class gold Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class gold Inheritance object gold Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties mapnr public int mapnr { get; set; } Property Value int t1 public int t1 { get; set; } Property Value int t2 public int t2 { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.green.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.green.html",
    "title": "Class green | sportradar.livedata.sdk",
    "keywords": "Class green Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class green Inheritance object green Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties t1 public int t1 { get; set; } Property Value int t2 public int t2 { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Classes ServerData attacks attribute attributes battersstatstotal behinds black bookmatch category corners court ct dangerousattacks dbfail directfoulsperiod directfreekicks event eventconfig events firstkickoffteam1sthalf firstkickoffteam2ndhalf firstkickoffteamot flashconfig format freekicks freethrows goalkeepersaves goalkicks goals gold green iceconditions info infos injuries innings inningscore jersey jerseys kickoffteam lineups login manager match matchdata matchformat matchlist matchlistupdate matchproperties matchproperty matchrole matchroles matchstop multimatchsubscriptionresponse networth offsides openingfaceoff1stperiod openingfaceoff2ndperiod openingfaceoff3rdperiod openingfaceoffovertime penalties pitchconditions pitchersstatstotal player playerstats possession red score scout serve servertime serverversion shotsblocked shotsofftarget shotsontarget sport statistics stats status subteam surfacetype suspensions team teamofficial teams teamstats throwins tiebreak tournament user weatherconditions yellow Enums battersstatstotalSide bookmatchResult eventInninghalf eventServer eventSide eventconfigSide formatType iceconditionsName loginErrorcode loginResult matchBetstatus matchCoveredfrom matchFeedtype matchFirstserve matchFirstservegoldenset matchFirstservetiebreak matchVbpclassification matchWonjumpball matchpropertyType pitchconditionsName pitchersstatstotalSide possessionTeam serveTeam statusName surfacetypeName teamSide teamstatsSide teamstatsType weatherconditionsName"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.iceconditions.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.iceconditions.html",
    "title": "Class iceconditions | sportradar.livedata.sdk",
    "keywords": "Class iceconditions Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class iceconditions Inheritance object iceconditions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties id public int id { get; set; } Property Value int name public iceconditionsName name { get; set; } Property Value iceconditionsName"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.iceconditionsName.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.iceconditionsName.html",
    "title": "Enum iceconditionsName | sportradar.livedata.sdk",
    "keywords": "Enum iceconditionsName Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum iceconditionsName Fields GOOD = 1 MEDIUM = 2 POOR = 3 UNKNOWN = 0"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.info.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.info.html",
    "title": "Class info | sportradar.livedata.sdk",
    "keywords": "Class info Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class info : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData info Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties header public string header { get; set; } Property Value string link public bool link { get; set; } Property Value bool linkSpecified public bool linkSpecified { get; set; } Property Value bool order public int order { get; set; } Property Value int value public string value { get; set; } Property Value string"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.infos.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.infos.html",
    "title": "Class infos | sportradar.livedata.sdk",
    "keywords": "Class infos Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class infos : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData infos Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties info public info[] info { get; set; } Property Value info[] matchid public long matchid { get; set; } Property Value long"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.injuries.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.injuries.html",
    "title": "Class injuries | sportradar.livedata.sdk",
    "keywords": "Class injuries Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class injuries : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData injuries Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties t1 public int t1 { get; set; } Property Value int t2 public int t2 { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.innings.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.innings.html",
    "title": "Class innings | sportradar.livedata.sdk",
    "keywords": "Class innings Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class innings Inheritance object innings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties dismissals public int dismissals { get; set; } Property Value int runs public int runs { get; set; } Property Value int statusid public int statusid { get; set; } Property Value int statusname public string statusname { get; set; } Property Value string"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.inningscore.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.inningscore.html",
    "title": "Class inningscore | sportradar.livedata.sdk",
    "keywords": "Class inningscore Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class inningscore Inheritance object inningscore Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties away public int away { get; set; } Property Value int home public int home { get; set; } Property Value int inning public int inning { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.jersey.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.jersey.html",
    "title": "Class jersey | sportradar.livedata.sdk",
    "keywords": "Class jersey Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class jersey Inheritance object jersey Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties base public string @base { get; set; } Property Value string horizontal_stripes public string horizontal_stripes { get; set; } Property Value string jersey_type public int jersey_type { get; set; } Property Value int number public string number { get; set; } Property Value string outline public string outline { get; set; } Property Value string shirt_type public string shirt_type { get; set; } Property Value string side public int side { get; set; } Property Value int sleeve public string sleeve { get; set; } Property Value string split public string split { get; set; } Property Value string squares public string squares { get; set; } Property Value string vertical_stripes public string vertical_stripes { get; set; } Property Value string"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.jerseys.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.jerseys.html",
    "title": "Class jerseys | sportradar.livedata.sdk",
    "keywords": "Class jerseys Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class jerseys Inheritance object jerseys Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties jersey public jersey[] jersey { get; set; } Property Value jersey[]"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.kickoffteam.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.kickoffteam.html",
    "title": "Class kickoffteam | sportradar.livedata.sdk",
    "keywords": "Class kickoffteam Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class kickoffteam : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData kickoffteam Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties team public int team { get; set; } Property Value int teamSpecified public bool teamSpecified { get; set; } Property Value bool"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.lineups.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.lineups.html",
    "title": "Class lineups | sportradar.livedata.sdk",
    "keywords": "Class lineups Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class lineups : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData lineups Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties manager public manager[] manager { get; set; } Property Value manager[] matchid public long matchid { get; set; } Property Value long player public player[] player { get; set; } Property Value player[] preliminary public int preliminary { get; set; } Property Value int preliminarySpecified public bool preliminarySpecified { get; set; } Property Value bool teamofficial public teamofficial[] teamofficial { get; set; } Property Value teamofficial[]"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.login.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.login.html",
    "title": "Class login | sportradar.livedata.sdk",
    "keywords": "Class login Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class login : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData login Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties errorcode public loginErrorcode errorcode { get; set; } Property Value loginErrorcode errorcodeSpecified public bool errorcodeSpecified { get; set; } Property Value bool flashconfig public eventconfig[] flashconfig { get; set; } Property Value eventconfig[] reason public string reason { get; set; } Property Value string result public loginResult result { get; set; } Property Value loginResult user public user user { get; set; } Property Value user"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.loginErrorcode.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.loginErrorcode.html",
    "title": "Enum loginErrorcode | sportradar.livedata.sdk",
    "keywords": "Enum loginErrorcode Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum loginErrorcode Fields connection_quota = 6 expired = 4 flooding = 5 incorrect = 3 insecure = 1 internal_error = 8 missing = 2 not_whitelisted = 7 unauthenticated = 0"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.loginResult.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.loginResult.html",
    "title": "Enum loginResult | sportradar.livedata.sdk",
    "keywords": "Enum loginResult Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum loginResult Fields invalid = 1 valid = 0"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.manager.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.manager.html",
    "title": "Class manager | sportradar.livedata.sdk",
    "keywords": "Class manager Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class manager Inheritance object manager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties id public int id { get; set; } Property Value int name public string name { get; set; } Property Value string team public int team { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.match.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.match.html",
    "title": "Class match | sportradar.livedata.sdk",
    "keywords": "Class match Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class match : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData match Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Items public object[] Items { get; set; } Property Value object[] active public sbyte active { get; set; } Property Value sbyte activeSpecified public bool activeSpecified { get; set; } Property Value bool awaystate public string awaystate { get; set; } Property Value string betstatus public matchBetstatus betstatus { get; set; } Property Value matchBetstatus betstatusSpecified public bool betstatusSpecified { get; set; } Property Value bool booked public int booked { get; set; } Property Value int bookedSpecified public bool bookedSpecified { get; set; } Property Value bool connectionstatus public int connectionstatus { get; set; } Property Value int connectionstatusSpecified public bool connectionstatusSpecified { get; set; } Property Value bool coveragestatusid public int coveragestatusid { get; set; } Property Value int coveragestatusidSpecified public bool coveragestatusidSpecified { get; set; } Property Value bool coveredfrom public matchCoveredfrom coveredfrom { get; set; } Property Value matchCoveredfrom coveredfromSpecified public bool coveredfromSpecified { get; set; } Property Value bool dc public int dc { get; set; } Property Value int dcSpecified public bool dcSpecified { get; set; } Property Value bool device public int device { get; set; } Property Value int deviceSpecified public bool deviceSpecified { get; set; } Property Value bool distance public int distance { get; set; } Property Value int distanceSpecified public bool distanceSpecified { get; set; } Property Value bool extmatchid public string extmatchid { get; set; } Property Value string extrainfo public int extrainfo { get; set; } Property Value int extrainfoSpecified public bool extrainfoSpecified { get; set; } Property Value bool feedtype public matchFeedtype feedtype { get; set; } Property Value matchFeedtype feedtypeSpecified public bool feedtypeSpecified { get; set; } Property Value bool firstserve public matchFirstserve firstserve { get; set; } Property Value matchFirstserve firstserveSpecified public bool firstserveSpecified { get; set; } Property Value bool firstservegoldenset public matchFirstservegoldenset firstservegoldenset { get; set; } Property Value matchFirstservegoldenset firstservegoldensetSpecified public bool firstservegoldensetSpecified { get; set; } Property Value bool firstservetiebreak public matchFirstservetiebreak firstservetiebreak { get; set; } Property Value matchFirstservetiebreak firstservetiebreakSpecified public bool firstservetiebreakSpecified { get; set; } Property Value bool homestate public string homestate { get; set; } Property Value string iscancelled public sbyte iscancelled { get; set; } Property Value sbyte iscancelledSpecified public bool iscancelledSpecified { get; set; } Property Value bool matchid public long matchid { get; set; } Property Value long matchtime public string matchtime { get; set; } Property Value string numberofsets public int numberofsets { get; set; } Property Value int numberofsetsSpecified public bool numberofsetsSpecified { get; set; } Property Value bool page public int page { get; set; } Property Value int pageSpecified public bool pageSpecified { get; set; } Property Value bool region public string region { get; set; } Property Value string setlimit public int setlimit { get; set; } Property Value int setlimitSpecified public bool setlimitSpecified { get; set; } Property Value bool sex public int sex { get; set; } Property Value int sexSpecified public bool sexSpecified { get; set; } Property Value bool sourceid public string sourceid { get; set; } Property Value string sportid public int sportid { get; set; } Property Value int sportidSpecified public bool sportidSpecified { get; set; } Property Value bool st1id public int st1id { get; set; } Property Value int st1idSpecified public bool st1idSpecified { get; set; } Property Value bool st2id public int st2id { get; set; } Property Value int st2idSpecified public bool st2idSpecified { get; set; } Property Value bool start public long start { get; set; } Property Value long startSpecified public bool startSpecified { get; set; } Property Value bool stime public long stime { get; set; } Property Value long stimeSpecified public bool stimeSpecified { get; set; } Property Value bool t1abbr public string t1abbr { get; set; } Property Value string t1division public string t1division { get; set; } Property Value string t1id public int t1id { get; set; } Property Value int t1idSpecified public bool t1idSpecified { get; set; } Property Value bool t1name public string t1name { get; set; } Property Value string t1namenatural public string t1namenatural { get; set; } Property Value string t2abbr public string t2abbr { get; set; } Property Value string t2division public string t2division { get; set; } Property Value string t2id public int t2id { get; set; } Property Value int t2idSpecified public bool t2idSpecified { get; set; } Property Value bool t2name public string t2name { get; set; } Property Value string t2namenatural public string t2namenatural { get; set; } Property Value string teammatch public sbyte teammatch { get; set; } Property Value sbyte teammatchSpecified public bool teammatchSpecified { get; set; } Property Value bool teammatchid public long teammatchid { get; set; } Property Value long teammatchidSpecified public bool teammatchidSpecified { get; set; } Property Value bool teamsreversed public int teamsreversed { get; set; } Property Value int teamsreversedSpecified public bool teamsreversedSpecified { get; set; } Property Value bool tiebreaklastset public int tiebreaklastset { get; set; } Property Value int tiebreaklastsetSpecified public bool tiebreaklastsetSpecified { get; set; } Property Value bool timerunning public int timerunning { get; set; } Property Value int timerunningSpecified public bool timerunningSpecified { get; set; } Property Value bool totalpages public int totalpages { get; set; } Property Value int totalpagesSpecified public bool totalpagesSpecified { get; set; } Property Value bool uuid public string uuid { get; set; } Property Value string var public int var { get; set; } Property Value int varSpecified public bool varSpecified { get; set; } Property Value bool vbpclassification public matchVbpclassification vbpclassification { get; set; } Property Value matchVbpclassification vbpclassificationSpecified public bool vbpclassificationSpecified { get; set; } Property Value bool venue public string venue { get; set; } Property Value string wonjumpball public matchWonjumpball wonjumpball { get; set; } Property Value matchWonjumpball wonjumpballSpecified public bool wonjumpballSpecified { get; set; } Property Value bool"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchBetstatus.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchBetstatus.html",
    "title": "Enum matchBetstatus | sportradar.livedata.sdk",
    "keywords": "Enum matchBetstatus Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum matchBetstatus Fields BETSTOP = 2 NOT_STARTED = 0 STARTED = 1"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchCoveredfrom.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchCoveredfrom.html",
    "title": "Enum matchCoveredfrom | sportradar.livedata.sdk",
    "keywords": "Enum matchCoveredfrom Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum matchCoveredfrom Fields tv = 0 venue = 1"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchFeedtype.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchFeedtype.html",
    "title": "Enum matchFeedtype | sportradar.livedata.sdk",
    "keywords": "Enum matchFeedtype Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum matchFeedtype Fields delta = 2 deltaupdate = 3 full = 0 full_paginated = 1 lightweight = 4"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchFirstserve.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchFirstserve.html",
    "title": "Enum matchFirstserve | sportradar.livedata.sdk",
    "keywords": "Enum matchFirstserve Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum matchFirstserve Fields away = 1 home = 0"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchFirstservegoldenset.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchFirstservegoldenset.html",
    "title": "Enum matchFirstservegoldenset | sportradar.livedata.sdk",
    "keywords": "Enum matchFirstservegoldenset Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum matchFirstservegoldenset Fields away = 1 home = 0"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchFirstservetiebreak.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchFirstservetiebreak.html",
    "title": "Enum matchFirstservetiebreak | sportradar.livedata.sdk",
    "keywords": "Enum matchFirstservetiebreak Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum matchFirstservetiebreak Fields away = 1 home = 0"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchVbpclassification.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchVbpclassification.html",
    "title": "Enum matchVbpclassification | sportradar.livedata.sdk",
    "keywords": "Enum matchVbpclassification Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum matchVbpclassification Fields mvp = 1 star = 0"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchWonjumpball.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchWonjumpball.html",
    "title": "Enum matchWonjumpball | sportradar.livedata.sdk",
    "keywords": "Enum matchWonjumpball Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum matchWonjumpball Fields away = 1 home = 0"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchdata.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchdata.html",
    "title": "Class matchdata | sportradar.livedata.sdk",
    "keywords": "Class matchdata Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class matchdata : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData matchdata Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties matchid public long matchid { get; set; } Property Value long mtime public string mtime { get; set; } Property Value string remainingtimeperiod public string remainingtimeperiod { get; set; } Property Value string"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchformat.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchformat.html",
    "title": "Class matchformat | sportradar.livedata.sdk",
    "keywords": "Class matchformat Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class matchformat : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData matchformat Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Items public format[] Items { get; set; } Property Value format[]"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchlist.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchlist.html",
    "title": "Class matchlist | sportradar.livedata.sdk",
    "keywords": "Class matchlist Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class matchlist : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData matchlist Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties match public match[] match { get; set; } Property Value match[]"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchlistupdate.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchlistupdate.html",
    "title": "Class matchlistupdate | sportradar.livedata.sdk",
    "keywords": "Class matchlistupdate Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class matchlistupdate : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData matchlistupdate Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties match public match[] match { get; set; } Property Value match[]"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchproperties.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchproperties.html",
    "title": "Class matchproperties | sportradar.livedata.sdk",
    "keywords": "Class matchproperties Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class matchproperties Inheritance object matchproperties Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Items public matchproperty[] Items { get; set; } Property Value matchproperty[]"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchproperty.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchproperty.html",
    "title": "Class matchproperty | sportradar.livedata.sdk",
    "keywords": "Class matchproperty Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class matchproperty Inheritance object matchproperty Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties type public matchpropertyType type { get; set; } Property Value matchpropertyType value public string value { get; set; } Property Value string"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchpropertyType.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchpropertyType.html",
    "title": "Enum matchpropertyType | sportradar.livedata.sdk",
    "keywords": "Enum matchpropertyType Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum matchpropertyType Fields bestof = 0 decidingscore = 22 doublein = 35 drawpossible = 30 firstto = 1 jerseycolor = 10 legstotriggersuddendeath = 31 legstotriggersuddendeathinlastset = 32 legstowin = 26 legstowininlastset = 27 matchtype = 6 numberofendsintiebreak = 4 numberofendsperset = 5 numberofextrainnings = 19 numberoflegsinearlysets = 33 numberoflegsinlastset = 34 numberofovertimeperiods = 15 numberofovertimerounds = 7 numberofperiods = 2 overtimelength = 12 overtimeteamstrength = 18 overtimevictorycondition = 16 penaltyshootout = 13 periodlength = 11 playermarkets = 17 playthroughinregularsets = 23 pointsinfinalset = 21 rapidmarkets = 8 roundspermap = 25 ruleset = 14 sinbin = 9 suddendeathinlastgame = 36 suddendeathleg = 28 suddendeathleginlastset = 29 technicaltimeout = 20 tiebreakscoringprocedure = 24 var = 3"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchrole.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchrole.html",
    "title": "Class matchrole | sportradar.livedata.sdk",
    "keywords": "Class matchrole Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class matchrole Inheritance object matchrole Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties description public string description { get; set; } Property Value string id public int id { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchroles.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchroles.html",
    "title": "Class matchroles | sportradar.livedata.sdk",
    "keywords": "Class matchroles Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class matchroles Inheritance object matchroles Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties matchrole public matchrole[] matchrole { get; set; } Property Value matchrole[]"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchstop.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.matchstop.html",
    "title": "Class matchstop | sportradar.livedata.sdk",
    "keywords": "Class matchstop Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class matchstop : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData matchstop Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties matchid public long matchid { get; set; } Property Value long reason public string reason { get; set; } Property Value string"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.multimatchsubscriptionresponse.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.multimatchsubscriptionresponse.html",
    "title": "Class multimatchsubscriptionresponse | sportradar.livedata.sdk",
    "keywords": "Class multimatchsubscriptionresponse Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class multimatchsubscriptionresponse Inheritance object multimatchsubscriptionresponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties match public match[] match { get; set; } Property Value match[]"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.networth.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.networth.html",
    "title": "Class networth | sportradar.livedata.sdk",
    "keywords": "Class networth Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class networth Inheritance object networth Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties mapnr public int mapnr { get; set; } Property Value int t1 public int t1 { get; set; } Property Value int t2 public int t2 { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.offsides.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.offsides.html",
    "title": "Class offsides | sportradar.livedata.sdk",
    "keywords": "Class offsides Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class offsides : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData offsides Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties t1 public int t1 { get; set; } Property Value int t2 public int t2 { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.openingfaceoff1stperiod.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.openingfaceoff1stperiod.html",
    "title": "Class openingfaceoff1stperiod | sportradar.livedata.sdk",
    "keywords": "Class openingfaceoff1stperiod Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class openingfaceoff1stperiod Inheritance object openingfaceoff1stperiod Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties team public int team { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.openingfaceoff2ndperiod.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.openingfaceoff2ndperiod.html",
    "title": "Class openingfaceoff2ndperiod | sportradar.livedata.sdk",
    "keywords": "Class openingfaceoff2ndperiod Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class openingfaceoff2ndperiod Inheritance object openingfaceoff2ndperiod Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties team public int team { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.openingfaceoff3rdperiod.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.openingfaceoff3rdperiod.html",
    "title": "Class openingfaceoff3rdperiod | sportradar.livedata.sdk",
    "keywords": "Class openingfaceoff3rdperiod Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class openingfaceoff3rdperiod Inheritance object openingfaceoff3rdperiod Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties team public int team { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.openingfaceoffovertime.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.openingfaceoffovertime.html",
    "title": "Class openingfaceoffovertime | sportradar.livedata.sdk",
    "keywords": "Class openingfaceoffovertime Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class openingfaceoffovertime Inheritance object openingfaceoffovertime Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties team public int team { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.penalties.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.penalties.html",
    "title": "Class penalties | sportradar.livedata.sdk",
    "keywords": "Class penalties Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class penalties : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData penalties Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties t1 public int t1 { get; set; } Property Value int t2 public int t2 { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.pitchconditions.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.pitchconditions.html",
    "title": "Class pitchconditions | sportradar.livedata.sdk",
    "keywords": "Class pitchconditions Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class pitchconditions : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData pitchconditions Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties id public int id { get; set; } Property Value int name public pitchconditionsName name { get; set; } Property Value pitchconditionsName"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.pitchconditionsName.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.pitchconditionsName.html",
    "title": "Enum pitchconditionsName | sportradar.livedata.sdk",
    "keywords": "Enum pitchconditionsName Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum pitchconditionsName Fields BAD = 2 GOOD = 0 MEDIUM = 1 UNKNOWN = 3"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.pitchersstatstotal.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.pitchersstatstotal.html",
    "title": "Class pitchersstatstotal | sportradar.livedata.sdk",
    "keywords": "Class pitchersstatstotal Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class pitchersstatstotal Inheritance object pitchersstatstotal Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties playerstats public playerstats[] playerstats { get; set; } Property Value playerstats[] side public pitchersstatstotalSide side { get; set; } Property Value pitchersstatstotalSide"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.pitchersstatstotalSide.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.pitchersstatstotalSide.html",
    "title": "Enum pitchersstatstotalSide | sportradar.livedata.sdk",
    "keywords": "Enum pitchersstatstotalSide Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum pitchersstatstotalSide Fields away = 1 home = 0"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.player.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.player.html",
    "title": "Class player | sportradar.livedata.sdk",
    "keywords": "Class player Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class player : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData player Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties attributes public attribute[] attributes { get; set; } Property Value attribute[] extplayerid public string extplayerid { get; set; } Property Value string id public int id { get; set; } Property Value int matchroles public matchrole[] matchroles { get; set; } Property Value matchrole[] name public string name { get; set; } Property Value string nickname public string nickname { get; set; } Property Value string order public int order { get; set; } Property Value int orderSpecified public bool orderSpecified { get; set; } Property Value bool position public string position { get; set; } Property Value string shirtnumber public int shirtnumber { get; set; } Property Value int substitute public bool substitute { get; set; } Property Value bool substituteSpecified public bool substituteSpecified { get; set; } Property Value bool team public int team { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.playerstats.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.playerstats.html",
    "title": "Class playerstats | sportradar.livedata.sdk",
    "keywords": "Class playerstats Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class playerstats Inheritance object playerstats Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties pid public long pid { get; set; } Property Value long stats public stats[] stats { get; set; } Property Value stats[]"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.possession.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.possession.html",
    "title": "Class possession | sportradar.livedata.sdk",
    "keywords": "Class possession Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class possession : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData possession Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties t1 public int t1 { get; set; } Property Value int t1Specified public bool t1Specified { get; set; } Property Value bool t2 public int t2 { get; set; } Property Value int t2Specified public bool t2Specified { get; set; } Property Value bool team public possessionTeam team { get; set; } Property Value possessionTeam teamSpecified public bool teamSpecified { get; set; } Property Value bool"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.possessionTeam.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.possessionTeam.html",
    "title": "Enum possessionTeam | sportradar.livedata.sdk",
    "keywords": "Enum possessionTeam Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum possessionTeam Fields away = 1 home = 0"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.red.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.red.html",
    "title": "Class red | sportradar.livedata.sdk",
    "keywords": "Class red Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class red : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData red Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties t1 public int t1 { get; set; } Property Value int t2 public int t2 { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.score.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.score.html",
    "title": "Class score | sportradar.livedata.sdk",
    "keywords": "Class score Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class score : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData score Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties score1 public score score1 { get; set; } Property Value score t1 public double t1 { get; set; } Property Value double t2 public double t2 { get; set; } Property Value double type public string type { get; set; } Property Value string"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.scout.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.scout.html",
    "title": "Class scout | sportradar.livedata.sdk",
    "keywords": "Class scout Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class scout Inheritance object scout Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties id public int id { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.serve.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.serve.html",
    "title": "Class serve | sportradar.livedata.sdk",
    "keywords": "Class serve Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class serve : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData serve Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties team public serveTeam team { get; set; } Property Value serveTeam"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.serveTeam.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.serveTeam.html",
    "title": "Enum serveTeam | sportradar.livedata.sdk",
    "keywords": "Enum serveTeam Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum serveTeam Fields away = 1 home = 0"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.servertime.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.servertime.html",
    "title": "Class servertime | sportradar.livedata.sdk",
    "keywords": "Class servertime Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class servertime : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData servertime Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties value public long value { get; set; } Property Value long"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.serverversion.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.serverversion.html",
    "title": "Class serverversion | sportradar.livedata.sdk",
    "keywords": "Class serverversion Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll public class serverversion : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData serverversion Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object)"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.shotsblocked.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.shotsblocked.html",
    "title": "Class shotsblocked | sportradar.livedata.sdk",
    "keywords": "Class shotsblocked Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class shotsblocked : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData shotsblocked Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties t1 public int t1 { get; set; } Property Value int t2 public int t2 { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.shotsofftarget.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.shotsofftarget.html",
    "title": "Class shotsofftarget | sportradar.livedata.sdk",
    "keywords": "Class shotsofftarget Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class shotsofftarget : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData shotsofftarget Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties t1 public int t1 { get; set; } Property Value int t2 public int t2 { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.shotsontarget.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.shotsontarget.html",
    "title": "Class shotsontarget | sportradar.livedata.sdk",
    "keywords": "Class shotsontarget Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class shotsontarget : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData shotsontarget Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties t1 public int t1 { get; set; } Property Value int t2 public int t2 { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.sport.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.sport.html",
    "title": "Class sport | sportradar.livedata.sdk",
    "keywords": "Class sport Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class sport : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData sport Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties id public int id { get; set; } Property Value int name public string name { get; set; } Property Value string"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.statistics.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.statistics.html",
    "title": "Class statistics | sportradar.livedata.sdk",
    "keywords": "Class statistics Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class statistics Inheritance object statistics Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties battersstatstotal public battersstatstotal battersstatstotal { get; set; } Property Value battersstatstotal pitchersstatstotal public pitchersstatstotal pitchersstatstotal { get; set; } Property Value pitchersstatstotal teamstats public teamstats[] teamstats { get; set; } Property Value teamstats[]"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.stats.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.stats.html",
    "title": "Class stats | sportradar.livedata.sdk",
    "keywords": "Class stats Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class stats Inheritance object stats Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties name public string name { get; set; } Property Value string value public string value { get; set; } Property Value string"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.status.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.status.html",
    "title": "Class status | sportradar.livedata.sdk",
    "keywords": "Class status Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class status : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData status Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties id public int id { get; set; } Property Value int name public statusName name { get; set; } Property Value statusName start public long start { get; set; } Property Value long"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.statusName.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.statusName.html",
    "title": "Enum statusName | sportradar.livedata.sdk",
    "keywords": "Enum statusName Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum statusName Fields ABANDONED = 34 AFTER_GOLDEN_SET = 46 AFTER_OT = 44 AFTER_PENALTIES = 45 AFTER_SD = 57 AFTER_SUPER_OVER = 66 AWAITING_GOLDEN_SET = 25 AWAITING_OT = 22 AWAITING_PENALTIES = 24 AWAITING_SD = 56 AWAITING_SUPER_OVER = 63 BREAK_TOP1_BOTTOM1 = 73 BREAK_TOP2_BOTTOM1 = 75 BREAK_TOP2_BOTTOM2 = 77 BREAK_TOP3_BOTTOM2 = 79 BREAK_TOP3_BOTTOM3 = 81 BREAK_TOP4_BOTTOM3 = 83 BREAK_TOP4_BOTTOM4 = 85 BREAK_TOP5_BOTTOM4 = 87 BREAK_TOP5_BOTTOM5 = 89 BREAK_TOP6_BOTTOM5 = 91 BREAK_TOP6_BOTTOM6 = 93 BREAK_TOP7_BOTTOM6 = 95 BREAK_TOP7_BOTTOM7 = 97 BREAK_TOP8_BOTTOM7 = 99 BREAK_TOP8_BOTTOM8 = 101 BREAK_TOP9_BOTTOM8 = 103 BREAK_TOP9_BOTTOM9 = 105 BREAK_TOPEI_BOTTOM7 = 107 BREAK_TOPEI_BOTTOM9 = 108 BREAK_TOPEI_BOTTOMEI = 110 CANCELLED = 32 DEFAULTED1 = 41 DEFAULTED2 = 42 DELAYED = 31 EIGHTH_INNING_BOTTOM = 102 EIGHTH_INNING_TOP = 100 ENDED = 43 EXTRA_INNING_BOTTOM = 111 EXTRA_INNING_TOP = 109 FIFTH_GAME = 123 FIFTH_INNING_BOTTOM = 90 FIFTH_INNING_TOP = 88 FIFTH_MAP = 116 FIFTH_PAUSE = 51 FIFTH_PERIOD = 5 FIFTH_SET = 12 FIRST_GAME = 119 FIRST_HALF = 6 FIRST_HALF_OT = 27 FIRST_INNINGS_AWAY_TEAM = 60 FIRST_INNINGS_HOME_TEAM = 59 FIRST_INNING_BOTTOM = 74 FIRST_INNING_TOP = 72 FIRST_MAP = 112 FIRST_PAUSE = 47 FIRST_PERIOD = 1 FIRST_QUARTER = 13 FIRST_SET = 8 FOURTH_GAME = 122 FOURTH_INNING_BOTTOM = 86 FOURTH_INNING_TOP = 84 FOURTH_MAP = 115 FOURTH_PAUSE = 50 FOURTH_PERIOD = 4 FOURTH_QUARTER = 16 FOURTH_SET = 11 GOLDEN_SET = 17 HALFTIME = 21 INNINGS_BREAK = 67 INTERRUPTED = 33 IN_PROGRESS = 19 LUNCH_BREAK = 69 NINTH_INNING_BOTTOM = 106 NINTH_INNING_TOP = 104 NOT_STARTED = 0 OT_HALFTIME = 23 OVERTIME = 26 PAUSE = 20 PENALTY_SHOOTING = 29 POSTPONED = 30 RETIRED = 36 RETIRED1 = 39 RETIRED2 = 40 SECOND_GAME = 120 SECOND_HALF = 7 SECOND_HALF_OT = 28 SECOND_INNINGS_AWAY_TEAM = 62 SECOND_INNINGS_HOME_TEAM = 61 SECOND_INNING_BOTTOM = 78 SECOND_INNING_TOP = 76 SECOND_MAP = 113 SECOND_PAUSE = 48 SECOND_PERIOD = 2 SECOND_QUARTER = 14 SECOND_SET = 9 SESSION_BREAK = 58 SEVENTH_INNING_BOTTOM = 98 SEVENTH_INNING_TOP = 96 SEVENTH_MAP = 118 SEVENTH_SET = 55 SIXTH_INNING_BOTTOM = 94 SIXTH_INNING_TOP = 92 SIXTH_MAP = 117 SIXTH_PAUSE = 52 SIXTH_SET = 54 STARTED = 18 STUMPS = 71 SUDDEN_DEATH = 53 SUPER_OVER_AWAY_TEAM = 65 SUPER_OVER_BREAK = 68 SUPER_OVER_HOME_TEAM = 64 TEA_BREAK = 70 THIRD_GAME = 121 THIRD_INNING_BOTTOM = 82 THIRD_INNING_TOP = 80 THIRD_MAP = 114 THIRD_PAUSE = 49 THIRD_PERIOD = 3 THIRD_QUARTER = 15 THIRD_SET = 10 WALKOVER = 35 WALKOVER1 = 37 WALKOVER2 = 38"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.subteam.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.subteam.html",
    "title": "Class subteam | sportradar.livedata.sdk",
    "keywords": "Class subteam Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class subteam : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData subteam Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties id public int id { get; set; } Property Value int name public string name { get; set; } Property Value string parent public int parent { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.surfacetype.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.surfacetype.html",
    "title": "Class surfacetype | sportradar.livedata.sdk",
    "keywords": "Class surfacetype Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class surfacetype : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData surfacetype Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties id public int id { get; set; } Property Value int name public surfacetypeName name { get; set; } Property Value surfacetypeName"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.surfacetypeName.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.surfacetypeName.html",
    "title": "Enum surfacetypeName | sportradar.livedata.sdk",
    "keywords": "Enum surfacetypeName Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum surfacetypeName Fields CARPET = 3 GRASS = 2 HARDCOURT = 1 SAND = 0 UNKNOWN = 4"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.suspensions.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.suspensions.html",
    "title": "Class suspensions | sportradar.livedata.sdk",
    "keywords": "Class suspensions Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class suspensions : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData suspensions Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties powerplay public int powerplay { get; set; } Property Value int powerplaySpecified public bool powerplaySpecified { get; set; } Property Value bool t1 public int t1 { get; set; } Property Value int t2 public int t2 { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.team.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.team.html",
    "title": "Class team | sportradar.livedata.sdk",
    "keywords": "Class team Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class team Inheritance object team Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties nationality public string nationality { get; set; } Property Value string side public teamSide side { get; set; } Property Value teamSide"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.teamSide.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.teamSide.html",
    "title": "Enum teamSide | sportradar.livedata.sdk",
    "keywords": "Enum teamSide Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum teamSide Fields away = 1 home = 0"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.teamofficial.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.teamofficial.html",
    "title": "Class teamofficial | sportradar.livedata.sdk",
    "keywords": "Class teamofficial Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class teamofficial Inheritance object teamofficial Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties id public int id { get; set; } Property Value int name public string name { get; set; } Property Value string team public int team { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.teams.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.teams.html",
    "title": "Class teams | sportradar.livedata.sdk",
    "keywords": "Class teams Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class teams Inheritance object teams Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties team public team[] team { get; set; } Property Value team[]"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.teamstats.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.teamstats.html",
    "title": "Class teamstats | sportradar.livedata.sdk",
    "keywords": "Class teamstats Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class teamstats Inheritance object teamstats Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties side public teamstatsSide side { get; set; } Property Value teamstatsSide stats public stats[] stats { get; set; } Property Value stats[] type public teamstatsType type { get; set; } Property Value teamstatsType"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.teamstatsSide.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.teamstatsSide.html",
    "title": "Enum teamstatsSide | sportradar.livedata.sdk",
    "keywords": "Enum teamstatsSide Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum teamstatsSide Fields away = 1 home = 0"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.teamstatsType.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.teamstatsType.html",
    "title": "Enum teamstatsType | sportradar.livedata.sdk",
    "keywords": "Enum teamstatsType Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum teamstatsType Fields inning1 = 1 inning2 = 2 inning3 = 3 inning4 = 4 inning5 = 5 inning6 = 6 inning7 = 7 inning8 = 8 inning9 = 9 inninge = 10 total = 0"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.throwins.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.throwins.html",
    "title": "Class throwins | sportradar.livedata.sdk",
    "keywords": "Class throwins Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class throwins : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData throwins Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties t1 public int t1 { get; set; } Property Value int t2 public int t2 { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.tiebreak.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.tiebreak.html",
    "title": "Class tiebreak | sportradar.livedata.sdk",
    "keywords": "Class tiebreak Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class tiebreak : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData tiebreak Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties value public int value { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.tournament.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.tournament.html",
    "title": "Class tournament | sportradar.livedata.sdk",
    "keywords": "Class tournament Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class tournament : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData tournament Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties id public int id { get; set; } Property Value int name public string name { get; set; } Property Value string"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.user.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.user.html",
    "title": "Class user | sportradar.livedata.sdk",
    "keywords": "Class user Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class user : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData user Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties bookmakerid public int bookmakerid { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.weatherconditions.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.weatherconditions.html",
    "title": "Class weatherconditions | sportradar.livedata.sdk",
    "keywords": "Class weatherconditions Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class weatherconditions : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData weatherconditions Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties id public int id { get; set; } Property Value int name public weatherconditionsName name { get; set; } Property Value weatherconditionsName"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.weatherconditionsName.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.weatherconditionsName.html",
    "title": "Enum weatherconditionsName | sportradar.livedata.sdk",
    "keywords": "Enum weatherconditionsName Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public enum weatherconditionsName Fields BAD = 2 EXTREME = 5 GOOD = 0 INDOOR = 4 MEDIUM = 1 UNKNOWN = 3"
  },
  "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.yellow.html": {
    "href": "api/Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server.yellow.html",
    "title": "Class yellow | sportradar.livedata.sdk",
    "keywords": "Class yellow Namespace Sportradar.LiveData.Sdk.Providers.Protocols.LiveScout.Server Assembly Sportradar.LiveData.Sdk.dll [Serializable] public class yellow : ServerData, IProtocolResponse, IProtocolBase Inheritance object ServerData yellow Implements IProtocolResponse IProtocolBase Inherited Members ServerData.GetMessageType() ServerData.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties t1 public int t1 { get; set; } Property Value int t2 public int t2 { get; set; } Property Value int"
  },
  "api/Sportradar.LiveData.Sdk.Service.LiveScoutTest.html": {
    "href": "api/Sportradar.LiveData.Sdk.Service.LiveScoutTest.html",
    "title": "Class LiveScoutTest | sportradar.livedata.sdk",
    "keywords": "Class LiveScoutTest Namespace Sportradar.LiveData.Sdk.Service Assembly Sportradar.LiveData.Sdk.Service.dll public class LiveScoutTest Inheritance object LiveScoutTest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LiveScoutTest() public LiveScoutTest() Methods Run() public void Run()"
  },
  "api/Sportradar.LiveData.Sdk.Service.Program.html": {
    "href": "api/Sportradar.LiveData.Sdk.Service.Program.html",
    "title": "Class Program | sportradar.livedata.sdk",
    "keywords": "Class Program Namespace Sportradar.LiveData.Sdk.Service Assembly Sportradar.LiveData.Sdk.Service.dll public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Main(string[]) public static void Main(string[] args) Parameters args string[]"
  },
  "api/Sportradar.LiveData.Sdk.Service.Worker.html": {
    "href": "api/Sportradar.LiveData.Sdk.Service.Worker.html",
    "title": "Class Worker | sportradar.livedata.sdk",
    "keywords": "Class Worker Namespace Sportradar.LiveData.Sdk.Service Assembly Sportradar.LiveData.Sdk.Service.dll public class Worker : BackgroundService, IHostedService, IDisposable Inheritance object BackgroundService Worker Implements IHostedService IDisposable Inherited Members BackgroundService.StartAsync(CancellationToken) BackgroundService.StopAsync(CancellationToken) BackgroundService.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Worker() public Worker() Methods ExecuteAsync(CancellationToken) This method is called when the IHostedService starts. The implementation should return a task that represents the lifetime of the long running operation(s) being performed. protected override Task ExecuteAsync(CancellationToken stoppingToken) Parameters stoppingToken CancellationToken Triggered when StopAsync(CancellationToken) is called. Returns Task A Task that represents the long running operations."
  },
  "api/Sportradar.LiveData.Sdk.Service.html": {
    "href": "api/Sportradar.LiveData.Sdk.Service.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Service | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Service Classes LiveScoutTest Program Worker"
  },
  "api/Sportradar.LiveData.Sdk.Services.MessageDispatcher.MessageDispatcher.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.MessageDispatcher.MessageDispatcher.html",
    "title": "Class MessageDispatcher | sportradar.livedata.sdk",
    "keywords": "Class MessageDispatcher Namespace Sportradar.LiveData.Sdk.Services.MessageDispatcher Assembly Sportradar.LiveData.Sdk.dll public class MessageDispatcher : IMessageDispatcher, IStartable Inheritance object MessageDispatcher Implements IMessageDispatcher IStartable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MessageDispatcher(ISdkConfiguration, IDeadLetterQueue, ISdkLogger, IList<ILimitedPriorityQueue>) public MessageDispatcher(ISdkConfiguration config, IDeadLetterQueue dead_letter_queue, ISdkLogger sdk_logger, IList<ILimitedPriorityQueue> dispatcher_queues) Parameters config ISdkConfiguration dead_letter_queue IDeadLetterQueue sdk_logger ISdkLogger dispatcher_queues IList<ILimitedPriorityQueue> Fields m_sdk_logger protected ISdkLogger m_sdk_logger Field Value ISdkLogger Properties HealthStatus public bool HealthStatus { get; } Property Value bool Methods EnqueueEntity(ProtocolProviderType, EntityBase) public void EnqueueEntity(ProtocolProviderType provider, EntityBase entity) Parameters provider ProtocolProviderType entity EntityBase RegisterFeedDispatchers(IList<IFeedDispatcher>) public void RegisterFeedDispatchers(IList<IFeedDispatcher> feed_dispatchers) Parameters feed_dispatchers IList<IFeedDispatcher> Start() Start component. public void Start() Remarks The component should be initialized first. Stop() Stop / shutdown component. public void Stop() Events OnDispatcherHealthStatusChanged public event MessageDispatcherDelegates.DispatcherHealthStatusDelegate OnDispatcherHealthStatusChanged Event Type MessageDispatcherDelegates.DispatcherHealthStatusDelegate"
  },
  "api/Sportradar.LiveData.Sdk.Services.MessageDispatcher.SafeMessageDispatcher.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.MessageDispatcher.SafeMessageDispatcher.html",
    "title": "Class SafeMessageDispatcher | sportradar.livedata.sdk",
    "keywords": "Class SafeMessageDispatcher Namespace Sportradar.LiveData.Sdk.Services.MessageDispatcher Assembly Sportradar.LiveData.Sdk.dll public class SafeMessageDispatcher : IMessageDispatcher, IStartable Inheritance object SafeMessageDispatcher Implements IMessageDispatcher IStartable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SafeMessageDispatcher(ISdkConfiguration, IPriorityQueue) public SafeMessageDispatcher(ISdkConfiguration config, IPriorityQueue msg_queue) Parameters config ISdkConfiguration msg_queue IPriorityQueue Properties HealthStatus public bool HealthStatus { get; } Property Value bool OperationMode public DispatcherOperationMode OperationMode { get; set; } Property Value DispatcherOperationMode Methods EnqueueEntity(ProtocolProviderType, EntityBase) public void EnqueueEntity(ProtocolProviderType provider, EntityBase entity) Parameters provider ProtocolProviderType entity EntityBase RegisterFeedDispatchers(IList<IFeedDispatcher>) public void RegisterFeedDispatchers(IList<IFeedDispatcher> feed_dispatchers) Parameters feed_dispatchers IList<IFeedDispatcher> Start() Start component. public void Start() Remarks The component should be initialized first. Stop() Stop / shutdown component. public void Stop() Events OnDispatcherHealthStatusChanged public event MessageDispatcherDelegates.DispatcherHealthStatusDelegate OnDispatcherHealthStatusChanged Event Type MessageDispatcherDelegates.DispatcherHealthStatusDelegate"
  },
  "api/Sportradar.LiveData.Sdk.Services.MessageDispatcher.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.MessageDispatcher.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Services.MessageDispatcher | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Services.MessageDispatcher Classes MessageDispatcher SafeMessageDispatcher"
  },
  "api/Sportradar.LiveData.Sdk.Services.NullObjects.DummyDeadLetterQueue.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.NullObjects.DummyDeadLetterQueue.html",
    "title": "Class DummyDeadLetterQueue | sportradar.livedata.sdk",
    "keywords": "Class DummyDeadLetterQueue Namespace Sportradar.LiveData.Sdk.Services.NullObjects Assembly Sportradar.LiveData.Sdk.dll public class DummyDeadLetterQueue : IDeadLetterQueue Inheritance object DummyDeadLetterQueue Implements IDeadLetterQueue Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Enqueue(EntityBase) Enqueues a message into dead letter queue after the message was removed from the poison queue and could not be delivered successfully to the client. public void Enqueue(EntityBase failed_msg) Parameters failed_msg EntityBase Failed msg"
  },
  "api/Sportradar.LiveData.Sdk.Services.NullObjects.DummyPersistentState.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.NullObjects.DummyPersistentState.html",
    "title": "Class DummyPersistentState | sportradar.livedata.sdk",
    "keywords": "Class DummyPersistentState Namespace Sportradar.LiveData.Sdk.Services.NullObjects Assembly Sportradar.LiveData.Sdk.dll public class DummyPersistentState : IClientPersistentState Inheritance object DummyPersistentState Implements IClientPersistentState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Clear() Clears persistent state store contents. public void Clear() Read(string) Retrieves value for the given key from the persistent store. public ClientPersistentStateItem Read(string key) Parameters key string Key Returns ClientPersistentStateItem Retrieved item Remarks Returns null if key is not found. Used at error recovery and for double-checking whether persistent state store contents are consistent with buffered values. ReadAll() Returns all persistent state items from the store. public IEnumerable<ClientPersistentStateItem> ReadAll() Returns IEnumerable<ClientPersistentStateItem> All persistent state items from the store Remove(string) Removes an item by key public void Remove(string key) Parameters key string Key RemoveOld(DateTime) Removes stale persistent state items that haven't been updated in a while. public void RemoveOld(DateTime max_age) Parameters max_age DateTime All items older than max_age will be removed from the store Write(IList<ClientPersistentStateItem>) Write batch of key-value pairs into client provided persistent store (DB, file system). public void Write(IList<ClientPersistentStateItem> items) Parameters items IList<ClientPersistentStateItem> Batch of items Remarks Overwrites existing values so that stale items can be removed."
  },
  "api/Sportradar.LiveData.Sdk.Services.NullObjects.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.NullObjects.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Services.NullObjects | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Services.NullObjects Classes DummyDeadLetterQueue DummyPersistentState"
  },
  "api/Sportradar.LiveData.Sdk.Services.PersistentStateBuffer.PersistentStateBuffer.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.PersistentStateBuffer.PersistentStateBuffer.html",
    "title": "Class PersistentStateBuffer | sportradar.livedata.sdk",
    "keywords": "Class PersistentStateBuffer Namespace Sportradar.LiveData.Sdk.Services.PersistentStateBuffer Assembly Sportradar.LiveData.Sdk.dll In-memory state cache. public class PersistentStateBuffer : IPersistentStateBuffer, IStartable Inheritance object PersistentStateBuffer Implements IPersistentStateBuffer IStartable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Originally it was designed so that a client could provide its own DB access methods for the state persistency. Now SDK has a built-in SQLite DB state store so that all error validations are not really necessary but still here for consistency. Constructors PersistentStateBuffer(IClientPersistentState, ISdkConfiguration, ISdkLogger) public PersistentStateBuffer(IClientPersistentState state, ISdkConfiguration config, ISdkLogger sdk_logger) Parameters state IClientPersistentState config ISdkConfiguration sdk_logger ISdkLogger Fields g_random protected static Random g_random Field Value Random m_sdk_logger protected ISdkLogger m_sdk_logger Field Value ISdkLogger Properties TestStatus Returns true if persistent state buffer is in consistent state and if the underlying client state store is functioning properly. public bool TestStatus { get; } Property Value bool Methods Clear() Clears persistent state store contents. public virtual void Clear() Flush() public void Flush() GetAllProviderItems(ProtocolProviderType) Returns all persistent state items that belong to specific provider. public IEnumerable<PersistentStateItem> GetAllProviderItems(ProtocolProviderType provider_type) Parameters provider_type ProtocolProviderType Provider type Returns IEnumerable<PersistentStateItem> All persistent state items that belong to specific provider. Read(PersistentStateItemKey) Retrieves value for the given key from the persistent store. public virtual PersistentStateItem Read(PersistentStateItemKey key) Parameters key PersistentStateItemKey Key Returns PersistentStateItem Retrieved item Remarks Returns null if key is not found. Used at error recovery and for double-checking whether persistent state store contents are consistent with buffered values. Remove(PersistentStateItemKey) Removes an item by key public virtual void Remove(PersistentStateItemKey key) Parameters key PersistentStateItemKey Key Start() Start component. public void Start() Remarks The component should be initialized first. Stop() Stop / shutdown component. public void Stop() Write(PersistentStateItem) Write persistent state item into client provided persistent store (DB, file system). public virtual void Write(PersistentStateItem item) Parameters item PersistentStateItem Persistent state item Remarks Overwrites existing values so that stale items can be removed. Events OnPersistentStateStatusChanged Fires event whenever persistent state buffer encounters an error condition (e.g. underlying state store error) public event PersistentStateDelegates.PersistentStateStatusChangedDelegate OnPersistentStateStatusChanged Event Type PersistentStateDelegates.PersistentStateStatusChangedDelegate"
  },
  "api/Sportradar.LiveData.Sdk.Services.PersistentStateBuffer.SafePersistentStateBuffer.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.PersistentStateBuffer.SafePersistentStateBuffer.html",
    "title": "Class SafePersistentStateBuffer | sportradar.livedata.sdk",
    "keywords": "Class SafePersistentStateBuffer Namespace Sportradar.LiveData.Sdk.Services.PersistentStateBuffer Assembly Sportradar.LiveData.Sdk.dll public class SafePersistentStateBuffer : IPersistentStateBuffer, IStartable Inheritance object SafePersistentStateBuffer Implements IPersistentStateBuffer IStartable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SafePersistentStateBuffer() public SafePersistentStateBuffer() Properties TestStatus Returns true if persistent state buffer is in consistent state and if the underlying client state store is functioning properly. public bool TestStatus { get; } Property Value bool Methods Clear() Clears persistent state store contents. public void Clear() GetAllProviderItems(ProtocolProviderType) Returns all persistent state items that belong to specific provider. public IEnumerable<PersistentStateItem> GetAllProviderItems(ProtocolProviderType provider_type) Parameters provider_type ProtocolProviderType Provider type Returns IEnumerable<PersistentStateItem> All persistent state items that belong to specific provider. Read(PersistentStateItemKey) Retrieves value for the given key from the persistent store. public PersistentStateItem Read(PersistentStateItemKey key) Parameters key PersistentStateItemKey Key Returns PersistentStateItem Retrieved item Remarks Returns null if key is not found. Used at error recovery and for double-checking whether persistent state store contents are consistent with buffered values. Remove(PersistentStateItemKey) Removes an item by key public void Remove(PersistentStateItemKey key) Parameters key PersistentStateItemKey Key Start() Start component. public void Start() Remarks The component should be initialized first. Stop() Stop / shutdown component. public void Stop() Write(PersistentStateItem) Write persistent state item into client provided persistent store (DB, file system). public void Write(PersistentStateItem item) Parameters item PersistentStateItem Persistent state item Remarks Overwrites existing values so that stale items can be removed. Events OnPersistentStateStatusChanged Fires event whenever persistent state buffer encounters an error condition (e.g. underlying state store error) public event PersistentStateDelegates.PersistentStateStatusChangedDelegate OnPersistentStateStatusChanged Event Type PersistentStateDelegates.PersistentStateStatusChangedDelegate"
  },
  "api/Sportradar.LiveData.Sdk.Services.PersistentStateBuffer.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.PersistentStateBuffer.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Services.PersistentStateBuffer | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Services.PersistentStateBuffer Classes PersistentStateBuffer In-memory state cache. SafePersistentStateBuffer"
  },
  "api/Sportradar.LiveData.Sdk.Services.PriorityQueue.BinaryHeap.BinaryHeapEnumerator.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.PriorityQueue.BinaryHeap.BinaryHeapEnumerator.html",
    "title": "Class BinaryHeap.BinaryHeapEnumerator | sportradar.livedata.sdk",
    "keywords": "Class BinaryHeap.BinaryHeapEnumerator Namespace Sportradar.LiveData.Sdk.Services.PriorityQueue Assembly Sportradar.LiveData.Sdk.dll Enumerator for entries in the heap. public class BinaryHeap.BinaryHeapEnumerator : IEnumerator Inheritance object BinaryHeap.BinaryHeapEnumerator Implements IEnumerator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Current Gets the current object in the list. public object Current { get; } Property Value object Methods MoveNext() Moves to the next item in the list. public bool MoveNext() Returns bool Whether there are more items in the list. Reset() Resets the enumerator. public void Reset()"
  },
  "api/Sportradar.LiveData.Sdk.Services.PriorityQueue.BinaryHeap.SyncBinaryHeap.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.PriorityQueue.BinaryHeap.SyncBinaryHeap.html",
    "title": "Class BinaryHeap.SyncBinaryHeap | sportradar.livedata.sdk",
    "keywords": "Class BinaryHeap.SyncBinaryHeap Namespace Sportradar.LiveData.Sdk.Services.PriorityQueue Assembly Sportradar.LiveData.Sdk.dll A synchronized BinaryHeap. public class BinaryHeap.SyncBinaryHeap : BinaryHeap, ICollection, IEnumerable, ICloneable Inheritance object BinaryHeap BinaryHeap.SyncBinaryHeap Implements ICollection IEnumerable ICloneable Inherited Members BinaryHeap.BottomElement() BinaryHeap.RemoveLast() BinaryHeap.TopElement() BinaryHeap.SyncRoot BinaryHeap.Synchronize(BinaryHeap) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Count Gets the number of objects stored in the heap. public override int Count { get; } Property Value int IsSynchronized Gets a value indicating whether this heap is synchronized. public override bool IsSynchronized { get; } Property Value bool Methods Clear() Empties the heap. public override void Clear() Clone() Performs a shallow-copy of the heap. public override BinaryHeap Clone() Returns BinaryHeap A shallow-copy of the heap. Contains(object) Determines whether an object is in the heap. public override bool Contains(object value) Parameters value object The object for which we want to search. Returns bool Whether the object is in the heap. CopyTo(Array, int) Copies the entire heap to a compatible one-dimensional array, starting at the given index. public override void CopyTo(Array array, int index) Parameters array Array The array to which the heap should be copied. index int The starting index. GetEnumerator() Gets an enumerator for the heap. public override IEnumerator GetEnumerator() Returns IEnumerator An enumerator for all elements of the heap. Insert(object, object) Adds an item to the heap. public override void Insert(object key, object value) Parameters key object The key for this entry. value object The value for this entry. Remove() Removes the entry at the top of the heap. public override object Remove() Returns object The removed entry."
  },
  "api/Sportradar.LiveData.Sdk.Services.PriorityQueue.BinaryHeap.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.PriorityQueue.BinaryHeap.html",
    "title": "Class BinaryHeap | sportradar.livedata.sdk",
    "keywords": "Class BinaryHeap Namespace Sportradar.LiveData.Sdk.Services.PriorityQueue Assembly Sportradar.LiveData.Sdk.dll Collection implemented with the properties of a binary heap. public class BinaryHeap : ICollection, IEnumerable, ICloneable Inheritance object BinaryHeap Implements ICollection IEnumerable ICloneable Derived BinaryHeap.SyncBinaryHeap Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BinaryHeap() Initialize the heap. public BinaryHeap() BinaryHeap(BinaryHeap) Initialize the heap with another heap. public BinaryHeap(BinaryHeap heap) Parameters heap BinaryHeap The heap on which to perform a shallow-copy. BinaryHeap(IComparer) Initialize the heap. public BinaryHeap(IComparer comparer) Parameters comparer IComparer BinaryHeap(IComparer, int) Initialize the heap. public BinaryHeap(IComparer comparer, int capacity) Parameters comparer IComparer capacity int BinaryHeap(int) Initialize the heap. public BinaryHeap(int capacity) Parameters capacity int The initial size of the heap. Properties Count Gets the number of objects stored in the heap. public virtual int Count { get; } Property Value int IsSynchronized Gets a value indicating whether this heap is synchronized. public virtual bool IsSynchronized { get; } Property Value bool SyncRoot Gets an object which can be locked in order to synchronize this class. public object SyncRoot { get; } Property Value object Methods BottomElement() Checks the entry at the bottom of the heap. public virtual object BottomElement() Returns object The entry. Clear() Empties the heap. public virtual void Clear() Clone() Performs a shallow-copy of the heap. public virtual BinaryHeap Clone() Returns BinaryHeap A shallow-copy of the heap. Contains(object) Determines whether an object is in the heap. public virtual bool Contains(object value) Parameters value object The object for which we want to search. Returns bool Whether the object is in the heap. CopyTo(Array, int) Copies the entire heap to a compatible one-dimensional array, starting at the given index. public virtual void CopyTo(Array array, int index) Parameters array Array The array to which the heap should be copied. index int The starting index. GetEnumerator() Gets an enumerator for the heap. public virtual IEnumerator GetEnumerator() Returns IEnumerator An enumerator for all elements of the heap. Insert(object, object) Adds an item to the heap. public virtual void Insert(object key, object value) Parameters key object The key for this entry. value object The value for this entry. Remove() Removes the entry at the top of the heap. public virtual object Remove() Returns object The removed entry. RemoveLast() Remove the worst element. public object RemoveLast() Returns object Synchronize(BinaryHeap) Ensures that heap is wrapped in a synchronous wrapper. public static BinaryHeap Synchronize(BinaryHeap heap) Parameters heap BinaryHeap The heap to be wrapped. Returns BinaryHeap A synchronized wrapper for the heap. TopElement() Checks the entry at the top of the heap. public virtual object TopElement() Returns object The entry."
  },
  "api/Sportradar.LiveData.Sdk.Services.PriorityQueue.ILimitedPriorityQueue.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.PriorityQueue.ILimitedPriorityQueue.html",
    "title": "Interface ILimitedPriorityQueue | sportradar.livedata.sdk",
    "keywords": "Interface ILimitedPriorityQueue Namespace Sportradar.LiveData.Sdk.Services.PriorityQueue Assembly Sportradar.LiveData.Sdk.dll Limited priority queue public interface public interface ILimitedPriorityQueue : IPriorityQueue Inherited Members IPriorityQueue.Count IPriorityQueue.Name IPriorityQueue.QueueStats IPriorityQueue.Clear() IPriorityQueue.Dequeue() IPriorityQueue.Dequeue(TimeSpan) IPriorityQueue.Dequeue(Priority) IPriorityQueue.Dequeue(Priority, TimeSpan) IPriorityQueue.Enqueue(PriorityQueueElt) IPriorityQueue.Peek(TimeSpan) IPriorityQueue.Peek() Events OnLimits Signals that a queue limit (HIGH, LOW, NORMAL) has been reached or retreated for a specific queue. event LimitedPriorityQueueDelegates.QueueLimitDelegate OnLimits Event Type LimitedPriorityQueueDelegates.QueueLimitDelegate"
  },
  "api/Sportradar.LiveData.Sdk.Services.PriorityQueue.IPriorityQueue.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.PriorityQueue.IPriorityQueue.html",
    "title": "Interface IPriorityQueue | sportradar.livedata.sdk",
    "keywords": "Interface IPriorityQueue Namespace Sportradar.LiveData.Sdk.Services.PriorityQueue Assembly Sportradar.LiveData.Sdk.dll Generic priority queue interface public interface IPriorityQueue Properties Count Number of items in the queue. int Count { get; } Property Value int Name Priority queue name string Name { get; set; } Property Value string QueueStats Queue statistic (total, daily, hourly, minutely). Various avg/min/max performance queue counters. IQueueTimeStats QueueStats { get; } Property Value IQueueTimeStats Methods Clear() Empties the queue. void Clear() Dequeue() Dequeues an object from the priority queue. Returns null if the queue is empty PriorityQueueElt Dequeue() Returns PriorityQueueElt The top item (max priority) from the queue or null if it does not exist. Dequeue(Priority) Dequeues an object of specific priority from the priority queue. Returns null if the queue is empty. PriorityQueueElt Dequeue(Priority prio) Parameters prio Priority Priority constraint Returns PriorityQueueElt The top item (max priority) from the queue or null if it does not exist. Dequeue(Priority, TimeSpan) Dequeues an object of specific priority from the priority queue. PriorityQueueElt Dequeue(Priority prio, TimeSpan timeout) Parameters prio Priority Priority constraint timeout TimeSpan The number of milliseconds to wait Returns PriorityQueueElt The top item (max priority) from the queue. Returns null in case of timeout. Dequeue(TimeSpan) Dequeues an object from the priority queue. PriorityQueueElt Dequeue(TimeSpan timeout) Parameters timeout TimeSpan The number of milliseconds to wait Returns PriorityQueueElt The top item (max priority) from the queue. Returns null in case of timeout. Enqueue(PriorityQueueElt) Enqueues an item to the priority queue. void Enqueue(PriorityQueueElt obj) Parameters obj PriorityQueueElt The object to be enqueued. Peek() Returns the value of the element at the top of the queue (highest priority) without removing it from the queue. Returns with null immediately if the queue is empty. PriorityQueueElt Peek() Returns PriorityQueueElt The top item (max priority) from the queue or null if it does not exist. Peek(TimeSpan) Returns the value of the element at the top of the queue (highest priority) without removing it from the queue. PriorityQueueElt Peek(TimeSpan timeout) Parameters timeout TimeSpan The number of milliseconds to wait Returns PriorityQueueElt The top item (max priority) from the queue or null if it doesn't exist."
  },
  "api/Sportradar.LiveData.Sdk.Services.PriorityQueue.LimitedPriorityQueue.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.PriorityQueue.LimitedPriorityQueue.html",
    "title": "Class LimitedPriorityQueue | sportradar.livedata.sdk",
    "keywords": "Class LimitedPriorityQueue Namespace Sportradar.LiveData.Sdk.Services.PriorityQueue Assembly Sportradar.LiveData.Sdk.dll Extends basic PriorityQueue implementation by checking the queue capacity limits and lo-hi queue watermarks. Whenever one of those thresholds are breached an OnLimits event is triggered. Lo watermark can be used to detect that a queue is slowly getting filled up and there is still time to react to this. High watermark usually triggers some self-defense mechanism like stopping all incoming message delivery and processing. This is a thread-safe implementation. public class LimitedPriorityQueue : PriorityQueue, ILimitedPriorityQueue, IPriorityQueue Inheritance object PriorityQueue LimitedPriorityQueue Implements ILimitedPriorityQueue IPriorityQueue Inherited Members PriorityQueue.m_item_sema PriorityQueue.m_queue_name PriorityQueue.m_queue_stats PriorityQueue.m_queues PriorityQueue.m_sdk_logger PriorityQueue.Count PriorityQueue.Name PriorityQueue.QueueStats PriorityQueue.Peek(TimeSpan) PriorityQueue.Peek() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LimitedPriorityQueue(ISdkLogger, ISdkConfiguration) public LimitedPriorityQueue(ISdkLogger sdk_logger, ISdkConfiguration config) Parameters sdk_logger ISdkLogger config ISdkConfiguration Fields m_config protected ISdkConfiguration m_config Field Value ISdkConfiguration m_high_limit_reached protected bool m_high_limit_reached Field Value bool m_low_limit_reached protected bool m_low_limit_reached Field Value bool Methods Clear() Empties the queue. public override void Clear() Dequeue() Dequeues an object from the priority queue. Returns null if the queue is empty public override PriorityQueueElt Dequeue() Returns PriorityQueueElt The top item (max priority) from the queue or null if it does not exist. Dequeue(Priority) Dequeues an object of specific priority from the priority queue. Returns null if the queue is empty. public override PriorityQueueElt Dequeue(Priority prio) Parameters prio Priority Priority constraint Returns PriorityQueueElt The top item (max priority) from the queue or null if it does not exist. Dequeue(Priority, TimeSpan) Dequeues an object of specific priority from the priority queue. public override PriorityQueueElt Dequeue(Priority prio, TimeSpan timeout) Parameters prio Priority Priority constraint timeout TimeSpan The number of milliseconds to wait Returns PriorityQueueElt The top item (max priority) from the queue. Returns null in case of timeout. Dequeue(TimeSpan) Dequeues an object from the priority queue. public override PriorityQueueElt Dequeue(TimeSpan timeout) Parameters timeout TimeSpan The number of milliseconds to wait Returns PriorityQueueElt The top item (max priority) from the queue. Returns null in case of timeout. Enqueue(PriorityQueueElt) Enqueues an item to the priority queue. public override void Enqueue(PriorityQueueElt elt) Parameters elt PriorityQueueElt Events OnLimits Signals that a queue limit (HIGH, LOW, NORMAL) has been reached or retreated for a specific queue. public event LimitedPriorityQueueDelegates.QueueLimitDelegate OnLimits Event Type LimitedPriorityQueueDelegates.QueueLimitDelegate"
  },
  "api/Sportradar.LiveData.Sdk.Services.PriorityQueue.LimitedPriorityQueueDelegates.QueueLimitDelegate.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.PriorityQueue.LimitedPriorityQueueDelegates.QueueLimitDelegate.html",
    "title": "Delegate LimitedPriorityQueueDelegates.QueueLimitDelegate | sportradar.livedata.sdk",
    "keywords": "Delegate LimitedPriorityQueueDelegates.QueueLimitDelegate Namespace Sportradar.LiveData.Sdk.Services.PriorityQueue Assembly Sportradar.LiveData.Sdk.dll Delegate accepting queue limit reached/retreated events. public delegate void LimitedPriorityQueueDelegates.QueueLimitDelegate(object sender, QueueLimitEventArgs event_args) Parameters sender object Sender of the event event_args QueueLimitEventArgs Event arguments"
  },
  "api/Sportradar.LiveData.Sdk.Services.PriorityQueue.LimitedPriorityQueueDelegates.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.PriorityQueue.LimitedPriorityQueueDelegates.html",
    "title": "Class LimitedPriorityQueueDelegates | sportradar.livedata.sdk",
    "keywords": "Class LimitedPriorityQueueDelegates Namespace Sportradar.LiveData.Sdk.Services.PriorityQueue Assembly Sportradar.LiveData.Sdk.dll Priority queue event delegates public static class LimitedPriorityQueueDelegates Inheritance object LimitedPriorityQueueDelegates Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Sportradar.LiveData.Sdk.Services.PriorityQueue.PriorityQueue.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.PriorityQueue.PriorityQueue.html",
    "title": "Class PriorityQueue | sportradar.livedata.sdk",
    "keywords": "Class PriorityQueue Namespace Sportradar.LiveData.Sdk.Services.PriorityQueue Assembly Sportradar.LiveData.Sdk.dll Simple priority queue implementation supporting only fixed number of priorities. Under the hood it is implemented as N x FIFO queue where elements are ordered by time of arrival. This means that PriorityQueueElt comparison operator is not in use here. Might be extended with LimitedPriorityQueue or replaced by SafePriorityQueue. This is a thread-safe implementation. public class PriorityQueue : IPriorityQueue Inheritance object PriorityQueue Implements IPriorityQueue Derived LimitedPriorityQueue Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PriorityQueue(ISdkLogger) public PriorityQueue(ISdkLogger sdk_logger) Parameters sdk_logger ISdkLogger Fields m_item_sema Semaphore that is set every time a new item is enqueued protected SemaphoreSlim m_item_sema Field Value SemaphoreSlim m_queue_name protected string m_queue_name Field Value string m_queue_stats protected IQueueTimeStats m_queue_stats Field Value IQueueTimeStats m_queues Queues on which the priority queue is based. protected List<Queue<PriorityQueueElt>> m_queues Field Value List<Queue<PriorityQueueElt>> m_sdk_logger protected ISdkLogger m_sdk_logger Field Value ISdkLogger Properties Count Number of items in the queue. public virtual int Count { get; } Property Value int Name Priority queue name public string Name { get; set; } Property Value string QueueStats Queue statistic (total, daily, hourly, minutely). Various avg/min/max performance queue counters. public IQueueTimeStats QueueStats { get; } Property Value IQueueTimeStats Methods Clear() Empties the queue. public virtual void Clear() Dequeue() Dequeues an object from the priority queue. Returns null if the queue is empty public virtual PriorityQueueElt Dequeue() Returns PriorityQueueElt The top item (max priority) from the queue or null if it does not exist. Dequeue(Priority) Dequeues an object of specific priority from the priority queue. Returns null if the queue is empty. public virtual PriorityQueueElt Dequeue(Priority prio) Parameters prio Priority Priority constraint Returns PriorityQueueElt The top item (max priority) from the queue or null if it does not exist. Dequeue(Priority, TimeSpan) Dequeues an object of specific priority from the priority queue. public virtual PriorityQueueElt Dequeue(Priority prio, TimeSpan timeout) Parameters prio Priority Priority constraint timeout TimeSpan The number of milliseconds to wait Returns PriorityQueueElt The top item (max priority) from the queue. Returns null in case of timeout. Dequeue(TimeSpan) Dequeues an object from the priority queue. public virtual PriorityQueueElt Dequeue(TimeSpan timeout) Parameters timeout TimeSpan The number of milliseconds to wait Returns PriorityQueueElt The top item (max priority) from the queue. Returns null in case of timeout. Enqueue(PriorityQueueElt) Enqueues an item to the priority queue. public virtual void Enqueue(PriorityQueueElt elt) Parameters elt PriorityQueueElt Peek() Returns the value of the element at the top of the queue (highest priority) without removing it from the queue. Returns with null immediately if the queue is empty. public virtual PriorityQueueElt Peek() Returns PriorityQueueElt The top item (max priority) from the queue or null if it does not exist. Peek(TimeSpan) Returns the value of the element at the top of the queue (highest priority) without removing it from the queue. public virtual PriorityQueueElt Peek(TimeSpan timeout) Parameters timeout TimeSpan The number of milliseconds to wait Returns PriorityQueueElt The top item (max priority) from the queue or null if it doesn't exist."
  },
  "api/Sportradar.LiveData.Sdk.Services.PriorityQueue.SafePriorityQueue.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.PriorityQueue.SafePriorityQueue.html",
    "title": "Class SafePriorityQueue | sportradar.livedata.sdk",
    "keywords": "Class SafePriorityQueue Namespace Sportradar.LiveData.Sdk.Services.PriorityQueue Assembly Sportradar.LiveData.Sdk.dll Safe priority queue implementation where element priorities are actually not considered. Under the hood this is actually just a wrapper around .Net FIFO Queue where elements are ordered by time of arrival. This means that PriorityQueueElt comparison operator is not in use here. Queue statistics and Limit events are also disabled here. This is a thread-safe implementation. public class SafePriorityQueue : ILimitedPriorityQueue, IPriorityQueue Inheritance object SafePriorityQueue Implements ILimitedPriorityQueue IPriorityQueue Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SafePriorityQueue() public SafePriorityQueue() Fields m_item_sema Semaphore that is set every time a new item is enqueued protected SemaphoreSlim m_item_sema Field Value SemaphoreSlim m_queue_stats protected IQueueTimeStats m_queue_stats Field Value IQueueTimeStats Properties Count Number of items in the queue. public virtual int Count { get; } Property Value int Name Priority queue name public string Name { get; set; } Property Value string QueueStats Queue statistic (total, daily, hourly, minutely). Various avg/min/max performance queue counters. public IQueueTimeStats QueueStats { get; } Property Value IQueueTimeStats Methods Clear() Empties the queue. public void Clear() Dequeue() Dequeues an object from the priority queue. Returns null if the queue is empty public PriorityQueueElt Dequeue() Returns PriorityQueueElt The top item (max priority) from the queue or null if it does not exist. Dequeue(Priority) Dequeues an object of specific priority from the priority queue. Returns null if the queue is empty. public PriorityQueueElt Dequeue(Priority prio) Parameters prio Priority Priority constraint Returns PriorityQueueElt The top item (max priority) from the queue or null if it does not exist. Dequeue(Priority, TimeSpan) Dequeues an object of specific priority from the priority queue. public PriorityQueueElt Dequeue(Priority prio, TimeSpan timeout) Parameters prio Priority Priority constraint timeout TimeSpan The number of milliseconds to wait Returns PriorityQueueElt The top item (max priority) from the queue. Returns null in case of timeout. Dequeue(TimeSpan) Dequeues an object from the priority queue. public PriorityQueueElt Dequeue(TimeSpan timeout) Parameters timeout TimeSpan The number of milliseconds to wait Returns PriorityQueueElt The top item (max priority) from the queue. Returns null in case of timeout. Enqueue(PriorityQueueElt) Enqueues an item to the priority queue. public void Enqueue(PriorityQueueElt obj) Parameters obj PriorityQueueElt The object to be enqueued. Peek() Returns the value of the element at the top of the queue (highest priority) without removing it from the queue. Returns with null immediately if the queue is empty. public PriorityQueueElt Peek() Returns PriorityQueueElt The top item (max priority) from the queue or null if it does not exist. Peek(TimeSpan) Returns the value of the element at the top of the queue (highest priority) without removing it from the queue. public PriorityQueueElt Peek(TimeSpan timeout) Parameters timeout TimeSpan The number of milliseconds to wait Returns PriorityQueueElt The top item (max priority) from the queue or null if it doesn't exist. Events OnLimits Signals that a queue limit (HIGH, LOW, NORMAL) has been reached or retreated for a specific queue. public event LimitedPriorityQueueDelegates.QueueLimitDelegate OnLimits Event Type LimitedPriorityQueueDelegates.QueueLimitDelegate"
  },
  "api/Sportradar.LiveData.Sdk.Services.PriorityQueue.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.PriorityQueue.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Services.PriorityQueue | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Services.PriorityQueue Classes BinaryHeap Collection implemented with the properties of a binary heap. BinaryHeap.BinaryHeapEnumerator Enumerator for entries in the heap. BinaryHeap.SyncBinaryHeap A synchronized BinaryHeap. LimitedPriorityQueue Extends basic PriorityQueue implementation by checking the queue capacity limits and lo-hi queue watermarks. Whenever one of those thresholds are breached an OnLimits event is triggered. Lo watermark can be used to detect that a queue is slowly getting filled up and there is still time to react to this. High watermark usually triggers some self-defense mechanism like stopping all incoming message delivery and processing. This is a thread-safe implementation. LimitedPriorityQueueDelegates Priority queue event delegates PriorityQueue Simple priority queue implementation supporting only fixed number of priorities. Under the hood it is implemented as N x FIFO queue where elements are ordered by time of arrival. This means that PriorityQueueElt comparison operator is not in use here. Might be extended with LimitedPriorityQueue or replaced by SafePriorityQueue. This is a thread-safe implementation. SafePriorityQueue Safe priority queue implementation where element priorities are actually not considered. Under the hood this is actually just a wrapper around .Net FIFO Queue where elements are ordered by time of arrival. This means that PriorityQueueElt comparison operator is not in use here. Queue statistics and Limit events are also disabled here. This is a thread-safe implementation. Interfaces ILimitedPriorityQueue Limited priority queue public interface IPriorityQueue Generic priority queue interface Delegates LimitedPriorityQueueDelegates.QueueLimitDelegate Delegate accepting queue limit reached/retreated events."
  },
  "api/Sportradar.LiveData.Sdk.Services.QueueStats.AvgMinMax-1.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.QueueStats.AvgMinMax-1.html",
    "title": "Struct AvgMinMax<T> | sportradar.livedata.sdk",
    "keywords": "Struct AvgMinMax<T> Namespace Sportradar.LiveData.Sdk.Services.QueueStats Assembly Sportradar.LiveData.Sdk.dll Avg-Min-Max statistics tuple. public struct AvgMinMax<T> : ICloneable where T : struct Type Parameters T Structure type Implements ICloneable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Avg Average value public T? Avg { readonly get; set; } Property Value T? Max Maximum value public T? Max { readonly get; set; } Property Value T? Min Minimum value public T? Min { readonly get; set; } Property Value T? Methods Clone() Creates a new object that is a copy of the current instance. public AvgMinMax<T> Clone() Returns AvgMinMax<T> A new object that is a copy of this instance. Reset() Reset statistics public void Reset() ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.Services.QueueStats.ClientQueueStats.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.QueueStats.ClientQueueStats.html",
    "title": "Class ClientQueueStats | sportradar.livedata.sdk",
    "keywords": "Class ClientQueueStats Namespace Sportradar.LiveData.Sdk.Services.QueueStats Assembly Sportradar.LiveData.Sdk.dll Queue statistics [Serializable] public sealed class ClientQueueStats Inheritance object ClientQueueStats Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Properties DailyStats Queue statistics accumulated in the current day public QueueStats DailyStats { get; } Property Value QueueStats HourlyStats Queue statistics accumulated in the current hour public QueueStats HourlyStats { get; } Property Value QueueStats MinutelyStats Queue statistics accumulated in the current minute public QueueStats MinutelyStats { get; } Property Value QueueStats PrevDailyStats Queue statistics from the last day. public QueueStats PrevDailyStats { get; } Property Value QueueStats Remarks All previous statistics are discarded. PrevHourlyStats Queue statistics from the last hour. public QueueStats PrevHourlyStats { get; } Property Value QueueStats Remarks All previous statistics are discarded. PrevMinutelyStats Queue statistics from the last minute. public QueueStats PrevMinutelyStats { get; } Property Value QueueStats Remarks All previous statistics are discarded. QueueName Queue name public string QueueName { get; } Property Value string TotalStats Queue statistics accumulated from the last stats reset public QueueStats TotalStats { get; } Property Value QueueStats Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.Services.QueueStats.IMonitoring.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.QueueStats.IMonitoring.html",
    "title": "Interface IMonitoring | sportradar.livedata.sdk",
    "keywords": "Interface IMonitoring Namespace Sportradar.LiveData.Sdk.Services.QueueStats Assembly Sportradar.LiveData.Sdk.dll Feed monitoring interface public interface IMonitoring Properties DispatcherQueueStats Returns queue stats for every dispatcher queue. IList<ClientQueueStats> DispatcherQueueStats { get; } Property Value IList<ClientQueueStats> MainQueueStats Returns main queue stats. ClientQueueStats MainQueueStats { get; } Property Value ClientQueueStats Methods ClearQueue(Priority, DateTime) Clears queue (logical AND is applies between the filters, if you want OR call the method twice) void ClearQueue(Priority lower_than_prio, DateTime older_than) Parameters lower_than_prio Priority Clear events older_than DateTime Events OnRcvQueueCongested Signals when a local event receive queue congestion occurs. When this occurs live feed events might be out-of-date. Congestion queue size can be configured. event QueueCongestionDelegate OnRcvQueueCongested Event Type QueueCongestionDelegate Remarks It is suggested that this event handler is wired to some Monitoring Service. In response to this event the queue might also be reset/cleared, but with known consequences."
  },
  "api/Sportradar.LiveData.Sdk.Services.QueueStats.IQueueTimeStats.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.QueueStats.IQueueTimeStats.html",
    "title": "Interface IQueueTimeStats | sportradar.livedata.sdk",
    "keywords": "Interface IQueueTimeStats Namespace Sportradar.LiveData.Sdk.Services.QueueStats Assembly Sportradar.LiveData.Sdk.dll public interface IQueueTimeStats : IStartable Inherited Members IStartable.Start() IStartable.Stop() Properties DailyStats QueueStats DailyStats { get; } Property Value QueueStats HourlyStats QueueStats HourlyStats { get; } Property Value QueueStats IsEnabled bool IsEnabled { get; set; } Property Value bool MinutelyStats QueueStats MinutelyStats { get; } Property Value QueueStats PrevDailyStats QueueStats PrevDailyStats { get; } Property Value QueueStats PrevHourlyStats QueueStats PrevHourlyStats { get; } Property Value QueueStats PrevMinutelyStats QueueStats PrevMinutelyStats { get; } Property Value QueueStats QueueName string QueueName { get; set; } Property Value string TotalStats QueueStats TotalStats { get; } Property Value QueueStats Methods ItemDequeued(long, TimeSpan) void ItemDequeued(long curr_count, TimeSpan time_in_queue) Parameters curr_count long time_in_queue TimeSpan ItemDropped() void ItemDropped() ItemEnqueued(long) void ItemEnqueued(long curr_count) Parameters curr_count long ItemProcessed(TimeSpan) void ItemProcessed(TimeSpan time_to_process) Parameters time_to_process TimeSpan ToString() string ToString() Returns string"
  },
  "api/Sportradar.LiveData.Sdk.Services.QueueStats.QueueCongestionDelegate.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.QueueStats.QueueCongestionDelegate.html",
    "title": "Delegate QueueCongestionDelegate | sportradar.livedata.sdk",
    "keywords": "Delegate QueueCongestionDelegate Namespace Sportradar.LiveData.Sdk.Services.QueueStats Assembly Sportradar.LiveData.Sdk.dll public delegate void QueueCongestionDelegate()"
  },
  "api/Sportradar.LiveData.Sdk.Services.QueueStats.QueueStats.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.QueueStats.QueueStats.html",
    "title": "Class QueueStats | sportradar.livedata.sdk",
    "keywords": "Class QueueStats Namespace Sportradar.LiveData.Sdk.Services.QueueStats Assembly Sportradar.LiveData.Sdk.dll Queue statistics tracking total number of items in queue, total time spent in queue, total time to process items after they are dequeued, average enqueue/dequeue rate and total number of items enqueue, dequeued or dropped from the queue. public class QueueStats : ICloneable Inheritance object QueueStats Implements ICloneable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors QueueStats() protected QueueStats() QueueStats(string) Initializes a new instance of the QueueStats class public QueueStats(string desc) Parameters desc string Short description of the queue statistics Properties AvgDequeueRate Get average dequeue rate. public double? AvgDequeueRate { get; } Property Value double? AvgEnqueueRate Get average enqueue rate. public double? AvgEnqueueRate { get; } Property Value double? CreatedOn Gets the time statistics were created at. public DateTime CreatedOn { get; } Property Value DateTime Description Short description public string Description { get; protected set; } Property Value string ItemsInQueue Get avg/min/max number of items in queue. public AvgMinMax<long> ItemsInQueue { get; } Property Value AvgMinMax<long> QueueName Queue name public string QueueName { get; set; } Property Value string SuspendedOn Gets the time statistics were suspended at. public DateTime SuspendedOn { get; } Property Value DateTime TimeInQueue Get avg/min/max time that items spend in queue. public AvgMinMax<TimeSpan> TimeInQueue { get; } Property Value AvgMinMax<TimeSpan> TimeToProcess Get avg/min/max time it takes to process an item after it is dequeued. public AvgMinMax<TimeSpan> TimeToProcess { get; } Property Value AvgMinMax<TimeSpan> TotalDequeued Get total number of items dequeued. public long TotalDequeued { get; protected set; } Property Value long TotalDropped Get total number of items dropped (discarded) from the queue. public long TotalDropped { get; protected set; } Property Value long TotalEnqueued Get total number of items enqueued. public long TotalEnqueued { get; protected set; } Property Value long Methods Clone() Creates a new object that is a copy of the current instance. public QueueStats Clone() Returns QueueStats A new object that is a copy of this instance. Suspend() Stop collecting queue statistics public void Suspend() ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes. UpdateCurrentCount(long) protected void UpdateCurrentCount(long curr_count) Parameters curr_count long"
  },
  "api/Sportradar.LiveData.Sdk.Services.QueueStats.QueueTimeStats.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.QueueStats.QueueTimeStats.html",
    "title": "Class QueueTimeStats | sportradar.livedata.sdk",
    "keywords": "Class QueueTimeStats Namespace Sportradar.LiveData.Sdk.Services.QueueStats Assembly Sportradar.LiveData.Sdk.dll public class QueueTimeStats : IQueueTimeStats, IStartable Inheritance object QueueTimeStats Implements IQueueTimeStats IStartable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors QueueTimeStats(ISdkLogger) public QueueTimeStats(ISdkLogger sdk_logger) Parameters sdk_logger ISdkLogger Fields m_sdk_logger protected ISdkLogger m_sdk_logger Field Value ISdkLogger Properties DailyStats public QueueStats DailyStats { get; protected set; } Property Value QueueStats HourlyStats public QueueStats HourlyStats { get; protected set; } Property Value QueueStats IsEnabled public bool IsEnabled { get; set; } Property Value bool MinutelyStats public QueueStats MinutelyStats { get; protected set; } Property Value QueueStats PrevDailyStats public QueueStats PrevDailyStats { get; protected set; } Property Value QueueStats PrevHourlyStats public QueueStats PrevHourlyStats { get; protected set; } Property Value QueueStats PrevMinutelyStats public QueueStats PrevMinutelyStats { get; protected set; } Property Value QueueStats QueueName public string QueueName { get; set; } Property Value string TotalStats public QueueStats TotalStats { get; protected set; } Property Value QueueStats Methods ItemDequeued(long, TimeSpan) public void ItemDequeued(long curr_count, TimeSpan time_in_queue) Parameters curr_count long time_in_queue TimeSpan ItemDropped() public void ItemDropped() ItemEnqueued(long) public void ItemEnqueued(long curr_count) Parameters curr_count long ItemProcessed(TimeSpan) public void ItemProcessed(TimeSpan time_to_process) Parameters time_to_process TimeSpan Start() Start component. public void Start() Remarks The component should be initialized first. Stop() Stop / shutdown component. public void Stop() ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Remarks Can be used for diagnostics purposes."
  },
  "api/Sportradar.LiveData.Sdk.Services.QueueStats.SafeQueueTimeStats.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.QueueStats.SafeQueueTimeStats.html",
    "title": "Class SafeQueueTimeStats | sportradar.livedata.sdk",
    "keywords": "Class SafeQueueTimeStats Namespace Sportradar.LiveData.Sdk.Services.QueueStats Assembly Sportradar.LiveData.Sdk.dll public class SafeQueueTimeStats : IQueueTimeStats, IStartable Inheritance object SafeQueueTimeStats Implements IQueueTimeStats IStartable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DailyStats public QueueStats DailyStats { get; } Property Value QueueStats HourlyStats public QueueStats HourlyStats { get; } Property Value QueueStats IsEnabled public bool IsEnabled { get; set; } Property Value bool MinutelyStats public QueueStats MinutelyStats { get; } Property Value QueueStats PrevDailyStats public QueueStats PrevDailyStats { get; } Property Value QueueStats PrevHourlyStats public QueueStats PrevHourlyStats { get; } Property Value QueueStats PrevMinutelyStats public QueueStats PrevMinutelyStats { get; } Property Value QueueStats QueueName public string QueueName { get; set; } Property Value string TotalStats public QueueStats TotalStats { get; } Property Value QueueStats Methods ItemDequeued(long, TimeSpan) public void ItemDequeued(long curr_count, TimeSpan time_in_queue) Parameters curr_count long time_in_queue TimeSpan ItemDropped() public void ItemDropped() ItemEnqueued(long) public void ItemEnqueued(long curr_count) Parameters curr_count long ItemProcessed(TimeSpan) public void ItemProcessed(TimeSpan time_to_process) Parameters time_to_process TimeSpan Start() Start component. public void Start() Remarks The component should be initialized first. Stop() Stop / shutdown component. public void Stop()"
  },
  "api/Sportradar.LiveData.Sdk.Services.QueueStats.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.QueueStats.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Services.QueueStats | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Services.QueueStats Classes ClientQueueStats Queue statistics QueueStats Queue statistics tracking total number of items in queue, total time spent in queue, total time to process items after they are dequeued, average enqueue/dequeue rate and total number of items enqueue, dequeued or dropped from the queue. QueueTimeStats SafeQueueTimeStats Structs AvgMinMax<T> Avg-Min-Max statistics tuple. Interfaces IMonitoring Feed monitoring interface IQueueTimeStats Delegates QueueCongestionDelegate"
  },
  "api/Sportradar.LiveData.Sdk.Services.QueueSupervisor.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.QueueSupervisor.html",
    "title": "Class QueueSupervisor | sportradar.livedata.sdk",
    "keywords": "Class QueueSupervisor Namespace Sportradar.LiveData.Sdk.Services Assembly Sportradar.LiveData.Sdk.dll public class QueueSupervisor Inheritance object QueueSupervisor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods LimitReachedHandler(object, QueueLimitEventArgs) public void LimitReachedHandler(object sender, QueueLimitEventArgs event_args) Parameters sender object event_args QueueLimitEventArgs RegisterConnectionProviders(IList<IConnectionProvider>) public void RegisterConnectionProviders(IList<IConnectionProvider> conn_providers) Parameters conn_providers IList<IConnectionProvider>"
  },
  "api/Sportradar.LiveData.Sdk.Services.RateLimiter.AndRateGate.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.RateLimiter.AndRateGate.html",
    "title": "Class AndRateGate | sportradar.livedata.sdk",
    "keywords": "Class AndRateGate Namespace Sportradar.LiveData.Sdk.Services.RateLimiter Assembly Sportradar.LiveData.Sdk.dll public class AndRateGate : IRateGate, IDisposable Inheritance object AndRateGate Implements IRateGate IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AndRateGate(string, params RateGate[]) public AndRateGate(string name, params RateGate[] rate_gates) Parameters name string rate_gates RateGate[] Properties Name Name of this AndRateGate instance public string Name { get; } Property Value string Methods Dispose() Releases unmanaged resources held by an instance of this class. public void Dispose() Dispose(bool) Releases unmanaged resources held by an instance of this class. protected virtual void Dispose(bool is_disposing) Parameters is_disposing bool Whether this object is being disposed. Peek() public TimeSpan Peek() Returns TimeSpan WaitToProceed(int) Blocks the current thread indefinitely until allowed to proceed. public void WaitToProceed(int count) Parameters count int Number of occurences WaitToProceed(TimeSpan, int) Blocks the current thread until allowed to proceed or until the specified timeout elapses. public bool WaitToProceed(TimeSpan timeout, int count) Parameters timeout TimeSpan Timeout count int Number of occurences Returns bool true if the thread is allowed to proceed, or false if timed out"
  },
  "api/Sportradar.LiveData.Sdk.Services.RateLimiter.RateGate.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.RateLimiter.RateGate.html",
    "title": "Class RateGate | sportradar.livedata.sdk",
    "keywords": "Class RateGate Namespace Sportradar.LiveData.Sdk.Services.RateLimiter Assembly Sportradar.LiveData.Sdk.dll Used to control the rate of some occurrence per unit of time. Adapted from http://www.pennedobjects.com/2010/10/better-rate-limiting-with-dot-net/ public class RateGate : IRateGate, IDisposable Inheritance object RateGate Implements IRateGate IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks To control the rate of an action using a RateGate, code should simply call WaitToProceed(TimeSpan, int) prior to performing the action. WaitToProceed(TimeSpan, int) will block the current thread until the action is allowed based on the rate limit. This class is thread safe. A single RateGate instance may be used to control the rate of an occurrence across multiple threads. Constructors RateGate(string, int, TimeSpan, int) Initializes a RateGate with a rate of occurrences per time_unit. public RateGate(string name, int occurrences, TimeSpan time_unit, int granularity = 1) Parameters name string occurrences int Number of occurrences allowed per unit of time. time_unit TimeSpan Length of the time unit. granularity int Granularity of the gate (e.g. 100:1) Exceptions ArgumentOutOfRangeException If occurrences or time_unit is negative. Fields m_exit_times public readonly Queue<int> m_exit_times Field Value Queue<int> Properties Name public string Name { get; } Property Value string Occurrences Number of occurrences allowed per unit of time. public int Occurrences { get; } Property Value int TimeUnitMilliseconds The length of the time unit, in milliseconds. public int TimeUnitMilliseconds { get; } Property Value int Methods Dispose() Releases unmanaged resources held by an instance of this class. public void Dispose() Dispose(bool) Releases unmanaged resources held by an instance of this class. protected virtual void Dispose(bool is_disposing) Parameters is_disposing bool Whether this object is being disposed. ~RateGate() protected ~RateGate() Peek() public TimeSpan Peek() Returns TimeSpan WaitToProceed(int) Blocks the current thread indefinitely until allowed to proceed. Number of occurences public void WaitToProceed(int count) Parameters count int WaitToProceed(TimeSpan, int) Blocks the current thread until allowed to proceed or until the specified timeout elapses. public bool WaitToProceed(TimeSpan timeout, int count) Parameters timeout TimeSpan Timeout. count int Number of times we should wait (based on granularity) Returns bool true if the thread is allowed to proceed, or false if timed out"
  },
  "api/Sportradar.LiveData.Sdk.Services.RateLimiter.RateGateExtensions.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.RateLimiter.RateGateExtensions.html",
    "title": "Class RateGateExtensions | sportradar.livedata.sdk",
    "keywords": "Class RateGateExtensions Namespace Sportradar.LiveData.Sdk.Services.RateLimiter Assembly Sportradar.LiveData.Sdk.dll public static class RateGateExtensions Inheritance object RateGateExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods LimitRate<T>(IEnumerable<T>, string, int, TimeSpan) Limits the rate at which the sequence is enumerated. public static IEnumerable<T> LimitRate<T>(this IEnumerable<T> source, string name, int count, TimeSpan timeUnit) Parameters source IEnumerable<T> The IEnumerable<T> whose enumeration is to be rate limited. name string Rate limiter instance name count int The number of items in the sequence that are allowed to be processed per time unit. timeUnit TimeSpan Length of the time unit. Returns IEnumerable<T> An IEnumerable<T> containing the elements of the source sequence. Type Parameters T The type of the elements of source."
  },
  "api/Sportradar.LiveData.Sdk.Services.RateLimiter.TokenBucket-1.ForwardDelegate.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.RateLimiter.TokenBucket-1.ForwardDelegate.html",
    "title": "Delegate TokenBucket<T>.ForwardDelegate | sportradar.livedata.sdk",
    "keywords": "Delegate TokenBucket<T>.ForwardDelegate Namespace Sportradar.LiveData.Sdk.Services.RateLimiter Assembly Sportradar.LiveData.Sdk.dll The delegate that is called as an output from the token-bucket. public delegate void TokenBucket<T>.ForwardDelegate(T obj) Parameters obj T An element, usually a PDU"
  },
  "api/Sportradar.LiveData.Sdk.Services.RateLimiter.TokenBucket-1.ObjToSizeDelegate.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.RateLimiter.TokenBucket-1.ObjToSizeDelegate.html",
    "title": "Delegate TokenBucket<T>.ObjToSizeDelegate | sportradar.livedata.sdk",
    "keywords": "Delegate TokenBucket<T>.ObjToSizeDelegate Namespace Sportradar.LiveData.Sdk.Services.RateLimiter Assembly Sportradar.LiveData.Sdk.dll The delegate that converts an object to the amount of bytes. public delegate int TokenBucket<T>.ObjToSizeDelegate(T obj) Parameters obj T An element, usually a PDU Returns int The number of bytes obj takes when sent"
  },
  "api/Sportradar.LiveData.Sdk.Services.RateLimiter.TokenBucket-1.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.RateLimiter.TokenBucket-1.html",
    "title": "Class TokenBucket<T> | sportradar.livedata.sdk",
    "keywords": "Class TokenBucket<T> Namespace Sportradar.LiveData.Sdk.Services.RateLimiter Assembly Sportradar.LiveData.Sdk.dll A generic implementation of a token-bucket (used for traffic shaping purposes). Simple analogy: there is bucket with a certain amount of tokens. If there are enough tokens inside, an element of type T can be forwarded. Every second another n tokens are added to the bucket and thus making it possible to forward more. The bucket can hold a maximum amount of tokens, no more than that can be added. If the bucket is relatively big, bursts are allowed. The preferred way of using this class is constructing a token-bucket that corresponds to the desired link speed, calling Dispatch() for each PDU and setting the forward_callback so something will happen with the PDU at the correct interval. If a simulation of a link speed is undesirable, you might also use the FillBucketByHand() method when a PDU was actually sent. Dispatch(e) -> TOKENBUCKET -> forward_callback(e) public class TokenBucket<T> Type Parameters T Type of the elements in the token-bucket Inheritance object TokenBucket<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TokenBucket(string, int, int, int, int, ObjToSizeDelegate, ForwardDelegate) Construct a new token-bucket. public TokenBucket(string name, int bucket_capacity, int initial_bucket_size, int bucket_fill_speed, int queue_size, TokenBucket<T>.ObjToSizeDelegate size_callback, TokenBucket<T>.ForwardDelegate forward_callback) Parameters name string bucket_capacity int Maximum size of the token-bucket in bytes. If higher than link speed certain traffic bursts can be handled. initial_bucket_size int Initial size of the token-bucket in bytes. If higher than link speed certain traffic bursts can be handled (if the channel is idle long enough). bucket_fill_speed int Bucket fill speed in bytes per second. queue_size int The internal \"overflow\" queue size. When this parameter is: 0: Dispatch() can be called that many times without blocking = 0: Dispatch() will always block < 0: Dispatch() will never block (but the queue will get filled more and more) size_callback TokenBucket<T>.ObjToSizeDelegate forward_callback TokenBucket<T>.ForwardDelegate Fields DEF_QUEUE_SIZE public const int DEF_QUEUE_SIZE = 512 Field Value int Properties Name Name of this token bucket instance public string Name { get; } Property Value string Methods Dispatch(T) Try to dispatch a new element. public void Dispatch(T obj) Parameters obj T An element to be dispatched (usually a PDU) Remarks Whether this method blocks or not depends on the queue_size parameter used when constructing the TokenBucket. FillBucket(int) Mark that another amount of bytes was sent. Adds tokens to the token-bucket. public int FillBucket(int bytes) Parameters bytes int The number of bytes Returns int The new number of available bytes FillBucket(T) Mark that another element obj was sent and that the corresponding amount of bytes are available again. Adds tokens to the token-bucket. public int FillBucket(T obj) Parameters obj T The element Returns int The new number of available bytes StartFilling() Start with the filling of the token-bucket through time. public void StartFilling()"
  },
  "api/Sportradar.LiveData.Sdk.Services.RateLimiter.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.RateLimiter.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Services.RateLimiter | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Services.RateLimiter Classes AndRateGate RateGate Used to control the rate of some occurrence per unit of time. Adapted from http://www.pennedobjects.com/2010/10/better-rate-limiting-with-dot-net/ RateGateExtensions TokenBucket<T> A generic implementation of a token-bucket (used for traffic shaping purposes). Simple analogy: there is bucket with a certain amount of tokens. If there are enough tokens inside, an element of type T can be forwarded. Every second another n tokens are added to the bucket and thus making it possible to forward more. The bucket can hold a maximum amount of tokens, no more than that can be added. If the bucket is relatively big, bursts are allowed. The preferred way of using this class is constructing a token-bucket that corresponds to the desired link speed, calling Dispatch() for each PDU and setting the forward_callback so something will happen with the PDU at the correct interval. If a simulation of a link speed is undesirable, you might also use the FillBucketByHand() method when a PDU was actually sent. Dispatch(e) -> TOKENBUCKET -> forward_callback(e) Delegates TokenBucket<T>.ForwardDelegate The delegate that is called as an output from the token-bucket. TokenBucket<T>.ObjToSizeDelegate The delegate that converts an object to the amount of bytes."
  },
  "api/Sportradar.LiveData.Sdk.Services.Sdk.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.Sdk.html",
    "title": "Class Sdk | sportradar.livedata.sdk",
    "keywords": "Class Sdk Namespace Sportradar.LiveData.Sdk.Services Assembly Sportradar.LiveData.Sdk.dll Main entry point for the SDK client application. public sealed class Sdk : IStartable, IDisposable Inheritance object Sdk Implements IStartable IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Examples try { Sdk.Instance.Initialize(); Sdk.Instance.OnQueueLimits += QueueLimits; Sdk.Instance.OnQueueLimitRetreated += QueueLimitRetreated; Sdk.Instance.Start(); if (Sdk.Instance.LiveOdds != null) { Sdk.Instance.LiveOdds.OnConnectionStable += FlagConnectionAsStable; Sdk.Instance.LiveOdds.OnConnectionUnstable += ConnectionUnstable; Sdk.Instance.LiveOdds.OnAlive += AliveReceived; Sdk.Instance.LiveOdds.OnFeedError += FeedErrorOccurred; Sdk.Instance.LiveOdds.OnBetCancel += MatchBetCancelled; Sdk.Instance.LiveOdds.OnBetCancelUndo += MatchBetCancelUndo; Sdk.Instance.LiveOdds.OnBetClear += MatchBetCleared; Sdk.Instance.LiveOdds.OnBetClearRollback += MatchBetClearRollbacked; Sdk.Instance.LiveOdds.OnBetStart += BetStarted; Sdk.Instance.LiveOdds.OnBetStop += BetStopped; Sdk.Instance.LiveOdds.OnMetaInfo += MetaInfoReceived; Sdk.Instance.LiveOdds.OnOddsChange += OddsChanged; Sdk.Instance.LiveOdds.OnScoreCardSummary += ScoreCardReceived; Sdk.Instance.LiveOdds.Start(); } else { throw new ApplicationException(\"Error initializing SDK.LiveOdds provider\"); } /* ... start using the SDK ... */ Console.ReadLine(); } finally { if (Sdk.Instance.LiveOdds != null) { Sdk.Instance.LiveOdds.Stop(); Sdk.Instance.LiveOdds.OnConnectionStable -= FlagConnectionAsStable; Sdk.Instance.LiveOdds.OnConnectionUnstable -= ConnectionUnstable; Sdk.Instance.LiveOdds.OnAlive -= AliveReceived; Sdk.Instance.LiveOdds.OnFeedError -= FeedErrorOccurred; Sdk.Instance.LiveOdds.OnBetCancel -= MatchBetCancelled; Sdk.Instance.LiveOdds.OnBetCancelUndo -= MatchBetCancelUndo; Sdk.Instance.LiveOdds.OnBetClear -= MatchBetCleared; Sdk.Instance.LiveOdds.OnBetClearRollback -= MatchBetClearRollbacked; Sdk.Instance.LiveOdds.OnBetStart -= BetStarted; Sdk.Instance.LiveOdds.OnBetStop -= BetStopped; Sdk.Instance.LiveOdds.OnMetaInfo -= MetaInfoReceived; Sdk.Instance.LiveOdds.OnOddsChange -= OddsChanged; Sdk.Instance.LiveOdds.OnScoreCardSummary -= ScoreCardReceived; } Sdk.Instance.OnQueueLimits -= QueueLimits; Sdk.Instance.OnQueueLimitRetreated -= QueueLimitRetreated; Sdk.Instance.Stop(); } Properties Instance SDK singleton instance. public static Sdk Instance { get; } Property Value Sdk IsInitialized True if the SDK initialized, false otherwise. See the Initialize(). public bool IsInitialized { get; } Property Value bool IsStarted True if the SDK started, false otherwise. See the Initialize(). public bool IsStarted { get; } Property Value bool LiveScout LiveScout provider. Initialize() must be called before accessing this member. If provider is not enabled through configuration, this member will be null. public ILiveScout LiveScout { get; } Property Value ILiveScout QueueStats Queue statistics. public IList<ClientQueueStats> QueueStats { get; } Property Value IList<ClientQueueStats> Methods Dispose() Releases unmanaged resources held by an instance of this class. public void Dispose() ~Sdk() protected ~Sdk() Initialize() Initialize the SDK. Default section name is used from the app.config. DEFAULT_SECTION_NAME public void Initialize() Initialize(IConfigFactory, IDeadLetterQueue) Initialize the SDK. public void Initialize(IConfigFactory config_factory, IDeadLetterQueue dead_letter_queue = null) Parameters config_factory IConfigFactory A factory for obtaining the configuration AppConfigFactory dead_letter_queue IDeadLetterQueue Optional interface where a client can be notified about messages that could not be delivered (can be null) Examples Initialize(AppConfigFactory.FromSection(\"Sdk\"), DeadLetterInstance) Remarks Config factory is used explicitly instead of actual configuration to emphasize that configuration is immutable for the application after it is built (internally). It can (depending on the type of the factory) still be updated in run-time by changing the configuration file. Initialize(string, IDeadLetterQueue) Initialize the SDK. public void Initialize(string section_name, IDeadLetterQueue dead_letter_queue = null) Parameters section_name string Name of the section in the configuration file dead_letter_queue IDeadLetterQueue Optional interface where a client can be notified about messages that could not be delivered (can be null) Start() Starts the SDK instance but does not start the configured feed providers (e.g. LiveScout or LiveOdds). SDK message dispatcher pump will start delivering messages after this. Feed providers should be started explicitly after SDK singleton is started. public void Start() Stop() Stops the SDK. Stops the message pump and all feeds. public void Stop() Events OnQueueLimits Indicates that a queue limit (NORMAL, LOW, HIGH) was either reached or retreated for a specific queue. public event LimitedPriorityQueueDelegates.QueueLimitDelegate OnQueueLimits Event Type LimitedPriorityQueueDelegates.QueueLimitDelegate"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.ConfigFactory.AppConfigFactory.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.ConfigFactory.AppConfigFactory.html",
    "title": "Class AppConfigFactory | sportradar.livedata.sdk",
    "keywords": "Class AppConfigFactory Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration.ConfigFactory Assembly Sportradar.LiveData.Sdk.dll Configuration factory that understands app.config file format. It is focused only on specific section of the configuration file (i.e. section reserved for SDK) and is able to detect changes of the configuration in run-time. public class AppConfigFactory : IConfigFactory Inheritance object AppConfigFactory Implements IConfigFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppConfigFactory(string, bool) protected AppConfigFactory(string section_name, bool watch) Parameters section_name string watch bool Fields DEFAULT_SECTION_NAME Default section name in app.config when not specified otherwise. public const string DEFAULT_SECTION_NAME = \"Sdk\" Field Value string RELOAD_TIME protected static readonly TimeSpan RELOAD_TIME Field Value TimeSpan m_config protected AppConfigWrapper m_config Field Value AppConfigWrapper Methods BuildConfig() Assemble a configuration. public virtual ISdkConfiguration BuildConfig() Returns ISdkConfiguration A usuable configuration. ConfigChanged(object, FileSystemEventArgs) protected virtual void ConfigChanged(object sender, FileSystemEventArgs e) Parameters sender object e FileSystemEventArgs FromSection(string) Create a configuration factory that uses a certain section of the app.config file. public static AppConfigFactory FromSection(string section_name = \"Sdk\") Parameters section_name string Name of the section. Returns AppConfigFactory The factory."
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.ConfigFactory.AppConfigWrapper.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.ConfigFactory.AppConfigWrapper.html",
    "title": "Class AppConfigWrapper | sportradar.livedata.sdk",
    "keywords": "Class AppConfigWrapper Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration.ConfigFactory Assembly Sportradar.LiveData.Sdk.dll Problem is that users cache the ISdkConfiguration instance they get, and app.config is a bit awkward as a new instance has to be obtained all the time using GetSection(). This is a wrapper so that the underlying section can change, but the client has just this instance cached. public class AppConfigWrapper : ISdkConfiguration Inheritance object AppConfigWrapper Implements ISdkConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppConfigWrapper(SdkConfigurationSection) public AppConfigWrapper(SdkConfigurationSection section) Parameters section SdkConfigurationSection Methods Reload(SdkConfigurationSection) public void Reload(SdkConfigurationSection section) Parameters section SdkConfigurationSection Events OnConfigurationReloaded Event fired every time that configuration is reloaded / refreshed and might have changed. This is a good time for components to update their cached configuration settings, if any. public event SdkConfigurationDelegates.ConfigReloadedDelegate OnConfigurationReloaded Event Type SdkConfigurationDelegates.ConfigReloadedDelegate"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.ConfigFactory.HardcodedConfigFactory.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.ConfigFactory.HardcodedConfigFactory.html",
    "title": "Class HardcodedConfigFactory | sportradar.livedata.sdk",
    "keywords": "Class HardcodedConfigFactory Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration.ConfigFactory Assembly Sportradar.LiveData.Sdk.dll public class HardcodedConfigFactory : IConfigFactory Inheritance object HardcodedConfigFactory Implements IConfigFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HardcodedConfigFactory(ISdkConfiguration) public HardcodedConfigFactory(ISdkConfiguration config) Parameters config ISdkConfiguration Methods BuildConfig() Factory method to create (an immutable) configuration. public ISdkConfiguration BuildConfig() Returns ISdkConfiguration SDK configuration"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.ConfigFactory.IConfigFactory.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.ConfigFactory.IConfigFactory.html",
    "title": "Interface IConfigFactory | sportradar.livedata.sdk",
    "keywords": "Interface IConfigFactory Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration.ConfigFactory Assembly Sportradar.LiveData.Sdk.dll Configuration factory interface. public interface IConfigFactory Methods BuildConfig() Factory method to create (an immutable) configuration. ISdkConfiguration BuildConfig() Returns ISdkConfiguration SDK configuration"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.ConfigFactory.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.ConfigFactory.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration.ConfigFactory | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration.ConfigFactory Classes AppConfigFactory Configuration factory that understands app.config file format. It is focused only on specific section of the configuration file (i.e. section reserved for SDK) and is able to detect changes of the configuration in run-time. AppConfigWrapper Problem is that users cache the ISdkConfiguration instance they get, and app.config is a bit awkward as a new instance has to be obtained all the time using GetSection(). This is a wrapper so that the underlying section can change, but the client has just this instance cached. HardcodedConfigFactory Interfaces IConfigFactory Configuration factory interface."
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.Converters.SecureStringConverter.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.Converters.SecureStringConverter.html",
    "title": "Class SecureStringConverter | sportradar.livedata.sdk",
    "keywords": "Class SecureStringConverter Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration.Converters Assembly Sportradar.LiveData.Sdk.dll public class SecureStringConverter : ConfigurationConverterBase Inheritance object TypeConverter ConfigurationConverterBase SecureStringConverter Inherited Members ConfigurationConverterBase.CanConvertFrom(ITypeDescriptorContext, Type) ConfigurationConverterBase.CanConvertTo(ITypeDescriptorContext, Type) TypeConverter.CanConvertFrom(Type) TypeConverter.CanConvertTo(Type) TypeConverter.ConvertFrom(object) TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, string) TypeConverter.ConvertFromInvariantString(string) TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, string) TypeConverter.ConvertFromString(ITypeDescriptorContext, string) TypeConverter.ConvertFromString(string) TypeConverter.ConvertTo(object, Type) TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, object) TypeConverter.ConvertToInvariantString(object) TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, object) TypeConverter.ConvertToString(ITypeDescriptorContext, object) TypeConverter.ConvertToString(object) TypeConverter.CreateInstance(IDictionary) TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary) TypeConverter.GetConvertFromException(object) TypeConverter.GetConvertToException(object, Type) TypeConverter.GetCreateInstanceSupported() TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext) TypeConverter.GetProperties(ITypeDescriptorContext, object) TypeConverter.GetProperties(ITypeDescriptorContext, object, Attribute[]) TypeConverter.GetProperties(object) TypeConverter.GetPropertiesSupported() TypeConverter.GetPropertiesSupported(ITypeDescriptorContext) TypeConverter.GetStandardValues() TypeConverter.GetStandardValues(ITypeDescriptorContext) TypeConverter.GetStandardValuesExclusive() TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext) TypeConverter.GetStandardValuesSupported() TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext) TypeConverter.IsValid(ITypeDescriptorContext, object) TypeConverter.IsValid(object) TypeConverter.SortProperties(PropertyDescriptorCollection, string[]) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ConvertFrom(ITypeDescriptorContext, CultureInfo, object) Converts the given object to the type of this converter, using the specified context and culture information. public override object ConvertFrom(ITypeDescriptorContext ctx, CultureInfo ci, object data) Parameters ctx ITypeDescriptorContext ci CultureInfo data object Returns object An object that represents the converted value. Exceptions NotSupportedException The conversion cannot be performed. ConvertTo(ITypeDescriptorContext, CultureInfo, object, Type) Converts the given value object to the specified type, using the specified context and culture information. public override object ConvertTo(ITypeDescriptorContext ctx, CultureInfo ci, object value, Type type) Parameters ctx ITypeDescriptorContext ci CultureInfo value object The object to convert. type Type Returns object An object that represents the converted value. Exceptions ArgumentNullException The destinationType parameter is null. NotSupportedException The conversion cannot be performed."
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.Converters.StringArrayConverter.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.Converters.StringArrayConverter.html",
    "title": "Class StringArrayConverter | sportradar.livedata.sdk",
    "keywords": "Class StringArrayConverter Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration.Converters Assembly Sportradar.LiveData.Sdk.dll public class StringArrayConverter : TypeConverter Inheritance object TypeConverter StringArrayConverter Inherited Members TypeConverter.CanConvertFrom(Type) TypeConverter.CanConvertTo(ITypeDescriptorContext, Type) TypeConverter.CanConvertTo(Type) TypeConverter.ConvertFrom(object) TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, string) TypeConverter.ConvertFromInvariantString(string) TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, string) TypeConverter.ConvertFromString(ITypeDescriptorContext, string) TypeConverter.ConvertFromString(string) TypeConverter.ConvertTo(object, Type) TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, object) TypeConverter.ConvertToInvariantString(object) TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, object) TypeConverter.ConvertToString(ITypeDescriptorContext, object) TypeConverter.ConvertToString(object) TypeConverter.CreateInstance(IDictionary) TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary) TypeConverter.GetConvertFromException(object) TypeConverter.GetConvertToException(object, Type) TypeConverter.GetCreateInstanceSupported() TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext) TypeConverter.GetProperties(ITypeDescriptorContext, object) TypeConverter.GetProperties(ITypeDescriptorContext, object, Attribute[]) TypeConverter.GetProperties(object) TypeConverter.GetPropertiesSupported() TypeConverter.GetPropertiesSupported(ITypeDescriptorContext) TypeConverter.GetStandardValues() TypeConverter.GetStandardValues(ITypeDescriptorContext) TypeConverter.GetStandardValuesExclusive() TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext) TypeConverter.GetStandardValuesSupported() TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext) TypeConverter.IsValid(ITypeDescriptorContext, object) TypeConverter.IsValid(object) TypeConverter.SortProperties(PropertyDescriptorCollection, string[]) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanConvertFrom(ITypeDescriptorContext, Type) Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context. public override bool CanConvertFrom(ITypeDescriptorContext context, Type source_type) Parameters context ITypeDescriptorContext An ITypeDescriptorContext that provides a format context. source_type Type Returns bool true if this converter can perform the conversion; otherwise, false. ConvertFrom(ITypeDescriptorContext, CultureInfo, object) Converts the given object to the type of this converter, using the specified context and culture information. public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) Parameters context ITypeDescriptorContext An ITypeDescriptorContext that provides a format context. culture CultureInfo The CultureInfo to use as the current culture. value object The object to convert. Returns object An object that represents the converted value. Exceptions NotSupportedException The conversion cannot be performed. ConvertTo(ITypeDescriptorContext, CultureInfo, object, Type) Converts the given value object to the specified type, using the specified context and culture information. public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destination_type) Parameters context ITypeDescriptorContext An ITypeDescriptorContext that provides a format context. culture CultureInfo A CultureInfo. If null is passed, the current culture is assumed. value object The object to convert. destination_type Type Returns object An object that represents the converted value. Exceptions ArgumentNullException The destinationType parameter is null. NotSupportedException The conversion cannot be performed."
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.Converters.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.Converters.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration.Converters | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration.Converters Classes SecureStringConverter StringArrayConverter"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.FeedConfig.ServerType.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.FeedConfig.ServerType.html",
    "title": "Enum FeedConfig.ServerType | sportradar.livedata.sdk",
    "keywords": "Enum FeedConfig.ServerType Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration Assembly Sportradar.LiveData.Sdk.dll public enum FeedConfig.ServerType Fields LIVESCOUT = 0 LIVESCOUT_TEST = 1"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.FeedConfig.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.FeedConfig.html",
    "title": "Class FeedConfig | sportradar.livedata.sdk",
    "keywords": "Class FeedConfig Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration Assembly Sportradar.LiveData.Sdk.dll public static class FeedConfig Inheritance object FeedConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ConnectionData public static readonly IDictionary<FeedConfig.ServerType, IConnectionData> ConnectionData Field Value IDictionary<FeedConfig.ServerType, IConnectionData> LoggerData public static readonly IDictionary<FeedConfig.ServerType, ILoggerData> LoggerData Field Value IDictionary<FeedConfig.ServerType, ILoggerData> ProtocolData public static readonly IDictionary<FeedConfig.ServerType, IProtocolData> ProtocolData Field Value IDictionary<FeedConfig.ServerType, IProtocolData>"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.ISdkConfiguration.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.ISdkConfiguration.html",
    "title": "Interface ISdkConfiguration | sportradar.livedata.sdk",
    "keywords": "Interface ISdkConfiguration Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration Assembly Sportradar.LiveData.Sdk.dll public interface ISdkConfiguration Properties Common SDK configuration element where common settings used throughout the SDK library are specified. SdkConfigurationCommon Common { get; } Property Value SdkConfigurationCommon Dynamic SDK configuration element where settings for the server-side configuration service are specified (mostly access parameters). SdkConfigurationDynamic Dynamic { get; } Property Value SdkConfigurationDynamic LiveScout SDK configuration element with LiveScout feed provider settings. SdkConfigurationLiveScout LiveScout { get; } Property Value SdkConfigurationLiveScout MessageDispatcher SDK configuration element where Message Dispatcher settings are specified. SdkConfigurationMessageDispatcher MessageDispatcher { get; } Property Value SdkConfigurationMessageDispatcher PersistentState SDK configuration element with Persistent State provider settings (SqLite database settings). SdkConfigurationPersistentState PersistentState { get; } Property Value SdkConfigurationPersistentState Events OnConfigurationReloaded Event fired every time that configuration is reloaded / refreshed and might have changed. This is a good time for components to update their cached configuration settings, if any. event SdkConfigurationDelegates.ConfigReloadedDelegate OnConfigurationReloaded Event Type SdkConfigurationDelegates.ConfigReloadedDelegate"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.PropertyValidators.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.PropertyValidators.html",
    "title": "Class PropertyValidators | sportradar.livedata.sdk",
    "keywords": "Class PropertyValidators Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration Assembly Sportradar.LiveData.Sdk.dll public static class PropertyValidators Inheritance object PropertyValidators Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ValidateNullableInt(object) public static void ValidateNullableInt(object value) Parameters value object"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.ProviderConfig.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.ProviderConfig.html",
    "title": "Class ProviderConfig | sportradar.livedata.sdk",
    "keywords": "Class ProviderConfig Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration Assembly Sportradar.LiveData.Sdk.dll public class ProviderConfig : IConnectionData, ICipherSettings, ILoggerData, IProtocolData, ICloneable Inheritance object ProviderConfig Implements IConnectionData ICipherSettings ILoggerData IProtocolData ICloneable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ProviderConfig(ISdkConfiguration, Func<ISdkConfiguration, SdkConfigurationLiveFeed>, ServerType) public ProviderConfig(ISdkConfiguration config, Func<ISdkConfiguration, SdkConfigurationLiveFeed> get_local_config, FeedConfig.ServerType type) Parameters config ISdkConfiguration get_local_config Func<ISdkConfiguration, SdkConfigurationLiveFeed> type FeedConfig.ServerType Properties AlertLogLevel Specifies log level threshold used while logging alert messages. public Level AlertLogLevel { get; } Property Value Level BookmakerId Bookmaker ID public long BookmakerId { get; } Property Value long CipherSettings SSL stream cipher settings. public ICipherSettings CipherSettings { get; } Property Value ICipherSettings ClientAliveMsgTimeout Client alive message timeout public TimeSpan ClientAliveMsgTimeout { get; } Property Value TimeSpan ClientInteractionLogLevel Specifies log level threshold used while logging client interaction messages. public Level ClientInteractionLogLevel { get; } Property Value Level DeadLetterLogLevel Specifies log level threshold used while logging dead letter messages. public Level DeadLetterLogLevel { get; } Property Value Level DisallowNonPrintableChars Should non-printable characters in the stream trigger a disconnect. public bool DisallowNonPrintableChars { get; } Property Value bool DoValidityCheck Should connection provider do a quick validity check. public bool DoValidityCheck { get; } Property Value bool Encoding Communication channel character encoding public Encoding Encoding { get; } Property Value Encoding EventRequestLimiter Limits the number of matches that a client can reference in a given time frame (get status, meta info, book, subscribe or error recovery). public IRateGate EventRequestLimiter { get; } Property Value IRateGate Hostname Server name public string Hostname { get; } Property Value string InvalidDataReconnectWait Delay before we try reconnecting to server after we received some garbage data public TimeSpan InvalidDataReconnectWait { get; } Property Value TimeSpan InvalidMsgLogLevel Specifies log level threshold used while logging invalid/corrupt messages. public Level InvalidMsgLogLevel { get; } Property Value Level LoggingFeedName Prefix used in logging public string LoggingFeedName { get; } Property Value string LoginLimiter Limits the number of logins a client can perform in a given time frame. public IRateGate LoginLimiter { get; } Property Value IRateGate MaxReconnectWait Delay before we try reconnecting to server after we got disconnected (max) public TimeSpan MaxReconnectWait { get; } Property Value TimeSpan MaxTimeSkew Max message timestamp skew. Zero to disable the check. public TimeSpan MaxTimeSkew { get; } Property Value TimeSpan MinCipherStrength public int MinCipherStrength { get; } Property Value int MinHashStrength public int MinHashStrength { get; } Property Value int MinKeyExchangeStrength public int MinKeyExchangeStrength { get; } Property Value int MinReconnectWait Delay before we try reconnecting to server after we got disconnected (min) public TimeSpan MinReconnectWait { get; } Property Value TimeSpan Port Server port number public int Port { get; } Property Value int ReceiveBufferSize Message line buffer size. Complete message line should fit in here. public int ReceiveBufferSize { get; } Property Value int ReceiveTimeout Amount of time to wait for (socket) receive operation to complete successfully public TimeSpan ReceiveTimeout { get; } Property Value TimeSpan RequestLimiter Limits the number of requests a client can send in a given time frame. public IRateGate RequestLimiter { get; } Property Value IRateGate RestartOnParseError If true, the feed will reconnect on any parse error public bool RestartOnParseError { get; } Property Value bool SSLThumbPrint public string SSLThumbPrint { get; } Property Value string SchemaStrictness XSD schema validation strictness. Can be OFF, ON, STRICT or VERY STRICT public SchemaValidationStrictness SchemaStrictness { get; } Property Value SchemaValidationStrictness ScoutPassword Scout client password public SecureString ScoutPassword { get; } Property Value SecureString ScoutUsername Scout client username public string ScoutUsername { get; } Property Value string SendClientTimeInRequest Whether client UTC time should be included in every request message (LiveOdds). public bool SendClientTimeInRequest { get; } Property Value bool SendClientVersionInLogin Whether client version should be sent in login. public bool SendClientVersionInLogin { get; } Property Value bool SendTimeout Amount of time to wait for (socket) send operation to complete successfully public TimeSpan SendTimeout { get; } Property Value TimeSpan ServerAliveMsgTimeout Server alive message timeout public TimeSpan ServerAliveMsgTimeout { get; } Property Value TimeSpan TotalBufferSize Total message buffer size. A complete XML message should fit in here. public int TotalBufferSize { get; } Property Value int TrafficLogLevel Specifies log level threshold used while logging incoming and outgoing traffic (live feed messages). public Level TrafficLogLevel { get; } Property Value Level UseSSL Use secure sockets for communication. public bool UseSSL { get; } Property Value bool Methods Clone() Creates a new object that is a copy of the current instance. public object Clone() Returns object A new object that is a copy of this instance."
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.SdkConfigurationDelegates.ConfigReloadedDelegate.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.SdkConfigurationDelegates.ConfigReloadedDelegate.html",
    "title": "Delegate SdkConfigurationDelegates.ConfigReloadedDelegate | sportradar.livedata.sdk",
    "keywords": "Delegate SdkConfigurationDelegates.ConfigReloadedDelegate Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration Assembly Sportradar.LiveData.Sdk.dll Indicates that configuration has been reloaded/refreshed and might have changed. This is a good time for components to update their cached configuration settings, if any. public delegate void SdkConfigurationDelegates.ConfigReloadedDelegate()"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.SdkConfigurationDelegates.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.SdkConfigurationDelegates.html",
    "title": "Class SdkConfigurationDelegates | sportradar.livedata.sdk",
    "keywords": "Class SdkConfigurationDelegates Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration Assembly Sportradar.LiveData.Sdk.dll Configuration delegates. public static class SdkConfigurationDelegates Inheritance object SdkConfigurationDelegates Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.SdkLiveConfiguration.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.SdkLiveConfiguration.html",
    "title": "Class SdkLiveConfiguration | sportradar.livedata.sdk",
    "keywords": "Class SdkLiveConfiguration Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration Assembly Sportradar.LiveData.Sdk.dll public class SdkLiveConfiguration : ISdkConfiguration Inheritance object SdkLiveConfiguration Implements ISdkConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SdkLiveConfiguration(Func<SdkConfigurationSection>) public SdkLiveConfiguration(Func<SdkConfigurationSection> get_sdk_config) Parameters get_sdk_config Func<SdkConfigurationSection> Events OnConfigurationReloaded Event fired every time that configuration is reloaded / refreshed and might have changed. This is a good time for components to update their cached configuration settings, if any. public event SdkConfigurationDelegates.ConfigReloadedDelegate OnConfigurationReloaded Event Type SdkConfigurationDelegates.ConfigReloadedDelegate"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.Sections.ConfigurationElementFeed.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.Sections.ConfigurationElementFeed.html",
    "title": "Class ConfigurationElementFeed | sportradar.livedata.sdk",
    "keywords": "Class ConfigurationElementFeed Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration.Sections Assembly Sportradar.LiveData.Sdk.dll [DynamicConfigIgnoreClass] public class ConfigurationElementFeed : ConfigurationElement Inheritance object ConfigurationElement ConfigurationElementFeed Derived SdkConfigurationLiveFeed Inherited Members ConfigurationElement.DeserializeElement(XmlReader, bool) ConfigurationElement.Equals(object) ConfigurationElement.GetHashCode() ConfigurationElement.GetTransformedAssemblyString(string) ConfigurationElement.GetTransformedTypeString(string) ConfigurationElement.Init() ConfigurationElement.InitializeDefault() ConfigurationElement.IsModified() ConfigurationElement.IsReadOnly() ConfigurationElement.ListErrors(IList) ConfigurationElement.OnDeserializeUnrecognizedAttribute(string, string) ConfigurationElement.OnDeserializeUnrecognizedElement(string, XmlReader) ConfigurationElement.OnRequiredPropertyNotFound(string) ConfigurationElement.PostDeserialize() ConfigurationElement.PreSerialize(XmlWriter) ConfigurationElement.Reset(ConfigurationElement) ConfigurationElement.ResetModified() ConfigurationElement.SerializeElement(XmlWriter, bool) ConfigurationElement.SerializeToXmlElement(XmlWriter, string) ConfigurationElement.SetPropertyValue(ConfigurationProperty, object, bool) ConfigurationElement.SetReadOnly() ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode) ConfigurationElement.CurrentConfiguration ConfigurationElement.ElementInformation ConfigurationElement.ElementProperty ConfigurationElement.EvaluationContext ConfigurationElement.HasContext ConfigurationElement.this[ConfigurationProperty] ConfigurationElement.this[string] ConfigurationElement.LockAllAttributesExcept ConfigurationElement.LockAllElementsExcept ConfigurationElement.LockAttributes ConfigurationElement.LockElements ConfigurationElement.LockItem ConfigurationElement.Properties object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ConfigurationElementFeed() protected ConfigurationElementFeed() Properties AlertLogLevel Specifies log level threshold used while logging alert messages. Possible values are: Debug, Info, Warn, Error, Fatal [ConfigurationProperty(\"AlertLogLevel\", IsRequired = false, DefaultValue = \"Warn\")] [DynamicConfigItem] [TypeConverter(typeof(LevelTypeConverter))] public Level AlertLogLevel { get; protected set; } Property Value Level ClientInteractionLogLevel Specifies log level threshold used while logging client interaction messages. Possible values are: Debug, Info, Warn, Error, Fatal [ConfigurationProperty(\"ClientInteractionLogLevel\", IsRequired = false, DefaultValue = \"Info\")] [DynamicConfigItem] [TypeConverter(typeof(LevelTypeConverter))] public Level ClientInteractionLogLevel { get; protected set; } Property Value Level ConfigLogLevel Specifies log level threshold used while logging configuration settings used by client (server and local). Possible values are: Debug, Info, Warn, Error, Fatal [ConfigurationProperty(\"ConfigLogLevel\", IsRequired = false, DefaultValue = \"Info\")] [DynamicConfigItem] [TypeConverter(typeof(LevelTypeConverter))] public Level ConfigLogLevel { get; protected set; } Property Value Level DeadLetterLogLevel Specifies log level threshold used while logging dead letter messages. Possible values are: Debug, Info, Warn, Error, Fatal [ConfigurationProperty(\"DeadLetterLogLevel\", IsRequired = false, DefaultValue = \"Info\")] [DynamicConfigItem] [TypeConverter(typeof(LevelTypeConverter))] public Level DeadLetterLogLevel { get; protected set; } Property Value Level InvalidMsgLogLevel Specifies log level threshold used while logging invalid/corrupt messages. Possible values are: Debug, Info, Warn, Error, Fatal [ConfigurationProperty(\"InvalidMsgLogLevel\", IsRequired = false, DefaultValue = \"Info\")] [DynamicConfigItem] [TypeConverter(typeof(LevelTypeConverter))] public Level InvalidMsgLogLevel { get; protected set; } Property Value Level LoggingFeedName Prefix used to indicate feed [ConfigurationProperty(\"LoggingFeedName\", IsRequired = false, DefaultValue = null)] public string LoggingFeedName { get; protected set; } Property Value string ReceiveBufferSize Receive buffer size for one line of message (overrides automatic defaults for servers) [ConfigurationProperty(\"ReceiveBufferSize\", IsRequired = false, DefaultValue = 65536)] [DynamicConfigItem] [IntegerValidator(MinValue = 32768, MaxValue = 262144)] public int ReceiveBufferSize { get; protected set; } Property Value int SchemaValidationStrictness Schema validation strictness. 0 = OFF, 1=ON, 2=STRICT, 3=VERY_STRICT Default = 1 [ConfigurationProperty(\"SchemaValidationStrictness\", IsRequired = false, DefaultValue = 1)] [DynamicConfigItem] [IntegerValidator(MinValue = 0, MaxValue = 3)] public int SchemaValidationStrictness { get; protected set; } Property Value int StatsLogLevel Specifies log level threshold used while logging SDK statistics. Possible values are: Debug, Info, Warn, Error, Fatal [ConfigurationProperty(\"StatsLogLevel\", IsRequired = false, DefaultValue = \"Debug\")] [DynamicConfigItem] [TypeConverter(typeof(LevelTypeConverter))] public Level StatsLogLevel { get; protected set; } Property Value Level TotalBufferSize Total message buffer size (overrides automatic defaults for servers) [ConfigurationProperty(\"TotalBufferSize\", IsRequired = false, DefaultValue = 20971520)] [DynamicConfigItem] [IntegerValidator(MinValue = 1048576, MaxValue = 67108864)] public int TotalBufferSize { get; protected set; } Property Value int TrafficLogLevel Specifies log level threshold used while logging incoming and outgoing traffic (live feed messages). Possible values are: Debug, Info, Warn, Error, Fatal [ConfigurationProperty(\"TrafficLogLevel\", IsRequired = false, DefaultValue = \"Info\")] [DynamicConfigItem] [TypeConverter(typeof(LevelTypeConverter))] public Level TrafficLogLevel { get; protected set; } Property Value Level"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.Sections.SdkConfigurationCommon.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.Sections.SdkConfigurationCommon.html",
    "title": "Class SdkConfigurationCommon | sportradar.livedata.sdk",
    "keywords": "Class SdkConfigurationCommon Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration.Sections Assembly Sportradar.LiveData.Sdk.dll public class SdkConfigurationCommon : ConfigurationElement Inheritance object ConfigurationElement SdkConfigurationCommon Inherited Members ConfigurationElement.DeserializeElement(XmlReader, bool) ConfigurationElement.Equals(object) ConfigurationElement.GetHashCode() ConfigurationElement.GetTransformedAssemblyString(string) ConfigurationElement.GetTransformedTypeString(string) ConfigurationElement.Init() ConfigurationElement.InitializeDefault() ConfigurationElement.IsModified() ConfigurationElement.ListErrors(IList) ConfigurationElement.OnDeserializeUnrecognizedAttribute(string, string) ConfigurationElement.OnDeserializeUnrecognizedElement(string, XmlReader) ConfigurationElement.OnRequiredPropertyNotFound(string) ConfigurationElement.PostDeserialize() ConfigurationElement.PreSerialize(XmlWriter) ConfigurationElement.Reset(ConfigurationElement) ConfigurationElement.ResetModified() ConfigurationElement.SerializeElement(XmlWriter, bool) ConfigurationElement.SerializeToXmlElement(XmlWriter, string) ConfigurationElement.SetPropertyValue(ConfigurationProperty, object, bool) ConfigurationElement.SetReadOnly() ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode) ConfigurationElement.CurrentConfiguration ConfigurationElement.ElementInformation ConfigurationElement.ElementProperty ConfigurationElement.EvaluationContext ConfigurationElement.HasContext ConfigurationElement.this[ConfigurationProperty] ConfigurationElement.this[string] ConfigurationElement.LockAllAttributesExcept ConfigurationElement.LockAllElementsExcept ConfigurationElement.LockAttributes ConfigurationElement.LockElements ConfigurationElement.LockItem ConfigurationElement.Properties object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SdkConfigurationCommon() protected SdkConfigurationCommon() Properties BookmakerId Bookmaker id [ConfigurationProperty(\"BookmakerId\")] [DynamicConfigItem] [IntegerValidator] public int BookmakerId { get; protected set; } Property Value int ConfigLogLevel Specifies log level threshold used while logging configuration settings used by client (server and local). Possible values are: Debug, Info, Warn, Error, Fatal [ConfigurationProperty(\"ConfigLogLevel\", IsRequired = false, DefaultValue = \"Info\")] [DynamicConfigItem] [TypeConverter(typeof(LevelTypeConverter))] public Level ConfigLogLevel { get; protected set; } Property Value Level ExecutionLogLevel Specifies log level threshold used while logging SDK library code execution. Possible values are: Debug, Info, Warn, Error, Fatal [ConfigurationProperty(\"ExecutionLogLevel\", IsRequired = false, DefaultValue = \"Info\")] [DynamicConfigItem] [TypeConverter(typeof(LevelTypeConverter))] public Level ExecutionLogLevel { get; protected set; } Property Value Level LogPath Root path where SDK logs will be stored (relative or absolute). [ConfigurationProperty(\"LogPath\", IsRequired = false, DefaultValue = \"logs\")] public string LogPath { get; protected set; } Property Value string Logging Indicates whether SDK logging should be enabled [ConfigurationProperty(\"Logging\", IsRequired = false, DefaultValue = true)] public bool Logging { get; protected set; } Property Value bool Remarks If this is set to false we will be unable to help you with any SDK problems MaxSizeRollBackups A property that would be applied to all RollingFileAppender in SDK logs. [ConfigurationProperty(\"MaxSizeRollBackups\", IsRequired = false, DefaultValue = 150)] public int MaxSizeRollBackups { get; protected set; } Property Value int MaxThreadPoolThreads Maximum number of thread pool threads [ConfigurationProperty(\"MaxThreadPoolThreads\", IsRequired = false, DefaultValue = 512)] [DynamicConfigItem] [IntegerValidator(MinValue = 0, MaxValue = 32767)] public int MaxThreadPoolThreads { get; protected set; } Property Value int MaximumFileSize A property that would be applied to all RollingFileAppender in SDK logs. [ConfigurationProperty(\"MaximumFileSize\", IsRequired = false, DefaultValue = \"10MB\")] public string MaximumFileSize { get; protected set; } Property Value string OldLogCleanupInterval Old log clean-up interval. [ConfigurationProperty(\"OldLogCleanupInterval\", IsRequired = false, DefaultValue = \"01:00:00\")] [DynamicConfigItem] [TypeConverter(typeof(TimeSpanConverter))] [PositiveTimeSpanValidator] public TimeSpan OldLogCleanupInterval { get; protected set; } Property Value TimeSpan Remarks How often the clean up task is invoked. OldLogMaxAge Old log max-age. [ConfigurationProperty(\"OldLogMaxAge\", IsRequired = false, DefaultValue = \"7.00:00:00\")] [DynamicConfigItem] [TypeConverter(typeof(TimeSpanConverter))] public TimeSpan OldLogMaxAge { get; protected set; } Property Value TimeSpan Remarks Log files with a modified time older than that will be removed. QueueHighWatermark High watermark for all limited priority queue instances (number of items). Signals that a queue will soon reach its full capacity and that we should probably stop processing incoming messages until things calm down a bit. [ConfigurationProperty(\"QueueHighWatermark\", IsRequired = false, DefaultValue = 9000)] [DynamicConfigItem] [IntegerValidator(MinValue = 2, MaxValue = 100000)] public int QueueHighWatermark { get; protected set; } Property Value int QueueLowWatermark Low watermark for all limited priority queue instances (number of items). Signals that a queue is getting filled up and that client may experience some additional latency in msg delivery. [ConfigurationProperty(\"QueueLowWatermark\", IsRequired = false, DefaultValue = 500)] [DynamicConfigItem] [IntegerValidator(MinValue = 2, MaxValue = 100000)] public int QueueLowWatermark { get; protected set; } Property Value int QueueMaxCapacity Capacity (max. number of items) that can be stored in any limited priority queue instance. [ConfigurationProperty(\"QueueMaxCapacity\", IsRequired = false, DefaultValue = 10000)] [DynamicConfigItem] [IntegerValidator(MinValue = 100, MaxValue = 100000)] public int QueueMaxCapacity { get; protected set; } Property Value int SafeMode Indicates whether \"safe-mode\" SDK components are used instead of normal ones. [ConfigurationProperty(\"SafeMode\", IsRequired = false, DefaultValue = false)] public bool SafeMode { get; protected set; } Property Value bool StatsLogLevel Specifies log level threshold used while logging SDK statistics. Possible values are: Debug, Info, Warn, Error, Fatal [ConfigurationProperty(\"StatsLogLevel\", IsRequired = false, DefaultValue = \"Debug\")] [DynamicConfigItem] [TypeConverter(typeof(LevelTypeConverter))] public Level StatsLogLevel { get; protected set; } Property Value Level UniquenessStrictness Verify whether we are the only instance running [ConfigurationProperty(\"UniquenessStrictness\", IsRequired = false, DefaultValue = 1)] public int UniquenessStrictness { get; protected set; } Property Value int Remarks 0 means no checking, 1 means checking but no error, 2 means fail if there are more instances Methods IsReadOnly() Override of ConfigurationElement.IsReadOnly, always returns false. public override bool IsReadOnly() Returns bool false"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.Sections.SdkConfigurationDynamic.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.Sections.SdkConfigurationDynamic.html",
    "title": "Class SdkConfigurationDynamic | sportradar.livedata.sdk",
    "keywords": "Class SdkConfigurationDynamic Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration.Sections Assembly Sportradar.LiveData.Sdk.dll public class SdkConfigurationDynamic : ConfigurationElement Inheritance object ConfigurationElement SdkConfigurationDynamic Inherited Members ConfigurationElement.DeserializeElement(XmlReader, bool) ConfigurationElement.Equals(object) ConfigurationElement.GetHashCode() ConfigurationElement.GetTransformedAssemblyString(string) ConfigurationElement.GetTransformedTypeString(string) ConfigurationElement.Init() ConfigurationElement.InitializeDefault() ConfigurationElement.IsModified() ConfigurationElement.ListErrors(IList) ConfigurationElement.OnDeserializeUnrecognizedAttribute(string, string) ConfigurationElement.OnDeserializeUnrecognizedElement(string, XmlReader) ConfigurationElement.OnRequiredPropertyNotFound(string) ConfigurationElement.PostDeserialize() ConfigurationElement.PreSerialize(XmlWriter) ConfigurationElement.Reset(ConfigurationElement) ConfigurationElement.ResetModified() ConfigurationElement.SerializeElement(XmlWriter, bool) ConfigurationElement.SerializeToXmlElement(XmlWriter, string) ConfigurationElement.SetPropertyValue(ConfigurationProperty, object, bool) ConfigurationElement.SetReadOnly() ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode) ConfigurationElement.CurrentConfiguration ConfigurationElement.ElementInformation ConfigurationElement.ElementProperty ConfigurationElement.EvaluationContext ConfigurationElement.HasContext ConfigurationElement.this[ConfigurationProperty] ConfigurationElement.this[string] ConfigurationElement.LockAllAttributesExcept ConfigurationElement.LockAllElementsExcept ConfigurationElement.LockAttributes ConfigurationElement.LockElements ConfigurationElement.LockItem ConfigurationElement.Properties object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SdkConfigurationDynamic() protected SdkConfigurationDynamic() Properties BookmakerId Bookmaker id [ConfigurationProperty(\"BookmakerId\", IsRequired = false, DefaultValue = null)] [CallbackValidator(Type = typeof(PropertyValidators), CallbackMethodName = \"ValidateNullableInt\")] public int? BookmakerId { get; protected set; } Property Value int? Remarks This one will override the common settings. HttpResponseTimeout Time to wait for the HTTP request to complete. [ConfigurationProperty(\"HttpResponseTimeout\", IsRequired = false, DefaultValue = \"00:00:30\")] [PositiveTimeSpanValidator] public TimeSpan HttpResponseTimeout { get; protected set; } Property Value TimeSpan HttpUrl HTTP URL can have {ID}, {NS} and {VER} placeholders, else id=.., ver=.. and ns=.. query parameters are appended to the URL Example: \"http://localhost:8080/abc\" [ConfigurationProperty(\"HttpUrl\", IsRequired = false, DefaultValue = null)] [DynamicConfigItem] public string HttpUrl { get; protected set; } Property Value string Remarks ID means bookmaker ID, either common or local setting NS means namespace (usually: Sportradar.SDK, so config server can store configuration for multiple types of clients) VER means SDK (assembly) version IsInitialized Is section initialized? public bool IsInitialized { get; } Property Value bool MaxFetchInterval Max fetch interval [ConfigurationProperty(\"MaxFetchInterval\", IsRequired = false, DefaultValue = \"01:00:00\")] [DynamicConfigItem] public TimeSpan MaxFetchInterval { get; protected set; } Property Value TimeSpan MinFetchInterval Min fetch interval [ConfigurationProperty(\"MinFetchInterval\", IsRequired = false, DefaultValue = \"01:00:00\")] [DynamicConfigItem] public TimeSpan MinFetchInterval { get; protected set; } Property Value TimeSpan SSLThumbprint Optional SSL server certificate thumbprint [ConfigurationProperty(\"SSLThumbprint\", IsRequired = false, DefaultValue = null)] [DynamicConfigItem] public string SSLThumbprint { get; protected set; } Property Value string Methods IsReadOnly() Override of ConfigurationElement.IsReadOnly, always returns false. public override bool IsReadOnly() Returns bool false"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.Sections.SdkConfigurationLiveFeed.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.Sections.SdkConfigurationLiveFeed.html",
    "title": "Class SdkConfigurationLiveFeed | sportradar.livedata.sdk",
    "keywords": "Class SdkConfigurationLiveFeed Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration.Sections Assembly Sportradar.LiveData.Sdk.dll SDK configuration element where common live feed provider settings are stored (connectivity, rate limiters, etc.). [DynamicConfigIgnoreClass] public abstract class SdkConfigurationLiveFeed : ConfigurationElementFeed Inheritance object ConfigurationElement ConfigurationElementFeed SdkConfigurationLiveFeed Derived SdkConfigurationLiveScout Inherited Members ConfigurationElementFeed.AlertLogLevel ConfigurationElementFeed.ClientInteractionLogLevel ConfigurationElementFeed.ConfigLogLevel ConfigurationElementFeed.DeadLetterLogLevel ConfigurationElementFeed.InvalidMsgLogLevel ConfigurationElementFeed.StatsLogLevel ConfigurationElementFeed.TrafficLogLevel ConfigurationElementFeed.LoggingFeedName ConfigurationElementFeed.TotalBufferSize ConfigurationElementFeed.SchemaValidationStrictness ConfigurationElementFeed.ReceiveBufferSize ConfigurationElement.DeserializeElement(XmlReader, bool) ConfigurationElement.Equals(object) ConfigurationElement.GetHashCode() ConfigurationElement.GetTransformedAssemblyString(string) ConfigurationElement.GetTransformedTypeString(string) ConfigurationElement.Init() ConfigurationElement.InitializeDefault() ConfigurationElement.IsModified() ConfigurationElement.ListErrors(IList) ConfigurationElement.OnDeserializeUnrecognizedAttribute(string, string) ConfigurationElement.OnDeserializeUnrecognizedElement(string, XmlReader) ConfigurationElement.OnRequiredPropertyNotFound(string) ConfigurationElement.PostDeserialize() ConfigurationElement.PreSerialize(XmlWriter) ConfigurationElement.Reset(ConfigurationElement) ConfigurationElement.ResetModified() ConfigurationElement.SerializeElement(XmlWriter, bool) ConfigurationElement.SerializeToXmlElement(XmlWriter, string) ConfigurationElement.SetPropertyValue(ConfigurationProperty, object, bool) ConfigurationElement.SetReadOnly() ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode) ConfigurationElement.CurrentConfiguration ConfigurationElement.ElementInformation ConfigurationElement.ElementProperty ConfigurationElement.EvaluationContext ConfigurationElement.HasContext ConfigurationElement.this[ConfigurationProperty] ConfigurationElement.this[string] ConfigurationElement.LockAllAttributesExcept ConfigurationElement.LockAllElementsExcept ConfigurationElement.LockAttributes ConfigurationElement.LockElements ConfigurationElement.LockItem ConfigurationElement.Properties object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SdkConfigurationLiveFeed() protected SdkConfigurationLiveFeed() Properties BookmakerId Bookmaker (client) id. [ConfigurationProperty(\"BookmakerId\", IsRequired = false, DefaultValue = null)] [CallbackValidator(Type = typeof(PropertyValidators), CallbackMethodName = \"ValidateNullableInt\")] public int? BookmakerId { get; protected set; } Property Value int? Remarks This one will override the common settings. ClientAliveMsgTimeout Client alive message timeout. [ConfigurationProperty(\"ClientAliveMsgTimeout\", IsRequired = false, DefaultValue = \"00:00:00\")] [DynamicConfigItem] [TypeConverter(typeof(TimeSpanConverter))] [TimeSpanValidator] public TimeSpan ClientAliveMsgTimeout { get; protected set; } Property Value TimeSpan Remarks TimeSpan.Zero means default timeout will be used. BEWARE: there is probably no need to change it unless the protocol updates. EventRequestLimiterInterval MatchRequest limiter (interval). [ConfigurationProperty(\"EventRequestLimiterInterval\", IsRequired = false, DefaultValue = \"00:00:00\")] [DynamicConfigItem] [TypeConverter(typeof(TimeSpanConverter))] public TimeSpan EventRequestLimiterInterval { get; protected set; } Property Value TimeSpan Remarks When TimeSpan.Zero the default settings as appropriate for the server are used. EventRequestLimiterNumber MatchRequest limiter (number). [ConfigurationProperty(\"EventRequestLimiterNumber\", IsRequired = false, DefaultValue = 0)] [DynamicConfigItem] public int EventRequestLimiterNumber { get; protected set; } Property Value int Remarks EventRequestLimiterInterval must not be set to TimeSpan.Zero. Hostname Host name (overrides automatic defaults for servers) [ConfigurationProperty(\"Hostname\", IsRequired = false, DefaultValue = null)] public string Hostname { get; protected set; } Property Value string Insecure Whether insecure version of the connection provider should be used that doesn't check the SSL server certificate thumbprint. Implicitly set by SafeMode. [ConfigurationProperty(\"Insecure\", IsRequired = false, DefaultValue = false)] public bool Insecure { get; protected set; } Property Value bool InvalidDataReconnectWait Delay before we try reconnecting to server after we got invalid data. [ConfigurationProperty(\"InvalidDataReconnectWait\", IsRequired = false, DefaultValue = \"00:00:10\")] [DynamicConfigItem] [TypeConverter(typeof(TimeSpanConverter))] [PositiveTimeSpanValidator] public TimeSpan InvalidDataReconnectWait { get; protected set; } Property Value TimeSpan LoginLimiterInterval Login limiter (interval). [ConfigurationProperty(\"LoginLimiterInterval\", IsRequired = false, DefaultValue = \"00:00:00\")] [DynamicConfigItem] [TypeConverter(typeof(TimeSpanConverter))] public TimeSpan LoginLimiterInterval { get; protected set; } Property Value TimeSpan Remarks When TimeSpan.Zero the default settings as appropriate for the server are used. LoginLimiterNumber Login limiter (number). [ConfigurationProperty(\"LoginLimiterNumber\", IsRequired = false, DefaultValue = 0)] [DynamicConfigItem] public int LoginLimiterNumber { get; protected set; } Property Value int Remarks LoginLimiterInterval must not be set to TimeSpan.Zero. MaxReconnectWait Delay before we try reconnecting to server after we got disconnected (max, overrides automatic defaults for servers) [ConfigurationProperty(\"MaxReconnectWait\", IsRequired = false, DefaultValue = \"00:00:15\")] [DynamicConfigItem] [TypeConverter(typeof(TimeSpanConverter))] [PositiveTimeSpanValidator] public TimeSpan MaxReconnectWait { get; protected set; } Property Value TimeSpan MaxRequestEventIds Max number of match ids that a client can specify in any request. [ConfigurationProperty(\"MaxRequestEventIds\", IsRequired = false, DefaultValue = 100)] [DynamicConfigItem] [IntegerValidator(MinValue = 1, MaxValue = 1000)] public int MaxRequestEventIds { get; protected set; } Property Value int MaxRequestTimeAllowance Maximum amount of time for request response [ConfigurationProperty(\"MaxRequestTimeAllowance\", IsRequired = false, DefaultValue = \"00:00:10\")] [DynamicConfigItem] [TypeConverter(typeof(TimeSpanConverter))] public TimeSpan MaxRequestTimeAllowance { get; protected set; } Property Value TimeSpan MaxServerTimestampAge Server timestamp is only usable to us if it is not outdated so that we can interpolate between two successive server timestamps. [ConfigurationProperty(\"MaxServerTimestampAge\", IsRequired = false, DefaultValue = \"00:05:00\")] [DynamicConfigItem] [TypeConverter(typeof(TimeSpanConverter))] [PositiveTimeSpanValidator] public TimeSpan MaxServerTimestampAge { get; protected set; } Property Value TimeSpan MaxTimeSkew Maximum time difference between local time and server time. When detected time skew is over this limit the connection to the server will be immediately dropped and a reconnect attempted. Usual time skew values should be: 10 minutes when no time synchronization is performed 5 seconds (if NTP protocol is used for time synchronization) TimeSpan.Zero means the setting is off (which is the default in SafeMode) [ConfigurationProperty(\"MaxTimeSkew\", IsRequired = false, DefaultValue = \"00:00:00\")] [DynamicConfigItem] [TypeConverter(typeof(TimeSpanConverter))] [TimeSpanValidator] public TimeSpan MaxTimeSkew { get; protected set; } Property Value TimeSpan Remarks BEWARE! Low values might prevent a successful connection to the server or cause undesired disconnecting / reconnecting. That in turn might lead to connection blocking on the server side. MinReconnectWait Delay before we try reconnecting to server after we got disconnected (min, overrides automatic defaults for servers) [ConfigurationProperty(\"MinReconnectWait\", IsRequired = false, DefaultValue = \"00:00:05\")] [DynamicConfigItem] [TypeConverter(typeof(TimeSpanConverter))] [PositiveTimeSpanValidator] public TimeSpan MinReconnectWait { get; protected set; } Property Value TimeSpan Port Port number (overrides automatic defaults for servers) [ConfigurationProperty(\"Port\", IsRequired = false, DefaultValue = 0)] [IntegerValidator(MinValue = 0, MaxValue = 65535)] public int Port { get; protected set; } Property Value int ReceiveTimeout Amount of time to wait for (socket) receive operation to complete successfully. [ConfigurationProperty(\"ReceiveTimeout\", IsRequired = false, DefaultValue = \"00:00:00\")] [DynamicConfigItem] [TypeConverter(typeof(TimeSpanConverter))] [TimeSpanValidator] public TimeSpan ReceiveTimeout { get; protected set; } Property Value TimeSpan Remarks TimeSpan.Zero means default timeout will be used, negative value means use maximum value. RequestLimiterInterval Request limiter (interval). [ConfigurationProperty(\"RequestLimiterInterval\", IsRequired = false, DefaultValue = \"00:00:00\")] [DynamicConfigItem] [TypeConverter(typeof(TimeSpanConverter))] public TimeSpan RequestLimiterInterval { get; protected set; } Property Value TimeSpan Remarks When TimeSpan.Zero the default settings as appropriate for the server are used. RequestLimiterNumber Request limiter (number). [ConfigurationProperty(\"RequestLimiterNumber\", IsRequired = false, DefaultValue = 0)] [DynamicConfigItem] public int RequestLimiterNumber { get; protected set; } Property Value int Remarks RequestLimiterInterval must not be set to TimeSpan.Zero. RestartOnParseError If true, the feed will reconnect on any parse error [ConfigurationProperty(\"RestartOnParseError\", IsRequired = false, DefaultValue = false)] public bool RestartOnParseError { get; protected set; } Property Value bool SSLThumbprint Optional SSL server certificate thumbprint (overrides automatic defaults for servers) [ConfigurationProperty(\"SSLThumbprint\", IsRequired = false, DefaultValue = null)] public string SSLThumbprint { get; protected set; } Property Value string SendTimeout Amount of time to wait for (socket) send operation to complete successfully. [ConfigurationProperty(\"SendTimeout\", IsRequired = false, DefaultValue = \"00:00:00\")] [DynamicConfigItem] [TypeConverter(typeof(TimeSpanConverter))] [TimeSpanValidator] public TimeSpan SendTimeout { get; protected set; } Property Value TimeSpan Remarks TimeSpan.Zero means default timeout will be used, negative value means use maximum value. ServerAliveMsgTimeout Server alive message timeout. [ConfigurationProperty(\"ServerAliveMsgTimeout\", IsRequired = false, DefaultValue = \"00:00:00\")] [DynamicConfigItem] [TypeConverter(typeof(TimeSpanConverter))] [TimeSpanValidator] public TimeSpan ServerAliveMsgTimeout { get; protected set; } Property Value TimeSpan Remarks TimeSpan.Zero means default timeout will be used. BEWARE: there is probably no need to change it unless the protocol updates. Test Whether we should connect to development/test server instead of production one. Cannot be used for LiveOddsVfl and BetPal. [ConfigurationProperty(\"Test\", IsRequired = false, DefaultValue = false)] public bool Test { get; protected set; } Property Value bool Remarks Note that test accounts are disabled on weekends. TimeKeeperMaxSamples TimeKeeper should keep that many samples. [ConfigurationProperty(\"TimeKeeperMaxSamples\", IsRequired = false, DefaultValue = 10)] [DynamicConfigItem] public int TimeKeeperMaxSamples { get; protected set; } Property Value int UseSSL Whether SSL sockets should be used for communication (overrides automatic defaults for servers). Cannot be used for LiveScout. [ConfigurationProperty(\"UseSSL\", IsRequired = false, DefaultValue = true)] public bool UseSSL { get; protected set; } Property Value bool Methods IsReadOnly() Override of ConfigurationElement.IsReadOnly, always returns false. public override bool IsReadOnly() Returns bool false"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.Sections.SdkConfigurationLiveScout.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.Sections.SdkConfigurationLiveScout.html",
    "title": "Class SdkConfigurationLiveScout | sportradar.livedata.sdk",
    "keywords": "Class SdkConfigurationLiveScout Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration.Sections Assembly Sportradar.LiveData.Sdk.dll SDK configuration element with LiveScout feed provider settings. public class SdkConfigurationLiveScout : SdkConfigurationLiveFeed Inheritance object ConfigurationElement ConfigurationElementFeed SdkConfigurationLiveFeed SdkConfigurationLiveScout Inherited Members SdkConfigurationLiveFeed.BookmakerId SdkConfigurationLiveFeed.ClientAliveMsgTimeout SdkConfigurationLiveFeed.EventRequestLimiterInterval SdkConfigurationLiveFeed.EventRequestLimiterNumber SdkConfigurationLiveFeed.Hostname SdkConfigurationLiveFeed.Insecure SdkConfigurationLiveFeed.InvalidDataReconnectWait SdkConfigurationLiveFeed.LoginLimiterInterval SdkConfigurationLiveFeed.LoginLimiterNumber SdkConfigurationLiveFeed.MaxReconnectWait SdkConfigurationLiveFeed.MaxRequestEventIds SdkConfigurationLiveFeed.MaxRequestTimeAllowance SdkConfigurationLiveFeed.MaxServerTimestampAge SdkConfigurationLiveFeed.MaxTimeSkew SdkConfigurationLiveFeed.MinReconnectWait SdkConfigurationLiveFeed.Port SdkConfigurationLiveFeed.ReceiveTimeout SdkConfigurationLiveFeed.RequestLimiterInterval SdkConfigurationLiveFeed.RequestLimiterNumber SdkConfigurationLiveFeed.SendTimeout SdkConfigurationLiveFeed.ServerAliveMsgTimeout SdkConfigurationLiveFeed.SSLThumbprint SdkConfigurationLiveFeed.Test SdkConfigurationLiveFeed.TimeKeeperMaxSamples SdkConfigurationLiveFeed.UseSSL SdkConfigurationLiveFeed.RestartOnParseError SdkConfigurationLiveFeed.IsReadOnly() ConfigurationElementFeed.AlertLogLevel ConfigurationElementFeed.ClientInteractionLogLevel ConfigurationElementFeed.ConfigLogLevel ConfigurationElementFeed.DeadLetterLogLevel ConfigurationElementFeed.InvalidMsgLogLevel ConfigurationElementFeed.StatsLogLevel ConfigurationElementFeed.TrafficLogLevel ConfigurationElementFeed.LoggingFeedName ConfigurationElementFeed.TotalBufferSize ConfigurationElementFeed.SchemaValidationStrictness ConfigurationElementFeed.ReceiveBufferSize ConfigurationElement.DeserializeElement(XmlReader, bool) ConfigurationElement.Equals(object) ConfigurationElement.GetHashCode() ConfigurationElement.GetTransformedAssemblyString(string) ConfigurationElement.GetTransformedTypeString(string) ConfigurationElement.Init() ConfigurationElement.InitializeDefault() ConfigurationElement.IsModified() ConfigurationElement.ListErrors(IList) ConfigurationElement.OnDeserializeUnrecognizedAttribute(string, string) ConfigurationElement.OnDeserializeUnrecognizedElement(string, XmlReader) ConfigurationElement.OnRequiredPropertyNotFound(string) ConfigurationElement.PostDeserialize() ConfigurationElement.PreSerialize(XmlWriter) ConfigurationElement.Reset(ConfigurationElement) ConfigurationElement.ResetModified() ConfigurationElement.SerializeElement(XmlWriter, bool) ConfigurationElement.SerializeToXmlElement(XmlWriter, string) ConfigurationElement.SetPropertyValue(ConfigurationProperty, object, bool) ConfigurationElement.SetReadOnly() ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode) ConfigurationElement.CurrentConfiguration ConfigurationElement.ElementInformation ConfigurationElement.ElementProperty ConfigurationElement.EvaluationContext ConfigurationElement.HasContext ConfigurationElement.this[ConfigurationProperty] ConfigurationElement.this[string] ConfigurationElement.LockAllAttributesExcept ConfigurationElement.LockAllElementsExcept ConfigurationElement.LockAttributes ConfigurationElement.LockElements ConfigurationElement.LockItem ConfigurationElement.Properties object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SdkConfigurationLiveScout() protected SdkConfigurationLiveScout() Properties IsInitialized Is section initialized? public bool IsInitialized { get; } Property Value bool MatchExpireCheckInterval Specifies how frequently we should check for expiration of matches. [ConfigurationProperty(\"MatchExpireCheckInterval\", IsRequired = false, DefaultValue = \"00:05:00\")] [DynamicConfigItem] [TypeConverter(typeof(TimeSpanConverter))] [PositiveTimeSpanValidator] public TimeSpan MatchExpireCheckInterval { get; protected set; } Property Value TimeSpan MatchExpireMaxAge Specifies how long a match can not receive messages and still be actual. [ConfigurationProperty(\"MatchExpireMaxAge\", IsRequired = false, DefaultValue = \"08:00:00\")] [DynamicConfigItem] [TypeConverter(typeof(TimeSpanConverter))] [PositiveTimeSpanValidator] public TimeSpan MatchExpireMaxAge { get; protected set; } Property Value TimeSpan MaxMatchListInterval Timespan limit for when the scout match list is requested. [DynamicConfigItem(Name = \"MaxMatchListInterval\", DefaultValue = \"12:12:00:00\")] [TypeConverter(typeof(TimeSpanConverter))] [PositiveTimeSpanValidator] public TimeSpan MaxMatchListInterval { get; protected set; } Property Value TimeSpan Remarks This is the maximum \"width\" of the interval [hours_back, hours_forward]. Not settable in the configuration directly. ScoutPassword Scout key (overrides IProtocolData) [TypeConverter(typeof(SecureStringConverter))] [ConfigurationProperty(\"ScoutPassword\", IsRequired = true)] public SecureString ScoutPassword { get; protected set; } Property Value SecureString ScoutUsername Scout username (overrides IProtocolData) [ConfigurationProperty(\"ScoutUsername\", IsRequired = true)] public string ScoutUsername { get; protected set; } Property Value string ServerTimeSyncInterval Specifies how frequently we should be requesting for the current scout server time. [ConfigurationProperty(\"ServerTimeSyncInterval\", IsRequired = false, DefaultValue = \"00:01:00\")] [DynamicConfigItem] [TypeConverter(typeof(TimeSpanConverter))] [PositiveTimeSpanValidator] public TimeSpan ServerTimeSyncInterval { get; protected set; } Property Value TimeSpan"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.Sections.SdkConfigurationMessageDispatcher.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.Sections.SdkConfigurationMessageDispatcher.html",
    "title": "Class SdkConfigurationMessageDispatcher | sportradar.livedata.sdk",
    "keywords": "Class SdkConfigurationMessageDispatcher Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration.Sections Assembly Sportradar.LiveData.Sdk.dll SDK configuration element where Message Dispatcher settings are specified. public class SdkConfigurationMessageDispatcher : ConfigurationElement Inheritance object ConfigurationElement SdkConfigurationMessageDispatcher Inherited Members ConfigurationElement.DeserializeElement(XmlReader, bool) ConfigurationElement.Equals(object) ConfigurationElement.GetHashCode() ConfigurationElement.GetTransformedAssemblyString(string) ConfigurationElement.GetTransformedTypeString(string) ConfigurationElement.Init() ConfigurationElement.InitializeDefault() ConfigurationElement.IsModified() ConfigurationElement.ListErrors(IList) ConfigurationElement.OnDeserializeUnrecognizedAttribute(string, string) ConfigurationElement.OnDeserializeUnrecognizedElement(string, XmlReader) ConfigurationElement.OnRequiredPropertyNotFound(string) ConfigurationElement.PostDeserialize() ConfigurationElement.PreSerialize(XmlWriter) ConfigurationElement.Reset(ConfigurationElement) ConfigurationElement.ResetModified() ConfigurationElement.SerializeElement(XmlWriter, bool) ConfigurationElement.SerializeToXmlElement(XmlWriter, string) ConfigurationElement.SetPropertyValue(ConfigurationProperty, object, bool) ConfigurationElement.SetReadOnly() ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode) ConfigurationElement.CurrentConfiguration ConfigurationElement.ElementInformation ConfigurationElement.ElementProperty ConfigurationElement.EvaluationContext ConfigurationElement.HasContext ConfigurationElement.this[ConfigurationProperty] ConfigurationElement.this[string] ConfigurationElement.LockAllAttributesExcept ConfigurationElement.LockAllElementsExcept ConfigurationElement.LockAttributes ConfigurationElement.LockElements ConfigurationElement.LockItem ConfigurationElement.Properties object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SdkConfigurationMessageDispatcher() protected SdkConfigurationMessageDispatcher() Properties DispatcherThreadPingTimeout If there is no alive ping received from any of the dispatcher threads in this timeout period, the dispatcher will update its health status to unresponsive. This can be caused by a client handler blocking the dispatcher thread execution. [ConfigurationProperty(\"DispatcherThreadPingTimeout\", IsRequired = false, DefaultValue = \"00:00:05\")] [DynamicConfigItem] [TypeConverter(typeof(TimeSpanConverter))] [PositiveTimeSpanValidator] public TimeSpan DispatcherThreadPingTimeout { get; protected set; } Property Value TimeSpan HealthCheckInterval Interval at which dispatcher health status is checked (i.e. whether all dispatcher threads are live and kicking) [ConfigurationProperty(\"HealthCheckInterval\", IsRequired = false, DefaultValue = \"00:00:01\")] [DynamicConfigItem] [TypeConverter(typeof(TimeSpanConverter))] [PositiveTimeSpanValidator] public TimeSpan HealthCheckInterval { get; protected set; } Property Value TimeSpan MaxDispatchEventsPerSecond Limits the rate at which events can be dispatched to client handlers. [ConfigurationProperty(\"MaxDispatchEventsPerSecond\", IsRequired = false, DefaultValue = 2147483647)] [DynamicConfigItem] [IntegerValidator(MinValue = 1)] public int MaxDispatchEventsPerSecond { get; protected set; } Property Value int NumDispatchers Total number of message dispatcher threads [ConfigurationProperty(\"NumDispatchers\", IsRequired = false, DefaultValue = 3)] [IntegerValidator(MinValue = 1, MaxValue = 64)] public int NumDispatchers { get; protected set; } Property Value int Methods IsReadOnly() Override of ConfigurationElement.IsReadOnly, always returns false. public override bool IsReadOnly() Returns bool false"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.Sections.SdkConfigurationPersistentState.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.Sections.SdkConfigurationPersistentState.html",
    "title": "Class SdkConfigurationPersistentState | sportradar.livedata.sdk",
    "keywords": "Class SdkConfigurationPersistentState Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration.Sections Assembly Sportradar.LiveData.Sdk.dll SDK configuration element with Persistent State provider settings (SqLite database settings). public class SdkConfigurationPersistentState : ConfigurationElement Inheritance object ConfigurationElement SdkConfigurationPersistentState Inherited Members ConfigurationElement.DeserializeElement(XmlReader, bool) ConfigurationElement.Equals(object) ConfigurationElement.GetHashCode() ConfigurationElement.GetTransformedAssemblyString(string) ConfigurationElement.GetTransformedTypeString(string) ConfigurationElement.Init() ConfigurationElement.InitializeDefault() ConfigurationElement.IsModified() ConfigurationElement.ListErrors(IList) ConfigurationElement.OnDeserializeUnrecognizedAttribute(string, string) ConfigurationElement.OnDeserializeUnrecognizedElement(string, XmlReader) ConfigurationElement.OnRequiredPropertyNotFound(string) ConfigurationElement.PostDeserialize() ConfigurationElement.PreSerialize(XmlWriter) ConfigurationElement.Reset(ConfigurationElement) ConfigurationElement.ResetModified() ConfigurationElement.SerializeElement(XmlWriter, bool) ConfigurationElement.SerializeToXmlElement(XmlWriter, string) ConfigurationElement.SetPropertyValue(ConfigurationProperty, object, bool) ConfigurationElement.SetReadOnly() ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode) ConfigurationElement.CurrentConfiguration ConfigurationElement.ElementInformation ConfigurationElement.ElementProperty ConfigurationElement.EvaluationContext ConfigurationElement.HasContext ConfigurationElement.this[ConfigurationProperty] ConfigurationElement.this[string] ConfigurationElement.LockAllAttributesExcept ConfigurationElement.LockAllElementsExcept ConfigurationElement.LockAttributes ConfigurationElement.LockElements ConfigurationElement.LockItem ConfigurationElement.Properties object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SdkConfigurationPersistentState() protected SdkConfigurationPersistentState() Properties ExpireInterval Time interval to check for expired key value pairs stored in PersistentStateBuffer [ConfigurationProperty(\"ExpireInterval\", IsRequired = false, DefaultValue = \"00:01:00\")] [DynamicConfigItem] [TypeConverter(typeof(TimeSpanConverter))] [PositiveTimeSpanValidator] public TimeSpan ExpireInterval { get; protected set; } Property Value TimeSpan FlushInterval Time interval to flush key value pairs into provided persistant store [ConfigurationProperty(\"FlushInterval\", IsRequired = false, DefaultValue = \"00:00:05\")] [DynamicConfigItem] [TypeConverter(typeof(TimeSpanConverter))] [PositiveTimeSpanValidator] public TimeSpan FlushInterval { get; protected set; } Property Value TimeSpan MaxAge Max age for stored key value pairs in PersistentStateBuffer [ConfigurationProperty(\"MaxAge\", IsRequired = false, DefaultValue = \"5:00:00:00\")] [DynamicConfigItem] [TypeConverter(typeof(TimeSpanConverter))] [PositiveTimeSpanValidator] public TimeSpan MaxAge { get; protected set; } Property Value TimeSpan MaxFlushBatchSize Maximum number of key value pairs in state buffer before flushing [ConfigurationProperty(\"MaxFlushBatchSize\", IsRequired = false, DefaultValue = 64)] [DynamicConfigItem] [IntegerValidator(MinValue = 1, MaxValue = 512)] public int MaxFlushBatchSize { get; protected set; } Property Value int SqliteDatabaseDirectory Directory for the Sqlite database file [ConfigurationProperty(\"SqliteDatabaseDirectory\", IsRequired = false, DefaultValue = \"\")] [DynamicConfigItem] public string SqliteDatabaseDirectory { get; set; } Property Value string Remarks By default AppDomain.CurrentDomain.BaseDirectory is used. SqliteDatabaseFilename Filename for the Sqlite database file [ConfigurationProperty(\"SqliteDatabaseFilename\", IsRequired = false, DefaultValue = \"sdkstate.db\")] [DynamicConfigItem] public string SqliteDatabaseFilename { get; set; } Property Value string Remarks By default \"sdkstate.db\" is used as the filename Methods IsReadOnly() Override of ConfigurationElement.IsReadOnly, always returns false. public override bool IsReadOnly() Returns bool false"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.Sections.SdkConfigurationSection.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.Sections.SdkConfigurationSection.html",
    "title": "Class SdkConfigurationSection | sportradar.livedata.sdk",
    "keywords": "Class SdkConfigurationSection Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration.Sections Assembly Sportradar.LiveData.Sdk.dll SDK configuration section. public class SdkConfigurationSection : ConfigurationSection, ISdkConfiguration Inheritance object ConfigurationElement ConfigurationSection SdkConfigurationSection Implements ISdkConfiguration Inherited Members ConfigurationSection.DeserializeSection(XmlReader) ConfigurationSection.GetRuntimeObject() ConfigurationSection.IsModified() ConfigurationSection.ResetModified() ConfigurationSection.SerializeSection(ConfigurationElement, string, ConfigurationSaveMode) ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement, string, FrameworkName) ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty, string, FrameworkName, ConfigurationElement) ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName) ConfigurationSection.SectionInformation ConfigurationElement.DeserializeElement(XmlReader, bool) ConfigurationElement.Equals(object) ConfigurationElement.GetHashCode() ConfigurationElement.GetTransformedAssemblyString(string) ConfigurationElement.GetTransformedTypeString(string) ConfigurationElement.Init() ConfigurationElement.InitializeDefault() ConfigurationElement.ListErrors(IList) ConfigurationElement.OnDeserializeUnrecognizedAttribute(string, string) ConfigurationElement.OnDeserializeUnrecognizedElement(string, XmlReader) ConfigurationElement.OnRequiredPropertyNotFound(string) ConfigurationElement.PostDeserialize() ConfigurationElement.PreSerialize(XmlWriter) ConfigurationElement.Reset(ConfigurationElement) ConfigurationElement.SerializeElement(XmlWriter, bool) ConfigurationElement.SerializeToXmlElement(XmlWriter, string) ConfigurationElement.SetPropertyValue(ConfigurationProperty, object, bool) ConfigurationElement.SetReadOnly() ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode) ConfigurationElement.CurrentConfiguration ConfigurationElement.ElementInformation ConfigurationElement.ElementProperty ConfigurationElement.EvaluationContext ConfigurationElement.HasContext ConfigurationElement.this[ConfigurationProperty] ConfigurationElement.this[string] ConfigurationElement.LockAllAttributesExcept ConfigurationElement.LockAllElementsExcept ConfigurationElement.LockAttributes ConfigurationElement.LockElements ConfigurationElement.LockItem ConfigurationElement.Properties object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SdkConfigurationSection() public SdkConfigurationSection() Properties Common SDK configuration element where common settings used throughout the SDK library are specified. [ConfigurationProperty(\"Common\", IsRequired = false)] public SdkConfigurationCommon Common { get; protected set; } Property Value SdkConfigurationCommon Dynamic SDK configuration element where settings for the server-side configuration service are specified (mostly access parameters). [ConfigurationProperty(\"Dynamic\", IsRequired = false)] public SdkConfigurationDynamic Dynamic { get; protected set; } Property Value SdkConfigurationDynamic LiveScout SDK configuration element with LiveScout feed provider settings. [ConfigurationProperty(\"LiveScout\", IsRequired = false)] public SdkConfigurationLiveScout LiveScout { get; protected set; } Property Value SdkConfigurationLiveScout MessageDispatcher SDK configuration element where Message Dispatcher settings are specified. [ConfigurationProperty(\"MessageDispatcher\", IsRequired = false)] public SdkConfigurationMessageDispatcher MessageDispatcher { get; protected set; } Property Value SdkConfigurationMessageDispatcher PersistentState SDK configuration element with Persistent State provider settings (SqLite database settings). [ConfigurationProperty(\"PersistentState\", IsRequired = false)] public SdkConfigurationPersistentState PersistentState { get; protected set; } Property Value SdkConfigurationPersistentState Methods IsReadOnly() Override of ConfigurationElement.IsReadOnly, always returns false. public override bool IsReadOnly() Returns bool false Events OnConfigurationReloaded Event fired every time that configuration is reloaded / refreshed and might have changed. This is a good time for components to update their cached configuration settings, if any. public event SdkConfigurationDelegates.ConfigReloadedDelegate OnConfigurationReloaded Event Type SdkConfigurationDelegates.ConfigReloadedDelegate"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.Sections.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.Sections.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration.Sections | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration.Sections Classes ConfigurationElementFeed SdkConfigurationCommon SdkConfigurationDynamic SdkConfigurationLiveFeed SDK configuration element where common live feed provider settings are stored (connectivity, rate limiters, etc.). SdkConfigurationLiveScout SDK configuration element with LiveScout feed provider settings. SdkConfigurationMessageDispatcher SDK configuration element where Message Dispatcher settings are specified. SdkConfigurationPersistentState SDK configuration element with Persistent State provider settings (SqLite database settings). SdkConfigurationSection SDK configuration section."
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.Validators.NullableIntegerValidator.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.Validators.NullableIntegerValidator.html",
    "title": "Class NullableIntegerValidator | sportradar.livedata.sdk",
    "keywords": "Class NullableIntegerValidator Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration.Validators Assembly Sportradar.LiveData.Sdk.dll public class NullableIntegerValidator : ConfigurationValidatorBase Inheritance object ConfigurationValidatorBase NullableIntegerValidator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NullableIntegerValidator() public NullableIntegerValidator() NullableIntegerValidator(int, int) public NullableIntegerValidator(int min_value, int max_value) Parameters min_value int max_value int NullableIntegerValidator(int, int, bool) public NullableIntegerValidator(int min_value, int max_value, bool range_is_exclusive) Parameters min_value int max_value int range_is_exclusive bool NullableIntegerValidator(int, int, bool, int) public NullableIntegerValidator(int min_value, int max_value, bool range_is_exclusive, int resolution) Parameters min_value int max_value int range_is_exclusive bool resolution int Methods CanValidate(Type) Determines whether an object can be validated based on type. public override bool CanValidate(Type type) Parameters type Type The object type. Returns bool true if the type parameter value matches the expected type; otherwise, false. Validate(object) Determines whether the value of an object is valid. public override void Validate(object value) Parameters value object The object value."
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.Validators.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.Validators.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration.Validators | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration.Validators Classes NullableIntegerValidator"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfiguration.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Services.SdkConfiguration Classes FeedConfig PropertyValidators ProviderConfig SdkConfigurationDelegates Configuration delegates. SdkLiveConfiguration Interfaces ISdkConfiguration Enums FeedConfig.ServerType Delegates SdkConfigurationDelegates.ConfigReloadedDelegate Indicates that configuration has been reloaded/refreshed and might have changed. This is a good time for components to update their cached configuration settings, if any."
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfigurationManipulation.Dynamic.DynamicSettings.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfigurationManipulation.Dynamic.DynamicSettings.html",
    "title": "Class DynamicSettings | sportradar.livedata.sdk",
    "keywords": "Class DynamicSettings Namespace Sportradar.LiveData.Sdk.Services.SdkConfigurationManipulation.Dynamic Assembly Sportradar.LiveData.Sdk.dll public sealed class DynamicSettings Inheritance object DynamicSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors DynamicSettings(ISdkLogger, ISdkConfiguration, bool) public DynamicSettings(ISdkLogger sdk_logger, ISdkConfiguration config, bool settings_override = false) Parameters sdk_logger ISdkLogger config ISdkConfiguration settings_override bool Fields PREFIX public const string PREFIX = \"Sportradar.SDK\" Field Value string REMOVE_WORD public const string REMOVE_WORD = \"SdkConfiguration\" Field Value string UNKNOWN public const string UNKNOWN = \"UNKNOWN\" Field Value string Methods DumpAll() public void DumpAll() SetProperty(string, string, bool) public bool SetProperty(string key, string value, bool validate = true) Parameters key string value string validate bool Returns bool"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfigurationManipulation.Dynamic.HttpRequester.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfigurationManipulation.Dynamic.HttpRequester.html",
    "title": "Class HttpRequester | sportradar.livedata.sdk",
    "keywords": "Class HttpRequester Namespace Sportradar.LiveData.Sdk.Services.SdkConfigurationManipulation.Dynamic Assembly Sportradar.LiveData.Sdk.dll public class HttpRequester Inheritance object HttpRequester Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HttpRequester(ISdkLogger, ISdkConfiguration, bool) public HttpRequester(ISdkLogger sdk_logger, ISdkConfiguration config, bool override_file_changes) Parameters sdk_logger ISdkLogger config ISdkConfiguration override_file_changes bool Fields HTTP_METHOD public const string HTTP_METHOD = \"GET\" Field Value string ID_PARAM public const string ID_PARAM = \"id=\" Field Value string ID_PATTERN public const string ID_PATTERN = \"{ID}\" Field Value string NAMESPACE public const string NAMESPACE = \"Sportradar.SDK\" Field Value string NS_PARAM public const string NS_PARAM = \"ns=\" Field Value string NS_PATTERN public const string NS_PATTERN = \"{NS}\" Field Value string VER_PARAM public const string VER_PARAM = \"ver=\" Field Value string VER_PATTERN public const string VER_PATTERN = \"{VER}\" Field Value string Properties BookmakerId public int BookmakerId { get; } Property Value int Methods ConstructUrl() protected virtual string ConstructUrl() Returns string GetConfigInternal() protected virtual void GetConfigInternal() GetNewConfig() public void GetNewConfig() RequestUrl(string, Action<string, string>) Do a HTTP GET request on the given URL. protected virtual void RequestUrl(string url, Action<string, string> setting_action) Parameters url string Uniform Resource Locator ala http://www.klika.si setting_action Action<string, string> Action to be executed on every setting key value pair returned from the stream Start() public virtual void Start() Stop() public virtual void Stop() ValidateServerCertificate(object, X509Certificate, X509Chain, SslPolicyErrors) protected virtual bool ValidateServerCertificate(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors ssl_policy_errors) Parameters sender object certificate X509Certificate chain X509Chain ssl_policy_errors SslPolicyErrors Returns bool"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfigurationManipulation.Dynamic.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfigurationManipulation.Dynamic.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Services.SdkConfigurationManipulation.Dynamic | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Services.SdkConfigurationManipulation.Dynamic Classes DynamicSettings HttpRequester"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfigurationManipulation.ProviderFactory.IProviderFactory.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfigurationManipulation.ProviderFactory.IProviderFactory.html",
    "title": "Interface IProviderFactory | sportradar.livedata.sdk",
    "keywords": "Interface IProviderFactory Namespace Sportradar.LiveData.Sdk.Services.SdkConfigurationManipulation.ProviderFactory Assembly Sportradar.LiveData.Sdk.dll public interface IProviderFactory Methods BuildLiveScoutProvider(ISdkConfiguration, ProtocolProviderType, Func<ISdkConfiguration, SdkConfigurationLiveFeed>) IProtocolProvider BuildLiveScoutProvider(ISdkConfiguration config, ProtocolProviderType type, Func<ISdkConfiguration, SdkConfigurationLiveFeed> get_local_config) Parameters config ISdkConfiguration type ProtocolProviderType get_local_config Func<ISdkConfiguration, SdkConfigurationLiveFeed> Returns IProtocolProvider"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfigurationManipulation.ProviderFactory.ProviderFactory.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfigurationManipulation.ProviderFactory.ProviderFactory.html",
    "title": "Class ProviderFactory | sportradar.livedata.sdk",
    "keywords": "Class ProviderFactory Namespace Sportradar.LiveData.Sdk.Services.SdkConfigurationManipulation.ProviderFactory Assembly Sportradar.LiveData.Sdk.dll public sealed class ProviderFactory : IProviderFactory Inheritance object ProviderFactory Implements IProviderFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Methods BuildLiveScoutProvider(ISdkConfiguration, ProtocolProviderType, Func<ISdkConfiguration, SdkConfigurationLiveFeed>) public IProtocolProvider BuildLiveScoutProvider(ISdkConfiguration config, ProtocolProviderType type, Func<ISdkConfiguration, SdkConfigurationLiveFeed> get_local_config) Parameters config ISdkConfiguration type ProtocolProviderType get_local_config Func<ISdkConfiguration, SdkConfigurationLiveFeed> Returns IProtocolProvider"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkConfigurationManipulation.ProviderFactory.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkConfigurationManipulation.ProviderFactory.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Services.SdkConfigurationManipulation.ProviderFactory | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Services.SdkConfigurationManipulation.ProviderFactory Classes ProviderFactory Interfaces IProviderFactory"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkLogger.ISdkLogger.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkLogger.ISdkLogger.html",
    "title": "Interface ISdkLogger | sportradar.livedata.sdk",
    "keywords": "Interface ISdkLogger Namespace Sportradar.LiveData.Sdk.Services.SdkLogger Assembly Sportradar.LiveData.Sdk.dll public interface ISdkLogger Methods IsDebugEnabled(SdkLogAppenderType) bool IsDebugEnabled(SdkLogAppenderType appender_type) Parameters appender_type SdkLogAppenderType Returns bool IsErrorEnabled(SdkLogAppenderType) bool IsErrorEnabled(SdkLogAppenderType appender_type) Parameters appender_type SdkLogAppenderType Returns bool IsFatalEnabled(SdkLogAppenderType) bool IsFatalEnabled(SdkLogAppenderType appender_type) Parameters appender_type SdkLogAppenderType Returns bool IsInfoEnabled(SdkLogAppenderType) bool IsInfoEnabled(SdkLogAppenderType appender_type) Parameters appender_type SdkLogAppenderType Returns bool IsLevelEnabled(Level, SdkLogAppenderType) bool IsLevelEnabled(Level level, SdkLogAppenderType appender_type) Parameters level Level appender_type SdkLogAppenderType Returns bool IsWarnEnabled(SdkLogAppenderType) bool IsWarnEnabled(SdkLogAppenderType appender_type) Parameters appender_type SdkLogAppenderType Returns bool LogAlert(Level, string, Exception) SDK will generate and signal alerts in case of any special events. This could happen when network connection is dropped, rate-limiting thresholds are exceeded, when going over queue low/high watermarks, when feed error recovery is in progress, if persistent state store gets out-of-sync, when event dispatching is put on pause, when SDK library is reloaded, current status of login sequence, etc. Alerts will be dumped into dedicated alert logs. Special alerts (configurable) could be logged to other log appenders, like SMTP appender, NT Event Log appender or JmxLogger appender. void LogAlert(Level level, string msg, Exception e = null) Parameters level Level Log level msg string Alert message e Exception Optional exception LogClientInteraction(Level, string, Exception) All interaction with the client software on the SDK interface level will be logged in a separate client communication log. This includes all method invocations on the SDK interface including parameter values, request parameter validation errors and other errors returned by the SDK, unhandled client exceptions, errors reported by the client handlers, timings of each call, etc. void LogClientInteraction(Level level, string msg, Exception e = null) Parameters level Level Log level msg string String message e Exception Optional exception LogClientInteraction(Level, string, TimeSpan, Exception) All interaction with the client software on the SDK interface level will be logged in a separate client communication log. This includes all method invocations on the SDK interface including parameter values, request parameter validation errors and other errors returned by the SDK, unhandled client exceptions, errors reported by the client handlers, timings of each call, etc. void LogClientInteraction(Level level, string msg, TimeSpan time_elapsed, Exception e = null) Parameters level Level Log level msg string String message time_elapsed TimeSpan Elapsed time while processing client request or client handler invocation e Exception Optional exception LogConfiguration(Level, string, Exception) SDK will keep a track of all SDK configuration settings used by the client. Configuration settings are loaded at startup and are also periodically pulled from the configuration server. void LogConfiguration(Level level, string msg, Exception e = null) Parameters level Level Log level msg string Configuration settings (key-value tuples) dumped into message e Exception Optional exception LogDeadLetter(Level, string) Logs dead letter messages that are otherwise redirected to client provided dead letter queue. void LogDeadLetter(Level level, string msg) Parameters level Level Log level msg string Dead letter message LogInvalidMessage(Level, string) Corrupt input feed data will be dumped into log files dedicated to corrupt input data (could be garbage and not even text, exceeding max buffer size). Invalid input messages will be dumped into log files dedicated to invalid input messages (text, but not necessarily XML). void LogInvalidMessage(Level level, string msg) Parameters level Level Log level msg string Invalid message LogStatistics(Level, string) SDK will keep a track of some traffic, queue, performance and error statistics. Aggregated snapshots of these statistics will be periodically flushed into statistics logs. void LogStatistics(Level level, string msg) Parameters level Level Log level msg string Statistics dumped into message LogTraffic(Level, string) Depending on configuration SDK will be able to dump all feed XML traffic into dedicated traffic logs. This data is already logged at the feed server level but here the client will have possibility to configure traffic log filters based on the type of message, level of detail, match id, etc. void LogTraffic(Level level, string msg) Parameters level Level Log level msg string Message that was either read or written to the communication channel"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkLogger.SafeSdkLogger.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkLogger.SafeSdkLogger.html",
    "title": "Class SafeSdkLogger | sportradar.livedata.sdk",
    "keywords": "Class SafeSdkLogger Namespace Sportradar.LiveData.Sdk.Services.SdkLogger Assembly Sportradar.LiveData.Sdk.dll public class SafeSdkLogger : ISdkLogger Inheritance object SafeSdkLogger Implements ISdkLogger Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SafeSdkLogger() public SafeSdkLogger() Methods IsDebugEnabled(SdkLogAppenderType) public bool IsDebugEnabled(SdkLogAppenderType appender_type) Parameters appender_type SdkLogAppenderType Returns bool IsErrorEnabled(SdkLogAppenderType) public bool IsErrorEnabled(SdkLogAppenderType appender_type) Parameters appender_type SdkLogAppenderType Returns bool IsFatalEnabled(SdkLogAppenderType) public bool IsFatalEnabled(SdkLogAppenderType appender_type) Parameters appender_type SdkLogAppenderType Returns bool IsInfoEnabled(SdkLogAppenderType) public bool IsInfoEnabled(SdkLogAppenderType appender_type) Parameters appender_type SdkLogAppenderType Returns bool IsLevelEnabled(Level, SdkLogAppenderType) public bool IsLevelEnabled(Level level, SdkLogAppenderType appender_type) Parameters level Level appender_type SdkLogAppenderType Returns bool IsWarnEnabled(SdkLogAppenderType) public bool IsWarnEnabled(SdkLogAppenderType appender_type) Parameters appender_type SdkLogAppenderType Returns bool LogAlert(Level, string, Exception) SDK will generate and signal alerts in case of any special events. This could happen when network connection is dropped, rate-limiting thresholds are exceeded, when going over queue low/high watermarks, when feed error recovery is in progress, if persistent state store gets out-of-sync, when event dispatching is put on pause, when SDK library is reloaded, current status of login sequence, etc. Alerts will be dumped into dedicated alert logs. Special alerts (configurable) could be logged to other log appenders, like SMTP appender, NT Event Log appender or JmxLogger appender. public void LogAlert(Level level, string msg, Exception e = null) Parameters level Level Log level msg string Alert message e Exception Optional exception LogClientInteraction(Level, string, Exception) All interaction with the client software on the SDK interface level will be logged in a separate client communication log. This includes all method invocations on the SDK interface including parameter values, request parameter validation errors and other errors returned by the SDK, unhandled client exceptions, errors reported by the client handlers, timings of each call, etc. public void LogClientInteraction(Level level, string msg, Exception e = null) Parameters level Level Log level msg string String message e Exception Optional exception LogClientInteraction(Level, string, TimeSpan, Exception) All interaction with the client software on the SDK interface level will be logged in a separate client communication log. This includes all method invocations on the SDK interface including parameter values, request parameter validation errors and other errors returned by the SDK, unhandled client exceptions, errors reported by the client handlers, timings of each call, etc. public void LogClientInteraction(Level level, string msg, TimeSpan time_elapsed, Exception e = null) Parameters level Level Log level msg string String message time_elapsed TimeSpan Elapsed time while processing client request or client handler invocation e Exception Optional exception LogConfiguration(Level, string, Exception) SDK will keep a track of all SDK configuration settings used by the client. Configuration settings are loaded at startup and are also periodically pulled from the configuration server. public void LogConfiguration(Level level, string msg, Exception e = null) Parameters level Level Log level msg string Configuration settings (key-value tuples) dumped into message e Exception Optional exception LogDeadLetter(Level, string) Logs dead letter messages that are otherwise redirected to client provided dead letter queue. public void LogDeadLetter(Level level, string msg) Parameters level Level Log level msg string Dead letter message LogInvalidMessage(Level, string) Corrupt input feed data will be dumped into log files dedicated to corrupt input data (could be garbage and not even text, exceeding max buffer size). Invalid input messages will be dumped into log files dedicated to invalid input messages (text, but not necessarily XML). public void LogInvalidMessage(Level level, string msg) Parameters level Level Log level msg string Invalid message LogStatistics(Level, string) SDK will keep a track of some traffic, queue, performance and error statistics. Aggregated snapshots of these statistics will be periodically flushed into statistics logs. public void LogStatistics(Level level, string msg) Parameters level Level Log level msg string Statistics dumped into message LogTraffic(Level, string) Depending on configuration SDK will be able to dump all feed XML traffic into dedicated traffic logs. This data is already logged at the feed server level but here the client will have possibility to configure traffic log filters based on the type of message, level of detail, match id, etc. public void LogTraffic(Level level, string msg) Parameters level Level Log level msg string Message that was either read or written to the communication channel Start() public void Start() Stop() public void Stop()"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkLogger.SdkLogAppenderType.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkLogger.SdkLogAppenderType.html",
    "title": "Enum SdkLogAppenderType | sportradar.livedata.sdk",
    "keywords": "Enum SdkLogAppenderType Namespace Sportradar.LiveData.Sdk.Services.SdkLogger Assembly Sportradar.LiveData.Sdk.dll public enum SdkLogAppenderType Fields ALERT = 5 Alert appender. CLIENT_INTERACTION = 4 Client interaction appender. CONFIG = 7 Configuration appender. DEAD_LETTER = 2 Dead letter appender. INVALID_MSG = 1 Invalid message appender. STATS = 6 Statistics appender. TRAFFIC = 3 Traffic appender. UNDEFINED = 0 Undefined"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkLogger.SdkLogger.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkLogger.SdkLogger.html",
    "title": "Class SdkLogger | sportradar.livedata.sdk",
    "keywords": "Class SdkLogger Namespace Sportradar.LiveData.Sdk.Services.SdkLogger Assembly Sportradar.LiveData.Sdk.dll public class SdkLogger : ISdkLogger Inheritance object SdkLogger Implements ISdkLogger Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SdkLogger(ISdkConfiguration, ILoggerData) public SdkLogger(ISdkConfiguration config, ILoggerData logger_config) Parameters config ISdkConfiguration logger_config ILoggerData Methods GetAppenderType(string) public static SdkLogAppenderType GetAppenderType(string appender_name) Parameters appender_name string Returns SdkLogAppenderType IsDebugEnabled(SdkLogAppenderType) public bool IsDebugEnabled(SdkLogAppenderType appender_type) Parameters appender_type SdkLogAppenderType Returns bool IsErrorEnabled(SdkLogAppenderType) public bool IsErrorEnabled(SdkLogAppenderType appender_type) Parameters appender_type SdkLogAppenderType Returns bool IsFatalEnabled(SdkLogAppenderType) public bool IsFatalEnabled(SdkLogAppenderType appender_type) Parameters appender_type SdkLogAppenderType Returns bool IsInfoEnabled(SdkLogAppenderType) public bool IsInfoEnabled(SdkLogAppenderType appender_type) Parameters appender_type SdkLogAppenderType Returns bool IsLevelEnabled(Level, SdkLogAppenderType) public bool IsLevelEnabled(Level level, SdkLogAppenderType appender_type) Parameters level Level appender_type SdkLogAppenderType Returns bool IsWarnEnabled(SdkLogAppenderType) public bool IsWarnEnabled(SdkLogAppenderType appender_type) Parameters appender_type SdkLogAppenderType Returns bool LogAlert(Level, string, Exception) SDK will generate and signal alerts in case of any special events. This could happen when network connection is dropped, rate-limiting thresholds are exceeded, when going over queue low/high watermarks, when feed error recovery is in progress, if persistent state store gets out-of-sync, when event dispatching is put on pause, when SDK library is reloaded, current status of login sequence, etc. Alerts will be dumped into dedicated alert logs. Special alerts (configurable) could be logged to other log appenders, like SMTP appender, NT Event Log appender or JmxLogger appender. public void LogAlert(Level level, string msg, Exception e = null) Parameters level Level Log level msg string Alert message e Exception Optional exception LogClientInteraction(Level, string, Exception) All interaction with the client software on the SDK interface level will be logged in a separate client communication log. This includes all method invocations on the SDK interface including parameter values, request parameter validation errors and other errors returned by the SDK, unhandled client exceptions, errors reported by the client handlers, timings of each call, etc. public void LogClientInteraction(Level level, string msg, Exception e = null) Parameters level Level Log level msg string String message e Exception Optional exception LogClientInteraction(Level, string, TimeSpan, Exception) All interaction with the client software on the SDK interface level will be logged in a separate client communication log. This includes all method invocations on the SDK interface including parameter values, request parameter validation errors and other errors returned by the SDK, unhandled client exceptions, errors reported by the client handlers, timings of each call, etc. public void LogClientInteraction(Level level, string msg, TimeSpan time_elapsed, Exception e = null) Parameters level Level Log level msg string String message time_elapsed TimeSpan Elapsed time while processing client request or client handler invocation e Exception Optional exception LogConfiguration(Level, string, Exception) SDK will keep a track of all SDK configuration settings used by the client. Configuration settings are loaded at startup and are also periodically pulled from the configuration server. public void LogConfiguration(Level level, string msg, Exception e = null) Parameters level Level Log level msg string Configuration settings (key-value tuples) dumped into message e Exception Optional exception LogDeadLetter(Level, string) Logs dead letter messages that are otherwise redirected to client provided dead letter queue. public void LogDeadLetter(Level level, string msg) Parameters level Level Log level msg string Dead letter message LogInvalidMessage(Level, string) Corrupt input feed data will be dumped into log files dedicated to corrupt input data (could be garbage and not even text, exceeding max buffer size). Invalid input messages will be dumped into log files dedicated to invalid input messages (text, but not necessarily XML). public void LogInvalidMessage(Level level, string msg) Parameters level Level Log level msg string Invalid message LogStatistics(Level, string) SDK will keep a track of some traffic, queue, performance and error statistics. Aggregated snapshots of these statistics will be periodically flushed into statistics logs. public void LogStatistics(Level level, string msg) Parameters level Level Log level msg string Statistics dumped into message LogTraffic(Level, string) Depending on configuration SDK will be able to dump all feed XML traffic into dedicated traffic logs. This data is already logged at the feed server level but here the client will have possibility to configure traffic log filters based on the type of message, level of detail, match id, etc. public void LogTraffic(Level level, string msg) Parameters level Level Log level msg string Message that was either read or written to the communication channel"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkLogger.SdkLoggerCfg.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkLogger.SdkLoggerCfg.html",
    "title": "Class SdkLoggerCfg | sportradar.livedata.sdk",
    "keywords": "Class SdkLoggerCfg Namespace Sportradar.LiveData.Sdk.Services.SdkLogger Assembly Sportradar.LiveData.Sdk.dll public static class SdkLoggerCfg Inheritance object SdkLoggerCfg Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ConfigureLoggerHierarchy(IList<IAppender>) public static void ConfigureLoggerHierarchy(IList<IAppender> appenders) Parameters appenders IList<IAppender> CreateAppender(string, string, string, int, string, Level, string, bool) public static IAppender CreateAppender(string appender_name, string log_path, string file_name, int maxSizeRollBackups, string maximumFileSize, Level threshold = null, string log_pattern = null, bool whitelist_filter = true) Parameters appender_name string log_path string file_name string maxSizeRollBackups int maximumFileSize string threshold Level log_pattern string whitelist_filter bool Returns IAppender"
  },
  "api/Sportradar.LiveData.Sdk.Services.SdkLogger.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.SdkLogger.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Services.SdkLogger | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Services.SdkLogger Classes SafeSdkLogger SdkLogger SdkLoggerCfg Interfaces ISdkLogger Enums SdkLogAppenderType"
  },
  "api/Sportradar.LiveData.Sdk.Services.WindsorExtensions.NonPublicActivator.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.WindsorExtensions.NonPublicActivator.html",
    "title": "Class NonPublicActivator | sportradar.livedata.sdk",
    "keywords": "Class NonPublicActivator Namespace Sportradar.LiveData.Sdk.Services.WindsorExtensions Assembly Sportradar.LiveData.Sdk.dll public class NonPublicActivator : DefaultComponentActivator, IComponentActivator Inheritance object AbstractComponentActivator DefaultComponentActivator NonPublicActivator Implements IComponentActivator Inherited Members DefaultComponentActivator.InternalCreate(CreationContext) DefaultComponentActivator.InternalDestroy(object) DefaultComponentActivator.Instantiate(CreationContext) DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate, object[], Type) DefaultComponentActivator.SelectEligibleConstructor(CreationContext) DefaultComponentActivator.CanSatisfyDependency(CreationContext, DependencyModel) DefaultComponentActivator.CreateConstructorArguments(ConstructorCandidate, CreationContext) DefaultComponentActivator.SetUpProperties(object, CreationContext) AbstractComponentActivator.Create(CreationContext, Burden) AbstractComponentActivator.Destroy(object) AbstractComponentActivator.ApplyCommissionConcerns(object) AbstractComponentActivator.ApplyConcerns(IEnumerable<ICommissionConcern>, object) AbstractComponentActivator.ApplyConcerns(IEnumerable<IDecommissionConcern>, object) AbstractComponentActivator.ApplyDecommissionConcerns(object) AbstractComponentActivator.Kernel AbstractComponentActivator.Model AbstractComponentActivator.OnCreation AbstractComponentActivator.OnDestruction object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NonPublicActivator(ComponentModel, IKernelInternal, ComponentInstanceDelegate, ComponentInstanceDelegate) public NonPublicActivator(ComponentModel model, IKernelInternal kernel, ComponentInstanceDelegate on_creation, ComponentInstanceDelegate on_destruction) Parameters model ComponentModel kernel IKernelInternal on_creation ComponentInstanceDelegate on_destruction ComponentInstanceDelegate Methods CreateInstance(CreationContext, ConstructorCandidate, object[]) protected override object CreateInstance(CreationContext context, ConstructorCandidate constructor, object[] arguments) Parameters context CreationContext constructor ConstructorCandidate arguments object[] Returns object CreateInstanceInternal(ConstructorCandidate, object[], Type) protected object CreateInstanceInternal(ConstructorCandidate constructor, object[] arguments, Type impl_type) Parameters constructor ConstructorCandidate arguments object[] impl_type Type Returns object"
  },
  "api/Sportradar.LiveData.Sdk.Services.WindsorExtensions.NonPublicConstructorDependenciesModelInspector.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.WindsorExtensions.NonPublicConstructorDependenciesModelInspector.html",
    "title": "Class NonPublicConstructorDependenciesModelInspector | sportradar.livedata.sdk",
    "keywords": "Class NonPublicConstructorDependenciesModelInspector Namespace Sportradar.LiveData.Sdk.Services.WindsorExtensions Assembly Sportradar.LiveData.Sdk.dll public class NonPublicConstructorDependenciesModelInspector : ConstructorDependenciesModelInspector, IContributeComponentModelConstruction Inheritance object ConstructorDependenciesModelInspector NonPublicConstructorDependenciesModelInspector Implements IContributeComponentModelConstruction Inherited Members ConstructorDependenciesModelInspector.CreateConstructorCandidate(ComponentModel, ConstructorInfo) ConstructorDependenciesModelInspector.IsVisibleToContainer(ConstructorInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ProcessModel(IKernel, ComponentModel) Usually the implementation will look in the configuration property of the model or the service interface, or the implementation looking for something. public override void ProcessModel(IKernel kernel, ComponentModel model) Parameters kernel IKernel The kernel instance model ComponentModel The component model"
  },
  "api/Sportradar.LiveData.Sdk.Services.WindsorExtensions.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.WindsorExtensions.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Services.WindsorExtensions | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Services.WindsorExtensions Classes NonPublicActivator NonPublicConstructorDependenciesModelInspector"
  },
  "api/Sportradar.LiveData.Sdk.Services.html": {
    "href": "api/Sportradar.LiveData.Sdk.Services.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Services | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Services Classes QueueSupervisor Sdk Main entry point for the SDK client application."
  },
  "api/Sportradar.LiveData.Sdk.TestApp.IntegrationTests.ConnectionTest.html": {
    "href": "api/Sportradar.LiveData.Sdk.TestApp.IntegrationTests.ConnectionTest.html",
    "title": "Class ConnectionTest | sportradar.livedata.sdk",
    "keywords": "Class ConnectionTest Namespace Sportradar.LiveData.Sdk.TestApp.IntegrationTests Assembly Sportradar.LiveData.Sdk.Tests.Integration.dll public class ConnectionTest : SdkIntegrationTest, IDisposable Inheritance object SdkIntegrationTest ConnectionTest Implements IDisposable Inherited Members SdkIntegrationTest.sdkInstance SdkIntegrationTest.Dispose() SdkIntegrationTest.Stop() SdkIntegrationTest.SubscribeToEvents() SdkIntegrationTest.UnsubscribeFromEvents() SdkIntegrationTest.LiveScout_OnOpened(object, ConnectionChangeEventArgs) SdkIntegrationTest.LiveScout_OnClosed(object, ConnectionChangeEventArgs) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ConnectionTest() public ConnectionTest() Methods Sdk_ShouldOpenConnectionAfterStart() [Fact] public Task Sdk_ShouldOpenConnectionAfterStart() Returns Task"
  },
  "api/Sportradar.LiveData.Sdk.TestApp.IntegrationTests.MatchListTest.html": {
    "href": "api/Sportradar.LiveData.Sdk.TestApp.IntegrationTests.MatchListTest.html",
    "title": "Class MatchListTest | sportradar.livedata.sdk",
    "keywords": "Class MatchListTest Namespace Sportradar.LiveData.Sdk.TestApp.IntegrationTests Assembly Sportradar.LiveData.Sdk.Tests.Integration.dll public class MatchListTest : SdkIntegrationTest, IDisposable Inheritance object SdkIntegrationTest MatchListTest Implements IDisposable Inherited Members SdkIntegrationTest.sdkInstance SdkIntegrationTest.Dispose() SdkIntegrationTest.Stop() SdkIntegrationTest.SubscribeToEvents() SdkIntegrationTest.UnsubscribeFromEvents() SdkIntegrationTest.LiveScout_OnOpened(object, ConnectionChangeEventArgs) SdkIntegrationTest.LiveScout_OnClosed(object, ConnectionChangeEventArgs) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Sportradar.LiveData.Sdk.TestApp.IntegrationTests.SdkIntegrationTest.html": {
    "href": "api/Sportradar.LiveData.Sdk.TestApp.IntegrationTests.SdkIntegrationTest.html",
    "title": "Class SdkIntegrationTest | sportradar.livedata.sdk",
    "keywords": "Class SdkIntegrationTest Namespace Sportradar.LiveData.Sdk.TestApp.IntegrationTests Assembly Sportradar.LiveData.Sdk.Tests.Integration.dll public abstract class SdkIntegrationTest : IDisposable Inheritance object SdkIntegrationTest Implements IDisposable Derived ConnectionTest MatchListTest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SdkIntegrationTest() public SdkIntegrationTest() Fields sdkInstance protected Sdk sdkInstance Field Value Sdk Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() LiveScout_OnClosed(object, ConnectionChangeEventArgs) protected void LiveScout_OnClosed(object sender, ConnectionChangeEventArgs e) Parameters sender object e ConnectionChangeEventArgs LiveScout_OnOpened(object, ConnectionChangeEventArgs) protected void LiveScout_OnOpened(object sender, ConnectionChangeEventArgs e) Parameters sender object e ConnectionChangeEventArgs Stop() protected virtual void Stop() SubscribeToEvents() protected void SubscribeToEvents() UnsubscribeFromEvents() protected void UnsubscribeFromEvents()"
  },
  "api/Sportradar.LiveData.Sdk.TestApp.IntegrationTests.html": {
    "href": "api/Sportradar.LiveData.Sdk.TestApp.IntegrationTests.html",
    "title": "Namespace Sportradar.LiveData.Sdk.TestApp.IntegrationTests | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.TestApp.IntegrationTests Classes ConnectionTest MatchListTest SdkIntegrationTest"
  },
  "api/Sportradar.LiveData.Sdk.TestApp.LiveScoutTest.html": {
    "href": "api/Sportradar.LiveData.Sdk.TestApp.LiveScoutTest.html",
    "title": "Class LiveScoutTest | sportradar.livedata.sdk",
    "keywords": "Class LiveScoutTest Namespace Sportradar.LiveData.Sdk.TestApp Assembly Sportradar.LiveData.Sdk.TestApp.dll public class LiveScoutTest Inheritance object LiveScoutTest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LiveScoutTest() public LiveScoutTest() Methods Run() public void Run()"
  },
  "api/Sportradar.LiveData.Sdk.TestApp.Program.html": {
    "href": "api/Sportradar.LiveData.Sdk.TestApp.Program.html",
    "title": "Class Program | sportradar.livedata.sdk",
    "keywords": "Class Program Namespace Sportradar.LiveData.Sdk.TestApp Assembly Sportradar.LiveData.Sdk.TestApp.dll public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Sportradar.LiveData.Sdk.TestApp.html": {
    "href": "api/Sportradar.LiveData.Sdk.TestApp.html",
    "title": "Namespace Sportradar.LiveData.Sdk.TestApp | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.TestApp Classes LiveScoutTest Program"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.Common.Entities.WhenTeamsReversedIsOne.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.Common.Entities.WhenTeamsReversedIsOne.html",
    "title": "Class WhenTeamsReversedIsOne | sportradar.livedata.sdk",
    "keywords": "Class WhenTeamsReversedIsOne Namespace Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.Common.Entities Assembly Sportradar.LiveData.Sdk.Tests.Unit.dll public class WhenTeamsReversedIsOne : UnitTestFor<MatchHeader>, IUnitTestFor<MatchHeader> Inheritance object UnitTestFor<MatchHeader> WhenTeamsReversedIsOne Implements IUnitTestFor<MatchHeader> Inherited Members UnitTestFor<MatchHeader>.TestObject UnitTestFor<MatchHeader>.GetMockOf<TMock>() UnitTestFor<MatchHeader>.CreateTestObject() UnitTestFor<MatchHeader>.Given() UnitTestFor<MatchHeader>.GetMocks() UnitTestFor<MatchHeader>.When() UnitTestFor<MatchHeader>.WhenAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Then_it_returns_not_confirmed() [Fact] public void Then_it_returns_not_confirmed()"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.Common.Entities.WhenTeamsReversedIsTwo.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.Common.Entities.WhenTeamsReversedIsTwo.html",
    "title": "Class WhenTeamsReversedIsTwo | sportradar.livedata.sdk",
    "keywords": "Class WhenTeamsReversedIsTwo Namespace Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.Common.Entities Assembly Sportradar.LiveData.Sdk.Tests.Unit.dll public class WhenTeamsReversedIsTwo : UnitTestFor<MatchHeader>, IUnitTestFor<MatchHeader> Inheritance object UnitTestFor<MatchHeader> WhenTeamsReversedIsTwo Implements IUnitTestFor<MatchHeader> Inherited Members UnitTestFor<MatchHeader>.TestObject UnitTestFor<MatchHeader>.GetMockOf<TMock>() UnitTestFor<MatchHeader>.CreateTestObject() UnitTestFor<MatchHeader>.Given() UnitTestFor<MatchHeader>.GetMocks() UnitTestFor<MatchHeader>.When() UnitTestFor<MatchHeader>.WhenAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Then_it_returns_reversed() [Fact] public void Then_it_returns_reversed()"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.Common.Entities.WhenTeamsReversedIsUndefined.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.Common.Entities.WhenTeamsReversedIsUndefined.html",
    "title": "Class WhenTeamsReversedIsUndefined | sportradar.livedata.sdk",
    "keywords": "Class WhenTeamsReversedIsUndefined Namespace Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.Common.Entities Assembly Sportradar.LiveData.Sdk.Tests.Unit.dll public class WhenTeamsReversedIsUndefined : UnitTestFor<MatchHeader>, IUnitTestFor<MatchHeader> Inheritance object UnitTestFor<MatchHeader> WhenTeamsReversedIsUndefined Implements IUnitTestFor<MatchHeader> Inherited Members UnitTestFor<MatchHeader>.TestObject UnitTestFor<MatchHeader>.GetMockOf<TMock>() UnitTestFor<MatchHeader>.CreateTestObject() UnitTestFor<MatchHeader>.Given() UnitTestFor<MatchHeader>.GetMocks() UnitTestFor<MatchHeader>.When() UnitTestFor<MatchHeader>.WhenAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Then_it_returns_default() [Fact] public void Then_it_returns_default()"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.Common.Entities.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.Common.Entities.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.Common.Entities | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.Common.Entities Classes WhenTeamsReversedIsOne WhenTeamsReversedIsTwo WhenTeamsReversedIsUndefined"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout.UnitTestForLiveScoutEntityFactory-1.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout.UnitTestForLiveScoutEntityFactory-1.html",
    "title": "Class UnitTestForLiveScoutEntityFactory<TResult> | sportradar.livedata.sdk",
    "keywords": "Class UnitTestForLiveScoutEntityFactory<TResult> Namespace Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout Assembly Sportradar.LiveData.Sdk.Tests.Unit.dll public abstract class UnitTestForLiveScoutEntityFactory<TResult> : UnitTestFor<LiveScoutEntityFactory>, IUnitTestFor<LiveScoutEntityFactory> Type Parameters TResult Inheritance object UnitTestFor<LiveScoutEntityFactory> UnitTestForLiveScoutEntityFactory<TResult> Implements IUnitTestFor<LiveScoutEntityFactory> Derived WhenBuildingFakeBetStop WhenBuildingManagerForAwayTeam WhenBuildingManagerForHomeTeam WhenBuildingManagerForUndefinedTeam WhenBuildingMatchBookingMatchNotSpecified WhenBuildingMatchBookingMatchSpecified WhenBuildingMatchData WhenBuildingMatchFormat WhenBuildingMatchHeaderAndFeedTypeIsNotFullPaginated WhenBuildingMatchHeaderForPaginatedFeed WhenBuildingMatchUpdateWithScoutEvent WhenBuildingMatchUpdateWithStatisticsEvent WhenBuildingMatchUpdateWithSubTeams Inherited Members UnitTestFor<LiveScoutEntityFactory>.TestObject UnitTestFor<LiveScoutEntityFactory>.GetMockOf<TMock>() UnitTestFor<LiveScoutEntityFactory>.CreateTestObject() UnitTestFor<LiveScoutEntityFactory>.Given() UnitTestFor<LiveScoutEntityFactory>.GetMocks() UnitTestFor<LiveScoutEntityFactory>.When() UnitTestFor<LiveScoutEntityFactory>.WhenAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields EventTypeBetStop protected const int EventTypeBetStop = 1011 Field Value int Result protected TResult Result Field Value TResult TestMatchId protected const long TestMatchId = 123 Field Value long"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout.WhenBuildingFakeBetStop.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout.WhenBuildingFakeBetStop.html",
    "title": "Class WhenBuildingFakeBetStop | sportradar.livedata.sdk",
    "keywords": "Class WhenBuildingFakeBetStop Namespace Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout Assembly Sportradar.LiveData.Sdk.Tests.Unit.dll public class WhenBuildingFakeBetStop : UnitTestForLiveScoutEntityFactory<MatchUpdate>, IUnitTestFor<LiveScoutEntityFactory> Inheritance object UnitTestFor<LiveScoutEntityFactory> UnitTestForLiveScoutEntityFactory<MatchUpdate> WhenBuildingFakeBetStop Implements IUnitTestFor<LiveScoutEntityFactory> Inherited Members UnitTestForLiveScoutEntityFactory<MatchUpdate>.EventTypeBetStop UnitTestForLiveScoutEntityFactory<MatchUpdate>.TestMatchId UnitTestForLiveScoutEntityFactory<MatchUpdate>.Result UnitTestFor<LiveScoutEntityFactory>.TestObject UnitTestFor<LiveScoutEntityFactory>.GetMockOf<TMock>() UnitTestFor<LiveScoutEntityFactory>.CreateTestObject() UnitTestFor<LiveScoutEntityFactory>.Given() UnitTestFor<LiveScoutEntityFactory>.GetMocks() UnitTestFor<LiveScoutEntityFactory>.WhenAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Then_event_has_event_type_betstop() [Fact] public void Then_event_has_event_type_betstop() Then_event_has_expected_side() [Fact] public void Then_event_has_expected_side() Then_event_has_expected_time() [Fact] public void Then_event_has_expected_time() Then_it_has_a_single_event() [Fact] public void Then_it_has_a_single_event() Then_match_header_bet_status_is_betstop() [Fact] public void Then_match_header_bet_status_is_betstop() Then_match_header_has_expected_match_id() [Fact] public void Then_match_header_has_expected_match_id() Then_match_header_type_of_feed_is_delta() [Fact] public void Then_match_header_type_of_feed_is_delta() Then_match_status_is_undefined() [Fact] public void Then_match_status_is_undefined() When() Overridable method used to capture test actions. protected override void When()"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout.WhenBuildingManagerForAwayTeam.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout.WhenBuildingManagerForAwayTeam.html",
    "title": "Class WhenBuildingManagerForAwayTeam | sportradar.livedata.sdk",
    "keywords": "Class WhenBuildingManagerForAwayTeam Namespace Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout Assembly Sportradar.LiveData.Sdk.Tests.Unit.dll public class WhenBuildingManagerForAwayTeam : UnitTestForLiveScoutEntityFactory<Manager>, IUnitTestFor<LiveScoutEntityFactory> Inheritance object UnitTestFor<LiveScoutEntityFactory> UnitTestForLiveScoutEntityFactory<Manager> WhenBuildingManagerForAwayTeam Implements IUnitTestFor<LiveScoutEntityFactory> Inherited Members UnitTestForLiveScoutEntityFactory<Manager>.EventTypeBetStop UnitTestForLiveScoutEntityFactory<Manager>.TestMatchId UnitTestForLiveScoutEntityFactory<Manager>.Result UnitTestFor<LiveScoutEntityFactory>.TestObject UnitTestFor<LiveScoutEntityFactory>.GetMockOf<TMock>() UnitTestFor<LiveScoutEntityFactory>.CreateTestObject() UnitTestFor<LiveScoutEntityFactory>.Given() UnitTestFor<LiveScoutEntityFactory>.GetMocks() UnitTestFor<LiveScoutEntityFactory>.WhenAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Then_it_has_the_expected_id() [Fact] public void Then_it_has_the_expected_id() Then_it_has_the_expected_name() [Fact] public void Then_it_has_the_expected_name() Then_it_has_the_expected_team() [Fact] public void Then_it_has_the_expected_team() When() Overridable method used to capture test actions. protected override void When()"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout.WhenBuildingManagerForHomeTeam.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout.WhenBuildingManagerForHomeTeam.html",
    "title": "Class WhenBuildingManagerForHomeTeam | sportradar.livedata.sdk",
    "keywords": "Class WhenBuildingManagerForHomeTeam Namespace Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout Assembly Sportradar.LiveData.Sdk.Tests.Unit.dll public class WhenBuildingManagerForHomeTeam : UnitTestForLiveScoutEntityFactory<Manager>, IUnitTestFor<LiveScoutEntityFactory> Inheritance object UnitTestFor<LiveScoutEntityFactory> UnitTestForLiveScoutEntityFactory<Manager> WhenBuildingManagerForHomeTeam Implements IUnitTestFor<LiveScoutEntityFactory> Inherited Members UnitTestForLiveScoutEntityFactory<Manager>.EventTypeBetStop UnitTestForLiveScoutEntityFactory<Manager>.TestMatchId UnitTestForLiveScoutEntityFactory<Manager>.Result UnitTestFor<LiveScoutEntityFactory>.TestObject UnitTestFor<LiveScoutEntityFactory>.GetMockOf<TMock>() UnitTestFor<LiveScoutEntityFactory>.CreateTestObject() UnitTestFor<LiveScoutEntityFactory>.Given() UnitTestFor<LiveScoutEntityFactory>.GetMocks() UnitTestFor<LiveScoutEntityFactory>.WhenAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Then_it_has_the_expected_id() [Fact] public void Then_it_has_the_expected_id() Then_it_has_the_expected_name() [Fact] public void Then_it_has_the_expected_name() Then_it_has_the_expected_team() [Fact] public void Then_it_has_the_expected_team() When() Overridable method used to capture test actions. protected override void When()"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout.WhenBuildingManagerForUndefinedTeam.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout.WhenBuildingManagerForUndefinedTeam.html",
    "title": "Class WhenBuildingManagerForUndefinedTeam | sportradar.livedata.sdk",
    "keywords": "Class WhenBuildingManagerForUndefinedTeam Namespace Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout Assembly Sportradar.LiveData.Sdk.Tests.Unit.dll public class WhenBuildingManagerForUndefinedTeam : UnitTestForLiveScoutEntityFactory<Manager>, IUnitTestFor<LiveScoutEntityFactory> Inheritance object UnitTestFor<LiveScoutEntityFactory> UnitTestForLiveScoutEntityFactory<Manager> WhenBuildingManagerForUndefinedTeam Implements IUnitTestFor<LiveScoutEntityFactory> Inherited Members UnitTestForLiveScoutEntityFactory<Manager>.EventTypeBetStop UnitTestForLiveScoutEntityFactory<Manager>.TestMatchId UnitTestForLiveScoutEntityFactory<Manager>.Result UnitTestFor<LiveScoutEntityFactory>.TestObject UnitTestFor<LiveScoutEntityFactory>.GetMockOf<TMock>() UnitTestFor<LiveScoutEntityFactory>.CreateTestObject() UnitTestFor<LiveScoutEntityFactory>.Given() UnitTestFor<LiveScoutEntityFactory>.GetMocks() UnitTestFor<LiveScoutEntityFactory>.WhenAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Then_it_has_the_expected_id() [Fact] public void Then_it_has_the_expected_id() Then_it_has_the_expected_name() [Fact] public void Then_it_has_the_expected_name() Then_it_has_the_expected_team() [Fact] public void Then_it_has_the_expected_team() When() Overridable method used to capture test actions. protected override void When()"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout.WhenBuildingMatchBookingMatchNotSpecified.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout.WhenBuildingMatchBookingMatchNotSpecified.html",
    "title": "Class WhenBuildingMatchBookingMatchNotSpecified | sportradar.livedata.sdk",
    "keywords": "Class WhenBuildingMatchBookingMatchNotSpecified Namespace Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout Assembly Sportradar.LiveData.Sdk.Tests.Unit.dll public class WhenBuildingMatchBookingMatchNotSpecified : UnitTestForLiveScoutEntityFactory<MatchBooking>, IUnitTestFor<LiveScoutEntityFactory> Inheritance object UnitTestFor<LiveScoutEntityFactory> UnitTestForLiveScoutEntityFactory<MatchBooking> WhenBuildingMatchBookingMatchNotSpecified Implements IUnitTestFor<LiveScoutEntityFactory> Inherited Members UnitTestForLiveScoutEntityFactory<MatchBooking>.EventTypeBetStop UnitTestForLiveScoutEntityFactory<MatchBooking>.TestMatchId UnitTestForLiveScoutEntityFactory<MatchBooking>.Result UnitTestFor<LiveScoutEntityFactory>.TestObject UnitTestFor<LiveScoutEntityFactory>.GetMockOf<TMock>() UnitTestFor<LiveScoutEntityFactory>.CreateTestObject() UnitTestFor<LiveScoutEntityFactory>.Given() UnitTestFor<LiveScoutEntityFactory>.GetMocks() UnitTestFor<LiveScoutEntityFactory>.WhenAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Then_it_has_expected_match_id() [Fact] public void Then_it_has_expected_match_id() Then_it_has_expected_message() [Fact] public void Then_it_has_expected_message() Then_it_has_expected_result() [Fact] public void Then_it_has_expected_result() When() Overridable method used to capture test actions. protected override void When()"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout.WhenBuildingMatchBookingMatchSpecified.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout.WhenBuildingMatchBookingMatchSpecified.html",
    "title": "Class WhenBuildingMatchBookingMatchSpecified | sportradar.livedata.sdk",
    "keywords": "Class WhenBuildingMatchBookingMatchSpecified Namespace Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout Assembly Sportradar.LiveData.Sdk.Tests.Unit.dll public class WhenBuildingMatchBookingMatchSpecified : UnitTestForLiveScoutEntityFactory<MatchBooking>, IUnitTestFor<LiveScoutEntityFactory> Inheritance object UnitTestFor<LiveScoutEntityFactory> UnitTestForLiveScoutEntityFactory<MatchBooking> WhenBuildingMatchBookingMatchSpecified Implements IUnitTestFor<LiveScoutEntityFactory> Inherited Members UnitTestForLiveScoutEntityFactory<MatchBooking>.EventTypeBetStop UnitTestForLiveScoutEntityFactory<MatchBooking>.TestMatchId UnitTestForLiveScoutEntityFactory<MatchBooking>.Result UnitTestFor<LiveScoutEntityFactory>.TestObject UnitTestFor<LiveScoutEntityFactory>.GetMockOf<TMock>() UnitTestFor<LiveScoutEntityFactory>.CreateTestObject() UnitTestFor<LiveScoutEntityFactory>.Given() UnitTestFor<LiveScoutEntityFactory>.GetMocks() UnitTestFor<LiveScoutEntityFactory>.WhenAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Then_it_has_expected_match_id() [Fact] public void Then_it_has_expected_match_id() Then_it_has_expected_message() [Fact] public void Then_it_has_expected_message() Then_it_has_expected_result() [Fact] public void Then_it_has_expected_result() When() Overridable method used to capture test actions. protected override void When()"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout.WhenBuildingMatchData.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout.WhenBuildingMatchData.html",
    "title": "Class WhenBuildingMatchData | sportradar.livedata.sdk",
    "keywords": "Class WhenBuildingMatchData Namespace Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout Assembly Sportradar.LiveData.Sdk.Tests.Unit.dll public class WhenBuildingMatchData : UnitTestForLiveScoutEntityFactory<MatchData>, IUnitTestFor<LiveScoutEntityFactory> Inheritance object UnitTestFor<LiveScoutEntityFactory> UnitTestForLiveScoutEntityFactory<MatchData> WhenBuildingMatchData Implements IUnitTestFor<LiveScoutEntityFactory> Inherited Members UnitTestForLiveScoutEntityFactory<MatchData>.EventTypeBetStop UnitTestForLiveScoutEntityFactory<MatchData>.TestMatchId UnitTestForLiveScoutEntityFactory<MatchData>.Result UnitTestFor<LiveScoutEntityFactory>.TestObject UnitTestFor<LiveScoutEntityFactory>.GetMockOf<TMock>() UnitTestFor<LiveScoutEntityFactory>.CreateTestObject() UnitTestFor<LiveScoutEntityFactory>.Given() UnitTestFor<LiveScoutEntityFactory>.GetMocks() UnitTestFor<LiveScoutEntityFactory>.WhenAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Then_it_has_expected_match_id() [Fact] public void Then_it_has_expected_match_id() Then_it_has_expected_remaining_time_period() [Fact] public void Then_it_has_expected_remaining_time_period() Then_it_has_expected_time() [Fact] public void Then_it_has_expected_time() When() Overridable method used to capture test actions. protected override void When()"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout.WhenBuildingMatchFormat.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout.WhenBuildingMatchFormat.html",
    "title": "Class WhenBuildingMatchFormat | sportradar.livedata.sdk",
    "keywords": "Class WhenBuildingMatchFormat Namespace Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout Assembly Sportradar.LiveData.Sdk.Tests.Unit.dll public class WhenBuildingMatchFormat : UnitTestForLiveScoutEntityFactory<List<Format>>, IUnitTestFor<LiveScoutEntityFactory> Inheritance object UnitTestFor<LiveScoutEntityFactory> UnitTestForLiveScoutEntityFactory<List<Format>> WhenBuildingMatchFormat Implements IUnitTestFor<LiveScoutEntityFactory> Inherited Members UnitTestForLiveScoutEntityFactory<List<Format>>.EventTypeBetStop UnitTestForLiveScoutEntityFactory<List<Format>>.TestMatchId UnitTestForLiveScoutEntityFactory<List<Format>>.Result UnitTestFor<LiveScoutEntityFactory>.TestObject UnitTestFor<LiveScoutEntityFactory>.GetMockOf<TMock>() UnitTestFor<LiveScoutEntityFactory>.CreateTestObject() UnitTestFor<LiveScoutEntityFactory>.Given() UnitTestFor<LiveScoutEntityFactory>.GetMocks() UnitTestFor<LiveScoutEntityFactory>.WhenAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Then_it_has_limited_overs_type() [Fact] public void Then_it_has_limited_overs_type() Then_it_has_one_point_conversion_yard_line() [Fact] public void Then_it_has_one_point_conversion_yard_line() Then_it_has_uses_overs_type() [Fact] public void Then_it_has_uses_overs_type() Then_match_format_is_not_empty() [Fact] public void Then_match_format_is_not_empty() When() Overridable method used to capture test actions. protected override void When()"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout.WhenBuildingMatchHeaderAndFeedTypeIsNotFullPaginated.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout.WhenBuildingMatchHeaderAndFeedTypeIsNotFullPaginated.html",
    "title": "Class WhenBuildingMatchHeaderAndFeedTypeIsNotFullPaginated | sportradar.livedata.sdk",
    "keywords": "Class WhenBuildingMatchHeaderAndFeedTypeIsNotFullPaginated Namespace Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout Assembly Sportradar.LiveData.Sdk.Tests.Unit.dll public class WhenBuildingMatchHeaderAndFeedTypeIsNotFullPaginated : UnitTestForLiveScoutEntityFactory<MatchHeader>, IUnitTestFor<LiveScoutEntityFactory> Inheritance object UnitTestFor<LiveScoutEntityFactory> UnitTestForLiveScoutEntityFactory<MatchHeader> WhenBuildingMatchHeaderAndFeedTypeIsNotFullPaginated Implements IUnitTestFor<LiveScoutEntityFactory> Inherited Members UnitTestForLiveScoutEntityFactory<MatchHeader>.EventTypeBetStop UnitTestForLiveScoutEntityFactory<MatchHeader>.TestMatchId UnitTestForLiveScoutEntityFactory<MatchHeader>.Result UnitTestFor<LiveScoutEntityFactory>.TestObject UnitTestFor<LiveScoutEntityFactory>.GetMockOf<TMock>() UnitTestFor<LiveScoutEntityFactory>.CreateTestObject() UnitTestFor<LiveScoutEntityFactory>.Given() UnitTestFor<LiveScoutEntityFactory>.GetMocks() UnitTestFor<LiveScoutEntityFactory>.WhenAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Then_it_does_not_have_pagination() [Fact] public void Then_it_does_not_have_pagination() When() Overridable method used to capture test actions. protected override void When()"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout.WhenBuildingMatchHeaderForPaginatedFeed.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout.WhenBuildingMatchHeaderForPaginatedFeed.html",
    "title": "Class WhenBuildingMatchHeaderForPaginatedFeed | sportradar.livedata.sdk",
    "keywords": "Class WhenBuildingMatchHeaderForPaginatedFeed Namespace Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout Assembly Sportradar.LiveData.Sdk.Tests.Unit.dll public class WhenBuildingMatchHeaderForPaginatedFeed : UnitTestForLiveScoutEntityFactory<MatchHeader>, IUnitTestFor<LiveScoutEntityFactory> Inheritance object UnitTestFor<LiveScoutEntityFactory> UnitTestForLiveScoutEntityFactory<MatchHeader> WhenBuildingMatchHeaderForPaginatedFeed Implements IUnitTestFor<LiveScoutEntityFactory> Inherited Members UnitTestForLiveScoutEntityFactory<MatchHeader>.EventTypeBetStop UnitTestForLiveScoutEntityFactory<MatchHeader>.TestMatchId UnitTestForLiveScoutEntityFactory<MatchHeader>.Result UnitTestFor<LiveScoutEntityFactory>.TestObject UnitTestFor<LiveScoutEntityFactory>.GetMockOf<TMock>() UnitTestFor<LiveScoutEntityFactory>.CreateTestObject() UnitTestFor<LiveScoutEntityFactory>.Given() UnitTestFor<LiveScoutEntityFactory>.GetMocks() UnitTestFor<LiveScoutEntityFactory>.WhenAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Then_it_has_page() [Fact] public void Then_it_has_page() Then_it_has_pagination() [Fact] public void Then_it_has_pagination() Then_it_has_total_pages() [Fact] public void Then_it_has_total_pages() Then_it_has_uuid() [Fact] public void Then_it_has_uuid() When() Overridable method used to capture test actions. protected override void When()"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout.WhenBuildingMatchUpdateWithScoutEvent.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout.WhenBuildingMatchUpdateWithScoutEvent.html",
    "title": "Class WhenBuildingMatchUpdateWithScoutEvent | sportradar.livedata.sdk",
    "keywords": "Class WhenBuildingMatchUpdateWithScoutEvent Namespace Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout Assembly Sportradar.LiveData.Sdk.Tests.Unit.dll public class WhenBuildingMatchUpdateWithScoutEvent : UnitTestForLiveScoutEntityFactory<MatchUpdate>, IUnitTestFor<LiveScoutEntityFactory> Inheritance object UnitTestFor<LiveScoutEntityFactory> UnitTestForLiveScoutEntityFactory<MatchUpdate> WhenBuildingMatchUpdateWithScoutEvent Implements IUnitTestFor<LiveScoutEntityFactory> Inherited Members UnitTestForLiveScoutEntityFactory<MatchUpdate>.EventTypeBetStop UnitTestForLiveScoutEntityFactory<MatchUpdate>.TestMatchId UnitTestForLiveScoutEntityFactory<MatchUpdate>.Result UnitTestFor<LiveScoutEntityFactory>.TestObject UnitTestFor<LiveScoutEntityFactory>.GetMockOf<TMock>() UnitTestFor<LiveScoutEntityFactory>.CreateTestObject() UnitTestFor<LiveScoutEntityFactory>.Given() UnitTestFor<LiveScoutEntityFactory>.GetMocks() UnitTestFor<LiveScoutEntityFactory>.WhenAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Then_it_has_extrainfosoccer() [Fact] public void Then_it_has_extrainfosoccer() Then_it_has_extrainfowaterpolo() [Fact] public void Then_it_has_extrainfowaterpolo() When() Overridable method used to capture test actions. protected override void When()"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout.WhenBuildingMatchUpdateWithStatisticsEvent.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout.WhenBuildingMatchUpdateWithStatisticsEvent.html",
    "title": "Class WhenBuildingMatchUpdateWithStatisticsEvent | sportradar.livedata.sdk",
    "keywords": "Class WhenBuildingMatchUpdateWithStatisticsEvent Namespace Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout Assembly Sportradar.LiveData.Sdk.Tests.Unit.dll public class WhenBuildingMatchUpdateWithStatisticsEvent : UnitTestForLiveScoutEntityFactory<MatchUpdate>, IUnitTestFor<LiveScoutEntityFactory> Inheritance object UnitTestFor<LiveScoutEntityFactory> UnitTestForLiveScoutEntityFactory<MatchUpdate> WhenBuildingMatchUpdateWithStatisticsEvent Implements IUnitTestFor<LiveScoutEntityFactory> Inherited Members UnitTestForLiveScoutEntityFactory<MatchUpdate>.EventTypeBetStop UnitTestForLiveScoutEntityFactory<MatchUpdate>.TestMatchId UnitTestForLiveScoutEntityFactory<MatchUpdate>.Result UnitTestFor<LiveScoutEntityFactory>.TestObject UnitTestFor<LiveScoutEntityFactory>.GetMockOf<TMock>() UnitTestFor<LiveScoutEntityFactory>.CreateTestObject() UnitTestFor<LiveScoutEntityFactory>.Given() UnitTestFor<LiveScoutEntityFactory>.GetMocks() UnitTestFor<LiveScoutEntityFactory>.WhenAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Then_it_has_statistics() [Fact] public void Then_it_has_statistics() When() Overridable method used to capture test actions. protected override void When()"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout.WhenBuildingMatchUpdateWithSubTeams.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout.WhenBuildingMatchUpdateWithSubTeams.html",
    "title": "Class WhenBuildingMatchUpdateWithSubTeams | sportradar.livedata.sdk",
    "keywords": "Class WhenBuildingMatchUpdateWithSubTeams Namespace Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout Assembly Sportradar.LiveData.Sdk.Tests.Unit.dll public class WhenBuildingMatchUpdateWithSubTeams : UnitTestForLiveScoutEntityFactory<MatchUpdate>, IUnitTestFor<LiveScoutEntityFactory> Inheritance object UnitTestFor<LiveScoutEntityFactory> UnitTestForLiveScoutEntityFactory<MatchUpdate> WhenBuildingMatchUpdateWithSubTeams Implements IUnitTestFor<LiveScoutEntityFactory> Inherited Members UnitTestForLiveScoutEntityFactory<MatchUpdate>.EventTypeBetStop UnitTestForLiveScoutEntityFactory<MatchUpdate>.TestMatchId UnitTestForLiveScoutEntityFactory<MatchUpdate>.Result UnitTestFor<LiveScoutEntityFactory>.TestObject UnitTestFor<LiveScoutEntityFactory>.GetMockOf<TMock>() UnitTestFor<LiveScoutEntityFactory>.CreateTestObject() UnitTestFor<LiveScoutEntityFactory>.Given() UnitTestFor<LiveScoutEntityFactory>.GetMocks() UnitTestFor<LiveScoutEntityFactory>.WhenAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Then_it_has_list_of_subteams() [Fact] public void Then_it_has_list_of_subteams() Then_it_has_subteam() [Fact] public void Then_it_has_subteam() When() Overridable method used to capture test actions. protected override void When()"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Tests.Unit.FeedProviders.LiveScout Classes UnitTestForLiveScoutEntityFactory<TResult> WhenBuildingFakeBetStop WhenBuildingManagerForAwayTeam WhenBuildingManagerForHomeTeam WhenBuildingManagerForUndefinedTeam WhenBuildingMatchBookingMatchNotSpecified WhenBuildingMatchBookingMatchSpecified WhenBuildingMatchData WhenBuildingMatchFormat WhenBuildingMatchHeaderAndFeedTypeIsNotFullPaginated WhenBuildingMatchHeaderForPaginatedFeed WhenBuildingMatchUpdateWithScoutEvent WhenBuildingMatchUpdateWithStatisticsEvent WhenBuildingMatchUpdateWithSubTeams"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.IUnitTestFor-1.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.IUnitTestFor-1.html",
    "title": "Interface IUnitTestFor<T> | sportradar.livedata.sdk",
    "keywords": "Interface IUnitTestFor<T> Namespace Sportradar.LiveData.Sdk.Tests.Unit Assembly Sportradar.LiveData.Sdk.Tests.Unit.dll public interface IUnitTestFor<out T> Type Parameters T Properties TestObject T TestObject { get; } Property Value T"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities.UnitTestForHomeAwayTest-1.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities.UnitTestForHomeAwayTest-1.html",
    "title": "Class UnitTestForHomeAwayTest<T> | sportradar.livedata.sdk",
    "keywords": "Class UnitTestForHomeAwayTest<T> Namespace Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities Assembly Sportradar.LiveData.Sdk.Tests.Unit.dll public class UnitTestForHomeAwayTest<T> : UnitTestFor<HomeAway<T>>, IUnitTestFor<HomeAway<T>> Type Parameters T Inheritance object UnitTestFor<HomeAway<T>> UnitTestForHomeAwayTest<T> Implements IUnitTestFor<HomeAway<T>> Derived WhenHomeAwayIsDouble WhenHomeAwayIsInteger WhenHomeAwayIsNullableInteger Inherited Members UnitTestFor<HomeAway<T>>.TestObject UnitTestFor<HomeAway<T>>.GetMockOf<TMock>() UnitTestFor<HomeAway<T>>.CreateTestObject() UnitTestFor<HomeAway<T>>.Given() UnitTestFor<HomeAway<T>>.GetMocks() UnitTestFor<HomeAway<T>>.When() UnitTestFor<HomeAway<T>>.WhenAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities.UnitTestForIdNameTuple.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities.UnitTestForIdNameTuple.html",
    "title": "Class UnitTestForIdNameTuple | sportradar.livedata.sdk",
    "keywords": "Class UnitTestForIdNameTuple Namespace Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities Assembly Sportradar.LiveData.Sdk.Tests.Unit.dll public class UnitTestForIdNameTuple : UnitTestFor<IdNameTuple>, IUnitTestFor<IdNameTuple> Inheritance object UnitTestFor<IdNameTuple> UnitTestForIdNameTuple Implements IUnitTestFor<IdNameTuple> Derived WhenIdIsNotSpecified WhenIdIsSpecified WhenNameIsNotNull WhenNameIsNull WhenUniqueIdIsNotSpecified WhenUniqueIdIsSpecified Inherited Members UnitTestFor<IdNameTuple>.TestObject UnitTestFor<IdNameTuple>.GetMockOf<TMock>() UnitTestFor<IdNameTuple>.CreateTestObject() UnitTestFor<IdNameTuple>.Given() UnitTestFor<IdNameTuple>.GetMocks() UnitTestFor<IdNameTuple>.When() UnitTestFor<IdNameTuple>.WhenAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities.WhenHomeAwayIsDouble.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities.WhenHomeAwayIsDouble.html",
    "title": "Class WhenHomeAwayIsDouble | sportradar.livedata.sdk",
    "keywords": "Class WhenHomeAwayIsDouble Namespace Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities Assembly Sportradar.LiveData.Sdk.Tests.Unit.dll public class WhenHomeAwayIsDouble : UnitTestForHomeAwayTest<double>, IUnitTestFor<HomeAway<double>> Inheritance object UnitTestFor<HomeAway<double>> UnitTestForHomeAwayTest<double> WhenHomeAwayIsDouble Implements IUnitTestFor<HomeAway<double>> Inherited Members UnitTestFor<HomeAway<double>>.TestObject UnitTestFor<HomeAway<double>>.GetMockOf<TMock>() UnitTestFor<HomeAway<double>>.Given() UnitTestFor<HomeAway<double>>.GetMocks() UnitTestFor<HomeAway<double>>.When() UnitTestFor<HomeAway<double>>.WhenAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateTestObject() Returns an instance of the test object using AutoFixture to construct the object and mock dependencies. Can be overridden to provide bespoke implementations. protected override void CreateTestObject() Then_it_returns_expected_string() [Fact] public void Then_it_returns_expected_string()"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities.WhenHomeAwayIsInteger.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities.WhenHomeAwayIsInteger.html",
    "title": "Class WhenHomeAwayIsInteger | sportradar.livedata.sdk",
    "keywords": "Class WhenHomeAwayIsInteger Namespace Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities Assembly Sportradar.LiveData.Sdk.Tests.Unit.dll public class WhenHomeAwayIsInteger : UnitTestForHomeAwayTest<int>, IUnitTestFor<HomeAway<int>> Inheritance object UnitTestFor<HomeAway<int>> UnitTestForHomeAwayTest<int> WhenHomeAwayIsInteger Implements IUnitTestFor<HomeAway<int>> Inherited Members UnitTestFor<HomeAway<int>>.TestObject UnitTestFor<HomeAway<int>>.GetMockOf<TMock>() UnitTestFor<HomeAway<int>>.Given() UnitTestFor<HomeAway<int>>.GetMocks() UnitTestFor<HomeAway<int>>.When() UnitTestFor<HomeAway<int>>.WhenAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateTestObject() Returns an instance of the test object using AutoFixture to construct the object and mock dependencies. Can be overridden to provide bespoke implementations. protected override void CreateTestObject() Then_it_returns_expected_string() [Fact] public void Then_it_returns_expected_string()"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities.WhenHomeAwayIsNullableInteger.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities.WhenHomeAwayIsNullableInteger.html",
    "title": "Class WhenHomeAwayIsNullableInteger | sportradar.livedata.sdk",
    "keywords": "Class WhenHomeAwayIsNullableInteger Namespace Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities Assembly Sportradar.LiveData.Sdk.Tests.Unit.dll public class WhenHomeAwayIsNullableInteger : UnitTestForHomeAwayTest<int?>, IUnitTestFor<HomeAway<int?>> Inheritance object UnitTestFor<HomeAway<int?>> UnitTestForHomeAwayTest<int?> WhenHomeAwayIsNullableInteger Implements IUnitTestFor<HomeAway<int?>> Inherited Members UnitTestFor<HomeAway<int?>>.TestObject UnitTestFor<HomeAway<int?>>.GetMockOf<TMock>() UnitTestFor<HomeAway<int?>>.Given() UnitTestFor<HomeAway<int?>>.GetMocks() UnitTestFor<HomeAway<int?>>.When() UnitTestFor<HomeAway<int?>>.WhenAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateTestObject() Returns an instance of the test object using AutoFixture to construct the object and mock dependencies. Can be overridden to provide bespoke implementations. protected override void CreateTestObject() Then_it_returns_expected_string() [Fact] public void Then_it_returns_expected_string()"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities.WhenIdIsNotSpecified.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities.WhenIdIsNotSpecified.html",
    "title": "Class WhenIdIsNotSpecified | sportradar.livedata.sdk",
    "keywords": "Class WhenIdIsNotSpecified Namespace Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities Assembly Sportradar.LiveData.Sdk.Tests.Unit.dll public class WhenIdIsNotSpecified : UnitTestForIdNameTuple, IUnitTestFor<IdNameTuple> Inheritance object UnitTestFor<IdNameTuple> UnitTestForIdNameTuple WhenIdIsNotSpecified Implements IUnitTestFor<IdNameTuple> Inherited Members UnitTestFor<IdNameTuple>.TestObject UnitTestFor<IdNameTuple>.GetMockOf<TMock>() UnitTestFor<IdNameTuple>.Given() UnitTestFor<IdNameTuple>.GetMocks() UnitTestFor<IdNameTuple>.When() UnitTestFor<IdNameTuple>.WhenAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateTestObject() Returns an instance of the test object using AutoFixture to construct the object and mock dependencies. Can be overridden to provide bespoke implementations. protected override void CreateTestObject() Then_id_is_null() [Fact] public void Then_id_is_null()"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities.WhenIdIsSpecified.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities.WhenIdIsSpecified.html",
    "title": "Class WhenIdIsSpecified | sportradar.livedata.sdk",
    "keywords": "Class WhenIdIsSpecified Namespace Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities Assembly Sportradar.LiveData.Sdk.Tests.Unit.dll public class WhenIdIsSpecified : UnitTestForIdNameTuple, IUnitTestFor<IdNameTuple> Inheritance object UnitTestFor<IdNameTuple> UnitTestForIdNameTuple WhenIdIsSpecified Implements IUnitTestFor<IdNameTuple> Inherited Members UnitTestFor<IdNameTuple>.TestObject UnitTestFor<IdNameTuple>.GetMockOf<TMock>() UnitTestFor<IdNameTuple>.Given() UnitTestFor<IdNameTuple>.GetMocks() UnitTestFor<IdNameTuple>.When() UnitTestFor<IdNameTuple>.WhenAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateTestObject() Returns an instance of the test object using AutoFixture to construct the object and mock dependencies. Can be overridden to provide bespoke implementations. protected override void CreateTestObject() Then_id_has_expected_value() [Fact] public void Then_id_has_expected_value() Then_id_is_not_null() [Fact] public void Then_id_is_not_null()"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities.WhenNameIsNotNull.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities.WhenNameIsNotNull.html",
    "title": "Class WhenNameIsNotNull | sportradar.livedata.sdk",
    "keywords": "Class WhenNameIsNotNull Namespace Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities Assembly Sportradar.LiveData.Sdk.Tests.Unit.dll public class WhenNameIsNotNull : UnitTestForIdNameTuple, IUnitTestFor<IdNameTuple> Inheritance object UnitTestFor<IdNameTuple> UnitTestForIdNameTuple WhenNameIsNotNull Implements IUnitTestFor<IdNameTuple> Inherited Members UnitTestFor<IdNameTuple>.TestObject UnitTestFor<IdNameTuple>.GetMockOf<TMock>() UnitTestFor<IdNameTuple>.Given() UnitTestFor<IdNameTuple>.GetMocks() UnitTestFor<IdNameTuple>.When() UnitTestFor<IdNameTuple>.WhenAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateTestObject() Returns an instance of the test object using AutoFixture to construct the object and mock dependencies. Can be overridden to provide bespoke implementations. protected override void CreateTestObject() Then_it_returns_expected_string() [Fact] public void Then_it_returns_expected_string() Then_name_has_expected_value() [Fact] public void Then_name_has_expected_value()"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities.WhenNameIsNull.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities.WhenNameIsNull.html",
    "title": "Class WhenNameIsNull | sportradar.livedata.sdk",
    "keywords": "Class WhenNameIsNull Namespace Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities Assembly Sportradar.LiveData.Sdk.Tests.Unit.dll public class WhenNameIsNull : UnitTestForIdNameTuple, IUnitTestFor<IdNameTuple> Inheritance object UnitTestFor<IdNameTuple> UnitTestForIdNameTuple WhenNameIsNull Implements IUnitTestFor<IdNameTuple> Inherited Members UnitTestFor<IdNameTuple>.TestObject UnitTestFor<IdNameTuple>.GetMockOf<TMock>() UnitTestFor<IdNameTuple>.Given() UnitTestFor<IdNameTuple>.GetMocks() UnitTestFor<IdNameTuple>.When() UnitTestFor<IdNameTuple>.WhenAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateTestObject() Returns an instance of the test object using AutoFixture to construct the object and mock dependencies. Can be overridden to provide bespoke implementations. protected override void CreateTestObject() Then_name_is_empty() [Fact] public void Then_name_is_empty()"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities.WhenUniqueIdIsNotSpecified.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities.WhenUniqueIdIsNotSpecified.html",
    "title": "Class WhenUniqueIdIsNotSpecified | sportradar.livedata.sdk",
    "keywords": "Class WhenUniqueIdIsNotSpecified Namespace Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities Assembly Sportradar.LiveData.Sdk.Tests.Unit.dll public class WhenUniqueIdIsNotSpecified : UnitTestForIdNameTuple, IUnitTestFor<IdNameTuple> Inheritance object UnitTestFor<IdNameTuple> UnitTestForIdNameTuple WhenUniqueIdIsNotSpecified Implements IUnitTestFor<IdNameTuple> Inherited Members UnitTestFor<IdNameTuple>.TestObject UnitTestFor<IdNameTuple>.GetMockOf<TMock>() UnitTestFor<IdNameTuple>.Given() UnitTestFor<IdNameTuple>.GetMocks() UnitTestFor<IdNameTuple>.When() UnitTestFor<IdNameTuple>.WhenAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateTestObject() Returns an instance of the test object using AutoFixture to construct the object and mock dependencies. Can be overridden to provide bespoke implementations. protected override void CreateTestObject() Then_unique_id_is_null() [Fact] public void Then_unique_id_is_null()"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities.WhenUniqueIdIsSpecified.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities.WhenUniqueIdIsSpecified.html",
    "title": "Class WhenUniqueIdIsSpecified | sportradar.livedata.sdk",
    "keywords": "Class WhenUniqueIdIsSpecified Namespace Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities Assembly Sportradar.LiveData.Sdk.Tests.Unit.dll public class WhenUniqueIdIsSpecified : UnitTestForIdNameTuple, IUnitTestFor<IdNameTuple> Inheritance object UnitTestFor<IdNameTuple> UnitTestForIdNameTuple WhenUniqueIdIsSpecified Implements IUnitTestFor<IdNameTuple> Inherited Members UnitTestFor<IdNameTuple>.TestObject UnitTestFor<IdNameTuple>.GetMockOf<TMock>() UnitTestFor<IdNameTuple>.Given() UnitTestFor<IdNameTuple>.GetMocks() UnitTestFor<IdNameTuple>.When() UnitTestFor<IdNameTuple>.WhenAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateTestObject() Returns an instance of the test object using AutoFixture to construct the object and mock dependencies. Can be overridden to provide bespoke implementations. protected override void CreateTestObject() Then_it_returns_expected_string() [Fact] public void Then_it_returns_expected_string() Then_unique_id_has_expected_value() [Fact] public void Then_unique_id_has_expected_value() Then_unique_id_is_not_null() [Fact] public void Then_unique_id_is_not_null()"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Tests.Unit.Providers.Feeds.Common.Entities Classes UnitTestForHomeAwayTest<T> UnitTestForIdNameTuple WhenHomeAwayIsDouble WhenHomeAwayIsInteger WhenHomeAwayIsNullableInteger WhenIdIsNotSpecified WhenIdIsSpecified WhenNameIsNotNull WhenNameIsNull WhenUniqueIdIsNotSpecified WhenUniqueIdIsSpecified"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.UnitTestFor-1.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.UnitTestFor-1.html",
    "title": "Class UnitTestFor<T> | sportradar.livedata.sdk",
    "keywords": "Class UnitTestFor<T> Namespace Sportradar.LiveData.Sdk.Tests.Unit Assembly Sportradar.LiveData.Sdk.Tests.Unit.dll public abstract class UnitTestFor<T> : IUnitTestFor<T> where T : class Type Parameters T Inheritance object UnitTestFor<T> Implements IUnitTestFor<T> Derived WhenTeamsReversedIsOne WhenTeamsReversedIsTwo WhenTeamsReversedIsUndefined UnitTestForLiveScoutEntityFactory<TResult> UnitTestForHomeAwayTest<T> UnitTestForIdNameTuple Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UnitTestFor() public UnitTestFor() Properties TestObject public T TestObject { get; protected set; } Property Value T Methods CreateTestObject() Returns an instance of the test object using AutoFixture to construct the object and mock dependencies. Can be overridden to provide bespoke implementations. protected virtual void CreateTestObject() GetMockOf<TMock>() Returns a mock instance of type TMock. This is the mock instance that will automatically be injected into the test object by CreateTestObject(). protected Mock<TMock> GetMockOf<TMock>() where TMock : class Returns Mock<TMock> Type Parameters TMock The type of the mock. GetMocks() Overridable method used to setup any specific mock dependencies. protected virtual void GetMocks() Given() Overridable method used to arrange the test and setup any specific mock behaviour required. protected virtual void Given() When() Overridable method used to capture test actions. protected virtual void When() WhenAsync() Overridable method used to capture asynchronous test actions. protected virtual Task WhenAsync() Returns Task"
  },
  "api/Sportradar.LiveData.Sdk.Tests.Unit.html": {
    "href": "api/Sportradar.LiveData.Sdk.Tests.Unit.html",
    "title": "Namespace Sportradar.LiveData.Sdk.Tests.Unit | sportradar.livedata.sdk",
    "keywords": "Namespace Sportradar.LiveData.Sdk.Tests.Unit Classes UnitTestFor<T> Interfaces IUnitTestFor<T>"
  },
  "docs/connection-scheme.html": {
    "href": "docs/connection-scheme.html",
    "title": "Connection Scheme | sportradar.livedata.sdk",
    "keywords": "Connection Scheme"
  },
  "index.html": {
    "href": "index.html",
    "title": "Sportradar.LiveData.Sdk | sportradar.livedata.sdk",
    "keywords": "Sportradar.LiveData.Sdk Livedata SDK is a client library that enables easier integration with the Livedata XML feed. SDK exposes XML feed service interface in a more user-friendly way and isolates the client from having to do XML feed parsing, proper connection handling, error recovery, event queuing and dispatching. It also makes a client solution more stable and robust when it comes to feed handling, especially with the release of new and updated XML feed versions. CONFIGURATION SDK configuration is stored in a dedicated section of the bookmaker software configuration file. This is usually app.config or web.config for web projects. Make sure that SDK configuration section is properly configured. A minimal configuration looks like this: <?xml version=\"1.0\" encoding=\"utf-8\"?> <configuration> <configSections> <section name=\"Sdk\" type=\"Sportradar.LiveData.Sdk.Services.SdkConfiguration.Sections.SdkConfigurationSection, Sportradar.LiveData.Sdk\" /> </configSections> <Sdk> <LiveScout ScoutUsername=\"xxx\" ScoutPassword=\"xxx\" /> </Sdk> </configuration> Sportradar.LiveData.Sdk refers to the Sportradar.LiveData.Sdk.dll file and we named the section \"Sdk\". xxx are the correct credentials. Note that configSection needs to be on top of the file and you need to provide the actual credentials. For more configuration options please refer to the documentation under Sportradar.LiveData.Sdk.Services.SdkConfiguration section. Usage Add reference to SDK project In Visual Studio you first need to add a \"Reference\" to Sportradar.LiveData.Sdk.dll in the project or install Sportradar.LiveData.Sdk nuget package. The project is built for .NET 4.8 Framework and .NET 6. Intellisense uses the Sportradar.LiveData.Sdk.xml file (located in the same directory as DLL). Initialize the SDK Sdk.Instance.Initialize(); Here you might want to pass a different configuration section name or pass on your implementation of the IDeadLetterQueue interface if you would like to log and/or report all invalid/undelivered SDK messages and events. Start SDK instance and register for global SDK events Sdk.Instance.OnQueueLimits += OnQueueLimit; Sdk.Instance.Start(); Queue limit notifications are useful to give you alerts when message queue congestion starts to build up (or has settled down) so that you can be proactive about it. Monitor SDK queue statistics By looking at the Sdk.Instance.QueueStats you can see various performance characteristics and statistics of the underlying SDK dispatcher queues. Start SDK provider and register for provider events Start SDK providers for those XML feeds that you intend to use (e.g. LiveScout) if (Sdk.Instance.LiveScout != null) { Sdk.Instance.LiveScout.OnOpened += LiveScout_OnOpened; Sdk.Instance.LiveScout.OnClosed += LiveScout_OnClosed; Sdk.Instance.LiveScout.OnMatchList += OnMatchList; Sdk.Instance.LiveScout.OnMatchStop += OnMatchStop; Sdk.Instance.LiveScout.OnMatchUpdate += OnMatchUpdate; Sdk.Instance.LiveScout.OnScoutInfo += OnScoutInfo; Sdk.Instance.LiveScout.OnMatchBookingReply += OnMatchBookingReply; Sdk.Instance.LiveScout.OnMatchData += OnMatchData; Sdk.Instance.LiveScout.Start(); } else { throw new ApplicationException(\"Error initializing SDK.LiveScout provider\"); } If you don’t call Sdk.Instance.Initialize() accessing Sdk.Instance.LiveScout will throw an InitException. SDK provider(s) will try to connect to the XML feed server and keep the connection alive. If the connection is lost the provider will try to reconnect automatically and you will be informed of this through corresponding events. Stop SDK providers and unregister from provider events In the finally block you can stop all SDK providers and unregister from provider events. if (Sdk.Instance.LiveScout != null) { Sdk.Instance.LiveScout.Stop(); Sdk.Instance.LiveScout.OnOpened -= LiveScout_OnOpened; Sdk.Instance.LiveScout.OnClosed -= LiveScout_OnClosed; Sdk.Instance.LiveScout.OnMatchList -= OnMatchList; Sdk.Instance.LiveScout.OnMatchStop -= OnMatchStop; Sdk.Instance.LiveScout.OnMatchUpdate -= OnMatchUpdate; Sdk.Instance.LiveScout.OnScoutInfo -= OnScoutInfo; Sdk.Instance.LiveScout.OnMatchBookingReply -= OnMatchBookingReply; Sdk.Instance.LiveScout.OnMatchData -= OnMatchData; } Stop the SDK instance and unregister from global SDK events After all SDK providers have been stopped it is time to shut down the main SDK instance. Sdk.Instance.OnQueueLimits -= OnQueueLimit; Sdk.Instance.Stop(); NOTE: Livedata SDK is a singleton. There should be only one active SDK instance per process. If using multiple processes (e.g. failover setup) avoid running SDK instances in parallel, especially if the same access credentials are used. Otherwise you may end up having an inconsistent SDK error recovery state and run into problems due to server-side limits. Logs SDK will make various logs during its operation. Logs are organized into various categories, based on whether these are critical alerts, invalid messages received, configuration updates, message traffic, etc. Level of logging can be configured through each feed configuration element in the \"Sdk\" configuration section as shown in configuration example. Gotchas SDK generates implicit \"bet stop\" message after disconnect and does automatic error recovery. It does however not keep track of bet clearings! If you are disconnected for a long time it may happen that after you come back the match is already over. In that time-frame bets were not accepted (so you are safe) but it might still be necessary to clear the bets placed at the begining of the match. In that (rare) case it is up to you to invoke GetMatchStatus method to obtain bet clearings to do correct pay-outs (if / when required). SDK generates explicit \"bet stop\" message if a client gets disconnected from XML feeds and also performs automatic error recovery on behalf of the client."
  }
}